{
  "version": 3,
  "sources": ["../../src/ts/migrate.ts"],
  "sourcesContent": ["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n/**\n * A migration utility for `@finos/perspective-viewer` and\n * `@finos/perspective-workspace` persisted state objects.  If you have an\n * application which persists tokens returned by the `.save()` method of a\n * Perspective Custom Element, and you want to upgrade Perspective to the latest\n * version, this module is for you!  You know who you are!\n *\n * Say you have a `<perspective-viewer>` Custom Element from\n * `@finos/perspective-viewer>=0.8.3`, and have persisted an arbitrary persistence\n * token object:\n *\n * ```javascript\n * const old_elem = document.querySelector(\"perspective-viewer\");\n * const old_token = await old_elem.save();\n * ```\n *\n * To migrate this token to the version of `@finos/perspective-migrate` itself:\n *\n * ```javascript\n * import {convert} from \"@finos/perspective-viewer`;\n *\n * // ...\n *\n * const new_elem = document.querySelector(\"perspective-viewer\");\n * const new_token = convert(old_token);\n * await new_elem.restore(new_token);\n * ```\n *\n * `convert` can also be imported in node for converting persisted tokens\n * outside the browser.\n *\n * ```javascript\n * const {convert} = require(\"@finos/perspective-viewer/dist/cjs/migrate.js\");\n * ```\n * @param old the layout to convert, in `<perspective-viewer>` or\n * `<perspective-workspace>` format.\n * @param options a `PerspectiveConvertOptions` object specifying the convert\n * options for this call.\n * @returns a layout for either `<perspective-viewer>` or\n * `<perspective-workspace>`, updated to the perspective version of this\n * script's package.\n */\nexport function convert(\n    old: Record<string, unknown> | ArrayBuffer | string,\n    {warn = true, replace_defaults = false}: PerspectiveConvertOptions = {}\n): Record<string, unknown> | ArrayBuffer | string {\n    if (typeof old === \"object\" && !(old instanceof ArrayBuffer)) {\n        const copy = JSON.parse(JSON.stringify(old));\n        if (\"viewers\" in copy && \"detail\" in copy) {\n            return migrate_workspace(copy, {warn, replace_defaults});\n        } else {\n            return migrate_viewer(copy, false, {warn, replace_defaults});\n        }\n    } else {\n        return old;\n    }\n}\n\ntype PerspectiveConvertOptions = {\n    warn?: boolean;\n    replace_defaults?: boolean;\n};\n\n/**\n * Migrate a layout for `<perspective-workspace>`\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_workspace(old, options) {\n    for (const key in old.viewers) {\n        old.viewers[key] = migrate_viewer(old.viewers[key], true, options);\n        if (!(\"master\" in old.viewers[key])) {\n            old.viewers[key].master = false;\n            if (options.warn) {\n                console.warn(\n                    `Deprecated perspective missing attribute \"master\" set to default`\n                );\n            }\n        }\n\n        if (!(\"linked\" in old.viewers[key])) {\n            old.viewers[key].linked = false;\n            if (options.warn) {\n                console.warn(\n                    `Deprecated perspective missing attribute \"linked\" set to default`\n                );\n            }\n        }\n    }\n\n    return old;\n}\n\n/**\n * Migrate a layout for `<perspective-viewer>`\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_viewer(old, omit_attributes, options) {\n    return chain(\n        old,\n        [\n            migrate_group_by,\n            migrate_split_by,\n            migrate_filters,\n            migrate_expressions,\n            options.replace_defaults ? migrate_nulls : false,\n            migrate_plugins,\n            migrate_plugin_config,\n            omit_attributes\n                ? migrate_attributes_workspace\n                : migrate_attributes_viewer,\n        ].filter((x) => !!x),\n        options\n    );\n}\n\n/**\n * Chains functions of `args` and apply to `old`\n * @param old\n * @param args\n * @param options\n * @returns\n */\nfunction chain(old, args, options) {\n    for (const arg of args) {\n        old = arg(old, options);\n    }\n\n    return old;\n}\n\n/**\n * Replace `null` properties with defaults.  This is not strictly behavioral,\n * as new `<perspective-viewer>` treats `null` as an explicit \"reset to default\"\n * instruction.  However, it may be necessary to ensure that `.save()` returns\n * identical results to `convert()`, which may be desirable when migrating a\n * database of layouts.\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_nulls(old, options) {\n    for (const key of [\"group_by\", \"split_by\", \"filter\", \"sort\"]) {\n        if (old[key] === null) {\n            old[key] = [];\n            if (options.warn) {\n                console.warn(\n                    `Deprecated perspective missing attribute \"${key}\" set to default\"`\n                );\n            }\n        }\n\n        if (\"aggregates\" in old && old.aggregates === null) {\n            old.aggregates = {};\n            if (options.warn) {\n                console.warn(\n                    `Deprecated perspective missing attribute \"aggregates\" set to default\"`\n                );\n            }\n        }\n    }\n\n    return old;\n}\n\n/**\n * Helper for alias-replacement migrations\n * @param original\n * @param aliases\n * @returns\n */\nfunction _migrate_field_aliases(original, aliases) {\n    return function (old, options) {\n        let count = 0;\n        for (const pivot of aliases) {\n            if (pivot in old) {\n                if (count++ > 0) {\n                    throw new Error(`Duplicate \"${original}\" fields`);\n                }\n\n                old[original] = old[pivot];\n                if (pivot !== original) {\n                    delete old[pivot];\n                    if (options.warn) {\n                        console.warn(\n                            `Deprecated perspective attribute \"${pivot}\" renamed \"${original}\"`\n                        );\n                    }\n                }\n            }\n        }\n\n        return old;\n    };\n}\n\n/**\n * Migrate `group_by` field aliases\n */\nconst migrate_group_by = _migrate_field_aliases(\"group_by\", [\n    \"group_by\",\n    \"row_pivots\",\n    \"row-pivot\",\n    \"row-pivots\",\n    \"row_pivot\",\n]);\n\n/**\n * Migrate `split_by` field aliases\n */\nconst migrate_split_by = _migrate_field_aliases(\"split_by\", [\n    \"split_by\",\n    \"column_pivots\",\n    \"column-pivot\",\n    \"column-pivots\",\n    \"column_pivot\",\n    \"col_pivots\",\n    \"col-pivot\",\n    \"col-pivots\",\n    \"col_pivot\",\n]);\n\n/**\n * Migrate `filters` field aliases\n */\nconst migrate_filters = _migrate_field_aliases(\"filter\", [\"filter\", \"filters\"]);\n\n/**\n * Migrate the old `computed-columns` format expressions to ExprTK\n * @param regex1\n * @param rep\n * @param expression\n * @param old\n * @param options\n * @returns\n */\nfunction _migrate_expression(regex1, rep, expression, old, options) {\n    if (regex1.test(expression)) {\n        const replaced = expression.replace(regex1, rep);\n        if (options.warn) {\n            console.warn(\n                `Deprecated perspective \"expression\" attribute value \"${expression}\" updated to \"${replaced}\"`\n            );\n        }\n\n        for (const key of [\"group_by\", \"split_by\"]) {\n            if (key in old) {\n                for (const idx in old[key]) {\n                    const pivot = old[key][idx];\n                    if (pivot === expression.replace(/\"/g, \"\")) {\n                        old[key][idx] = replaced;\n                        if (options.warn) {\n                            console.warn(\n                                `Deprecated perspective expression in \"${key}\" attribute \"${expression}\" replaced with \"${replaced}\"`\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        for (const filter of old.filter || []) {\n            if (filter[0] === expression.replace(/\"/g, \"\")) {\n                filter[0] = replaced;\n                if (options.warn) {\n                    console.warn(\n                        `Deprecated perspective expression in \"filter\" attribute \"${expression}\" replaced with \"${replaced}\"`\n                    );\n                }\n            }\n        }\n\n        for (const sort of old.sort || []) {\n            if (sort[0] === expression.replace(/\"/g, \"\")) {\n                sort[0] = replaced;\n                if (options.warn) {\n                    console.warn(\n                        `Deprecated perspective expression in \"sort\" attribute \"${expression}\" replaced with \"${replaced}\"`\n                    );\n                }\n            }\n        }\n\n        return replaced;\n    } else {\n        return expression;\n    }\n}\n\n/**\n * Migrate `expressions` field from `computed-columns`\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_expressions(old, options) {\n    if (old[\"computed-columns\"]) {\n        if (\"expressions\" in old) {\n            throw new Error(`Duplicate \"expressions\" and \"computed-columns`);\n        }\n\n        old.expressions = old[\"computed-columns\"];\n        delete old[\"computed-columns\"];\n        if (options.warn) {\n            console.warn(\n                `Deprecated perspective attribute \"computed-columns\" renamed \"expressions\"`\n            );\n        }\n\n        const REPLACEMENTS = [\n            [/^year_bucket\\(\"(.+?)\"\\)/, `bucket(\"$1\", 'y')`],\n            [/^month_bucket\\(\"(.+?)\"\\)/, `bucket(\"$1\", 'M')`],\n            [/^day_bucket\\(\"(.+?)\"\\)/, `bucket(\"$1\", 'd')`],\n            [/^hour_bucket\\(\"(.+?)\"\\)/, `bucket(\"$1\", 'h')`],\n            [/^minute_bucket\\(\"(.+?)\"\\)/, `bucket(\"$1\", 'm')`],\n            [/^second_bucket\\(\"(.+?)\"\\)/, `bucket(\"$1\", 's')`],\n        ];\n\n        for (const idx in old.expressions) {\n            let expression = old.expressions[idx];\n            for (const [a, b] of REPLACEMENTS) {\n                expression = _migrate_expression(\n                    a,\n                    b,\n                    expression,\n                    old,\n                    options\n                );\n            }\n\n            old.expressions[idx] = expression;\n        }\n    }\n\n    return old;\n}\n\n/**\n * Migrate the `plugin` field\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_plugins(old, options) {\n    const ALIASES = {\n        datagrid: \"Datagrid\",\n        Datagrid: \"Datagrid\",\n        d3_y_area: \"Y Area\",\n        \"Y Area\": \"Y Area\",\n        d3_y_line: \"Y Line\",\n        \"Y Line\": \"Y Line\",\n        d3_xy_line: \"X/Y Line\",\n        \"X/Y Line\": \"X/Y Line\",\n        d3_y_scatter: \"Y Scatter\",\n        \"Y Scatter\": \"Y Scatter\",\n        d3_xy_scatter: \"X/Y Scatter\",\n        \"X/Y Scatter\": \"X/Y Scatter\",\n        d3_x_bar: \"X Bar\",\n        \"X Bar\": \"X Bar\",\n        d3_y_bar: \"Y Bar\",\n        \"Y Bar\": \"Y Bar\",\n        d3_heatmap: \"Heatmap\",\n        Heatmap: \"Heatmap\",\n        d3_treemap: \"Treemap\",\n        Treemap: \"Treemap\",\n        d3_sunburst: \"Sunburst\",\n        Sunburst: \"Sunburst\",\n    };\n\n    if (\"plugin\" in old && old.plugin !== ALIASES[old.plugin]) {\n        old.plugin = ALIASES[old.plugin];\n        if (options.warn) {\n            console.warn(\n                `Deprecated perspective \"plugin\" attribute value \"${\n                    old.plugin\n                }\" updated to \"${ALIASES[old.plugin]}\"`\n            );\n        }\n    }\n\n    return old;\n}\n\n/**\n * Migrate the `plugin_config` field\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_plugin_config(old, options) {\n    if (old.plugin === \"Datagrid\" && !!old.plugin_config) {\n        if (!old.plugin_config.columns) {\n            if (options.warn) {\n                console.warn(\n                    `Deprecated perspective attribute \"plugin_config\" moved to \"plugin_config.columns\"`\n                );\n            }\n\n            const columns = {};\n            for (const name of Object.keys(old.plugin_config)) {\n                const column = old.plugin_config[name];\n                delete old.plugin_config[name];\n\n                if (typeof column.color_mode === \"string\") {\n                    if (column.color_mode === \"foreground\") {\n                        column.number_fg_mode = \"color\";\n                    } else if (column.color_mode === \"bar\") {\n                        column.number_fg_mode = \"bar\";\n                    } else if (column.color_mode === \"background\") {\n                        column.number_bg_mode = \"color\";\n                    } else if (column.color_mode === \"gradient\") {\n                        column.number_bg_mode = \"gradient\";\n                    } else {\n                        console.warn(`Unknown color_mode ${column.color_mode}`);\n                    }\n\n                    // column.number_color_mode = column.color_mode;\n                    delete column[\"color_mode\"];\n\n                    if (options.warn) {\n                        console.warn(\n                            `Deprecated perspective attribute \"color_mode\" renamed \"number_bg_mode\"`\n                        );\n                    }\n                }\n\n                columns[name] = column;\n            }\n\n            old.plugin_config.columns = columns;\n            if (options.replace_defaults) {\n                old.plugin_config.editable = false;\n                old.plugin_config.scroll_lock = true;\n            }\n        }\n\n        // Post 1.5, number columns have been split between `fg` and `bg`\n        // style param contexts.\n        for (const name of Object.keys(old.plugin_config.columns)) {\n            const column = old.plugin_config.columns[name];\n\n            if (typeof column.number_color_mode === \"string\") {\n                if (column.number_color_mode === \"foreground\") {\n                    column.number_fg_mode = \"color\";\n                } else if (column.number_color_mode === \"bar\") {\n                    column.number_fg_mode = \"bar\";\n                } else if (column.number_color_mode === \"background\") {\n                    column.number_bg_mode = \"color\";\n                } else if (column.number_color_mode === \"gradient\") {\n                    column.number_bg_mode = \"gradient\";\n                }\n\n                delete column[\"number_color_mode\"];\n\n                if (options.warn) {\n                    console.warn(\n                        `Deprecated perspective attribute \"number_color_mode\" renamed \"number_bg_mode\"`\n                    );\n                }\n            }\n\n            if (column.gradient !== undefined) {\n                if (column.number_bg_mode === \"gradient\") {\n                    column.bg_gradient = column.gradient;\n                } else if (column.number_fg_mode === \"bar\") {\n                    column.fg_gradient = column.gradient;\n                }\n\n                delete column[\"gradient\"];\n                if (options.warn) {\n                    console.warn(\n                        `Deprecated perspective attribute \"gradient\" renamed \"bg_gradient\"`\n                    );\n                }\n            }\n\n            if (column.pos_color !== undefined) {\n                if (column.number_bg_mode !== undefined) {\n                    column.pos_bg_color = column.pos_color;\n                } else if (column.number_fg_mode !== undefined) {\n                    column.pos_fg_color = column.pos_color;\n                }\n\n                delete column[\"pos_color\"];\n                if (options.warn) {\n                    console.warn(\n                        `Deprecated perspective attribute \"pos_color\" renamed \"pos_bg_color\"`\n                    );\n                }\n            }\n\n            if (column.neg_color !== undefined) {\n                if (column.number_bg_mode !== undefined) {\n                    column.neg_bg_color = column.neg_color;\n                } else if (column.number_fg_mode !== undefined) {\n                    column.neg_fg_color = column.neg_color;\n                }\n\n                delete column[\"neg_color\"];\n                if (options.warn) {\n                    console.warn(\n                        `Deprecated perspective attribute \"neg_color\" renamed \"neg_bg_color\"`\n                    );\n                }\n            }\n        }\n    }\n\n    return old;\n}\n\n/**\n * Migrate attributes which were once persisted but are now considered errors\n * in `<perspective-viewer>` and should only be set in HTML\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_attributes_viewer(old, options) {\n    const ATTRIBUTES = [\n        \"editable\",\n        \"selectable\",\n        \"name\",\n        \"table\",\n        \"master\",\n        \"linked\",\n    ];\n    for (const attr of ATTRIBUTES) {\n        if (attr in old) {\n            delete old[attr];\n\n            if (options.warn) {\n                console.warn(\n                    `Deprecated perspective attribute \"${attr}\" removed`\n                );\n            }\n        }\n    }\n\n    return old;\n}\n\n/**\n * Migrate attributes which were once persisted but are now considered errors\n * in `<perspective-workspace>` and should only be set in HTML\n * @param old\n * @param options\n * @returns\n */\nfunction migrate_attributes_workspace(old, options) {\n    const ATTRIBUTES = [\n        \"editable\",\n        \"selectable\",\n        \"name\",\n        \"table\",\n        \"master\",\n        \"linked\",\n    ];\n    for (const attr of ATTRIBUTES) {\n        if (attr in old && old[attr] === null) {\n            delete old[attr];\n\n            if (options.warn) {\n                console.warn(\n                    `Deprecated perspective attribute \"${attr}\" removed`\n                );\n            }\n        }\n    }\n\n    return old;\n}\n"],
  "mappings": "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",
  "names": []
}

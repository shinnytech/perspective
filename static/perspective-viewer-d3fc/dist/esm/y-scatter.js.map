{
  "version": 3,
  "sources": ["../../../perspective/src/js/config/settings.js", "../../../perspective/src/js/config/index.js", "../../src/js/plugin/polyfills/matches.js", "../../src/js/plugin/polyfills/closest.js", "../../src/js/charts/bar.js", "../../src/js/axis/axisFactory.js", "../../src/js/axis/axisType.js", "../../src/js/axis/noAxis.js", "../../src/js/axis/flatten.js", "../../src/js/axis/minBandwidth.js", "../../src/js/axis/withoutTicks.js", "../../src/js/axis/linearAxis.js", "../../src/js/d3fc/extent/extentLinear.js", "../../src/js/d3fc/padding/default.js", "../../src/js/axis/valueFormatter.js", "../../src/js/axis/timeAxis.js", "../../src/js/axis/ordinalAxis.js", "../../src/js/d3fc/axis/multi-axis.js", "../../src/js/d3fc/axis/store.js", "../../src/js/plugin/root.js", "../../src/js/axis/chartFactory.js", "../../src/js/series/barSeries.js", "../../src/js/tooltip/tooltip.js", "../../src/js/utils/utils.js", "../../src/js/tooltip/generateHTML.js", "../../src/js/tooltip/selectionData.js", "../../src/js/tooltip/selectionEvent.js", "../../src/js/series/seriesColors.js", "../../src/js/series/seriesKey.js", "../../src/js/axis/axisLabel.js", "../../src/js/data/splitIntoMultiSeries.js", "../../src/js/data/groupData.js", "../../src/js/legend/legend.js", "../../src/js/legend/scrollableLegend.js", "../../src/js/legend/styling/cropCellContents.js", "../../src/js/legend/styling/draggableComponent.js", "../../src/js/legend/styling/enforceContainerBoundaries.js", "../../src/js/legend/styling/resizableComponent.js", "../../src/js/legend/filter.js", "../../src/js/gridlines/gridlines.js", "../../src/js/d3fc/padding/hardLimitZero.js", "../../src/js/zoom/zoomableChart.js", "../../src/js/charts/column.js", "../../src/js/axis/domainMatchOrigins.js", "../../src/js/axis/splitterLabels.js", "../../src/js/axis/axisSplitter.js", "../../src/js/charts/line.js", "../../src/js/series/lineSeries.js", "../../src/js/data/splitData.js", "../../src/js/data/transposeData.js", "../../src/js/tooltip/nearbyTip.js", "../../src/js/data/findBest.js", "../../src/js/charts/xy-line.js", "../../src/js/series/pointSeriesCanvas.js", "../../src/js/series/seriesSymbols.js", "../../src/js/data/xySplitData.js", "../../src/js/charts/area.js", "../../src/js/series/areaSeries.js", "../../src/js/data/splitAndBaseData.js", "../../src/js/charts/y-scatter.js", "../../src/js/series/categoryPointSeries.js", "../../src/js/charts/xy-scatter.js", "../../src/js/data/pointData.js", "../../src/js/series/seriesRange.js", "../../src/js/legend/colorRangeLegend.js", "../../src/js/series/heatmapSeries.js", "../../src/js/data/heatmapData.js", "../../src/js/charts/heatmap.js", "../../src/js/charts/ohlc.js", "../../src/js/charts/ohlcCandle.js", "../../src/js/data/ohlcData.js", "../../src/js/series/ohlcCandleSeries.js", "../../src/js/charts/candlestick.js", "../../src/js/charts/sunburst.js", "../../src/js/series/sunburst/sunburstColor.js", "../../src/js/data/treeData.js", "../../src/js/series/sunburst/sunburstArc.js", "../../src/js/series/sunburst/sunburstLabel.js", "../../src/js/series/sunburst/sunburstClick.js", "../../src/js/series/sunburst/sunburstSeries.js", "../../src/js/layout/gridLayoutMultiChart.js", "../../src/js/charts/treemap.js", "../../src/js/series/treemap/treemapColor.js", "../../src/js/series/treemap/treemapLabel.js", "../../src/js/series/treemap/treemapLayout.js", "../../src/js/series/treemap/treemapTransitions.js", "../../src/js/series/treemap/treemapLevelCalculation.js", "../../src/js/series/treemap/treemapControls.js", "../../src/js/series/treemap/treemapSeries.js", "../../src/js/charts/charts.js", "../../src/js/series/colorStyles.js", "../../src/js/plugin/plugin.js", "../../src/js/index/y-scatter.js"],
  "sourcesContent": ["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n/**\n * The default settings which populate `perspective.config.js`.\n */\nmodule.exports.default = {\n    /**\n     * `types` are the type-specific configuration options.  Each key is the\n     * name of a perspective type; their values are configuration objects for\n     * that type.\n     */\n    types: {\n        float: {\n            /**\n             * Which filter operator should be the default when a column of this\n             * type is pivotted.\n             */\n            filter_operator: \"==\",\n\n            /**\n             * Which aggregate should be the default when a column of this type\n             * is pivotted.\n             */\n            aggregate: \"sum\",\n\n            /**\n             * The format object for this type.  Can be either an\n             * `toLocaleString()` `options` object for this type (or supertype),\n             * or a function which returns the formatted string for this type.\n             */\n            format: {\n                style: \"decimal\",\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n            },\n        },\n        string: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n        },\n        integer: {\n            filter_operator: \"==\",\n            aggregate: \"sum\",\n            format: {},\n        },\n        boolean: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n        },\n        datetime: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: \"numeric\",\n            },\n            null_value: -1,\n        },\n        date: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n            },\n            null_value: -1,\n        },\n    },\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst DEFAULT_CONFIG = require(\"./settings.js\").default;\n\nmodule.exports.get_types = function () {\n    return Object.keys(module.exports.get_config().types);\n};\n\nmodule.exports.get_type_config = function (type) {\n    const config = {};\n    if (module.exports.get_config().types[type]) {\n        Object.assign(config, module.exports.get_config().types[type]);\n    }\n    if (config.type) {\n        const props = module.exports.get_type_config(config.type);\n        Object.assign(props, config);\n        return props;\n    } else {\n        return config;\n    }\n};\n\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n\nfunction mergeDeep(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {[key]: {}});\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, {[key]: source[key]});\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}\n\nglobalThis.__PERSPECTIVE_CONFIG__ = undefined;\n\nmodule.exports.override_config = function (config) {\n    if (globalThis.__PERSPECTIVE_CONFIG__) {\n        console.warn(\"Config already initialized!\");\n    }\n    globalThis.__PERSPECTIVE_CONFIG__ = mergeDeep(DEFAULT_CONFIG, config);\n};\n\nmodule.exports.get_config = function get_config() {\n    if (!globalThis.__PERSPECTIVE_CONFIG__) {\n        globalThis.__PERSPECTIVE_CONFIG__ = mergeDeep(\n            DEFAULT_CONFIG,\n            globalThis.__TEMPLATE_CONFIG__ || {}\n        );\n    }\n    return globalThis.__PERSPECTIVE_CONFIG__;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        var el = this;\n\n        do {\n            if (el.matches(s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {barSeries} from \"../series/barSeries\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {groupAndStackData} from \"../data/groupData\";\nimport {colorLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\n\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\n\nfunction barChart(container, settings) {\n    const data = groupAndStackData(settings, filterData(settings));\n    const color = seriesColors(settings);\n\n    const legend = colorLegend().settings(settings).scale(color);\n\n    const bars = barSeries(settings, color).orient(\"horizontal\");\n    const series = fc\n        .seriesSvgMulti()\n        .mapping((data, index) => data[index])\n        .series(data.map(() => bars));\n\n    const xAxis = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .excludeType(AXIS_TYPES.ordinal)\n        .include([0])\n        .paddingStrategy(hardLimitZeroPadding())(data);\n    const yAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")\n        .orient(\"vertical\")(data);\n\n    const chart = chartSvgFactory(xAxis, yAxis).plotArea(\n        withGridLines(series, settings).orient(\"horizontal\")\n    );\n\n    if (chart.yPaddingInner) {\n        chart.yPaddingInner(0.5);\n        chart.yPaddingOuter(0.25);\n        bars.align(\"left\");\n    }\n    chart.xNice && chart.xNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .yScale(yAxis.scale);\n\n    // render\n    container.datum(data).call(zoomChart);\n    container.call(legend);\n}\nbarChart.plugin = {\n    name: \"X Bar\",\n    category: \"X Chart\",\n    max_cells: 1000,\n    max_columns: 50,\n    render_warning: true,\n};\n\nexport default barChart;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisType} from \"./axisType\";\nimport * as none from \"./noAxis\";\nimport * as linear from \"./linearAxis\";\nimport * as time from \"./timeAxis\";\nimport * as ordinal from \"./ordinalAxis\";\n\nconst axisTypes = {\n    none,\n    ordinal,\n    time,\n    linear,\n};\n\nexport const axisFactory = (settings) => {\n    let excludeType = null;\n    let orient = \"horizontal\";\n    let settingName = \"crossValues\";\n    let settingValue = null;\n    let valueNames = [\"crossValue\"];\n\n    const optionalParams = [\"include\", \"paddingStrategy\", \"pad\"];\n    const optional = {};\n\n    const _factory = (data) => {\n        const useType = axisType(settings)\n            .excludeType(excludeType)\n            .settingName(settingName)\n            .settingValue(settingValue)();\n\n        const axis = axisTypes[useType];\n        const domainFunction = axis.domain().valueNames(valueNames);\n\n        optionalParams.forEach((p) => {\n            if (optional[p] && domainFunction[p])\n                domainFunction[p](optional[p]);\n        });\n        if (domainFunction.orient) domainFunction.orient(orient);\n\n        const domain = domainFunction(data);\n        const component = axis.component\n            ? createComponent(axis, domain, data)\n            : defaultComponent();\n\n        return {\n            scale: axis.scale(),\n            domain,\n            domainFunction,\n            labelFunction: axis.labelFunction,\n            component: {\n                bottom: component.bottom,\n                left: component.left,\n                top: component.top,\n                right: component.right,\n            },\n            size: component.size,\n            decorate: component.decorate,\n            label: settings[settingName].map((v) => v.name).join(\", \"),\n            tickFormatFunction: axis.tickFormatFunction,\n        };\n    };\n\n    const createComponent = (axis, domain, data) =>\n        axis\n            .component(settings)\n            .orient(orient)\n            .settingName(settingName)\n            .domain(domain)(data);\n\n    const defaultComponent = () => ({\n        bottom: fc.axisBottom,\n        left: fc.axisLeft,\n        top: fc.axisTop,\n        right: fc.axisRight,\n        decorate: () => {},\n    });\n\n    _factory.excludeType = (...args) => {\n        if (!args.length) {\n            return excludeType;\n        }\n        excludeType = args[0];\n        return _factory;\n    };\n\n    _factory.orient = (...args) => {\n        if (!args.length) {\n            return orient;\n        }\n        orient = args[0];\n        return _factory;\n    };\n\n    _factory.settingName = (...args) => {\n        if (!args.length) {\n            return settingName;\n        }\n        settingName = args[0];\n        return _factory;\n    };\n\n    _factory.settingValue = (...args) => {\n        if (!args.length) {\n            return settingValue;\n        }\n        settingValue = args[0];\n        return _factory;\n    };\n\n    _factory.valueName = (...args) => {\n        if (!args.length) {\n            return valueNames[0];\n        }\n        valueNames = [args[0]];\n        return _factory;\n    };\n\n    _factory.valueNames = (...args) => {\n        if (!args.length) {\n            return valueNames;\n        }\n        valueNames = args[0];\n        return _factory;\n    };\n\n    optionalParams.forEach((p) => {\n        _factory[p] = (...args) => {\n            if (!args.length) {\n                return optional[p];\n            }\n            optional[p] = args[0];\n            return _factory;\n        };\n    });\n\n    return _factory;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const AXIS_TYPES = {\n    none: \"none\",\n    ordinal: \"ordinal\",\n    time: \"time\",\n    linear: \"linear\",\n};\n\nexport const axisType = (settings) => {\n    let settingName = \"crossValues\";\n    let settingValue = null;\n    let excludeType = null;\n\n    const getType = () => {\n        const checkTypes = (types) => {\n            const list = settingValue\n                ? settings[settingName].filter((s) => settingValue == s.name)\n                : settings[settingName];\n\n            if (settingName == \"crossValues\" && list.length > 1) {\n                // can't do multiple values on non-ordinal cross-axis\n                return false;\n            }\n\n            return list.some((s) => types.includes(s.type));\n        };\n\n        if (settings[settingName].length === 0) {\n            return AXIS_TYPES.none;\n        } else if (\n            excludeType != AXIS_TYPES.time &&\n            checkTypes([\"datetime\", \"date\"])\n        ) {\n            return AXIS_TYPES.time;\n        } else if (\n            excludeType != AXIS_TYPES.linear &&\n            checkTypes([\"integer\", \"float\"])\n        ) {\n            return AXIS_TYPES.linear;\n        }\n\n        if (excludeType == AXIS_TYPES.ordinal) {\n            return AXIS_TYPES.linear;\n        }\n        return AXIS_TYPES.ordinal;\n    };\n\n    getType.settingName = (...args) => {\n        if (!args.length) {\n            return settingName;\n        }\n        settingName = args[0];\n        return getType;\n    };\n\n    getType.settingValue = (...args) => {\n        if (!args.length) {\n            return settingValue;\n        }\n        settingValue = args[0];\n        return getType;\n    };\n\n    getType.excludeType = (...args) => {\n        if (!args.length) {\n            return excludeType;\n        }\n        excludeType = args[0];\n        return getType;\n    };\n\n    return getType;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport {flattenArray} from \"./flatten\";\nimport minBandwidth from \"./minBandwidth\";\nimport withoutTicks from \"./withoutTicks\";\n\nexport const scale = () => withoutTicks(minBandwidth(d3.scaleBand()));\n\nexport const domain = () => {\n    let valueNames = [\"crossValue\"];\n    let orient = \"horizontal\";\n\n    const _domain = (data) => {\n        const flattenedData = flattenArray(data);\n        return transformDomain([\n            ...new Set(flattenedData.map((d) => d[valueNames[0]])),\n        ]);\n    };\n\n    const transformDomain = (d) => (orient == \"vertical\" ? d.reverse() : d);\n\n    _domain.valueName = (...args) => {\n        if (!args.length) {\n            return valueNames[0];\n        }\n        valueNames = [args[0]];\n        return _domain;\n    };\n    _domain.valueNames = (...args) => {\n        if (!args.length) {\n            return valueNames;\n        }\n        valueNames = args[0];\n        return _domain;\n    };\n\n    _domain.orient = (...args) => {\n        if (!args.length) {\n            return orient;\n        }\n        orient = args[0];\n        return _domain;\n    };\n\n    return _domain;\n};\n\nexport const labelFunction = (valueName) => (d) => d[valueName].join(\"|\");\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const flattenExtent = (array) => {\n    const withUndefined = (fn) => (a, b) => {\n        if (a === undefined) return b;\n        if (b === undefined) return a;\n        return fn(a, b);\n    };\n    return array.reduce(\n        (r, v) => [\n            withUndefined(Math.min)(r[0], v[0]),\n            withUndefined(Math.max)(r[1], v[1]),\n        ],\n        [undefined, undefined]\n    );\n};\n\nexport const flattenArray = (array) => {\n    if (Array.isArray(array)) {\n        return array.flat(Infinity);\n    } else {\n        return [array];\n    }\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {rebindAll} from \"d3fc\";\n\nconst MIN_BANDWIDTH = 1;\n\nexport default (adaptee) => {\n    const minBandwidth = (arg) => {\n        return adaptee(arg);\n    };\n\n    rebindAll(minBandwidth, adaptee);\n\n    minBandwidth.bandwidth = (...args) => {\n        if (!args.length) {\n            return Math.max(adaptee.bandwidth(), MIN_BANDWIDTH);\n        }\n        adaptee.bandwidth(...args);\n        return minBandwidth;\n    };\n\n    return minBandwidth;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {rebindAll} from \"d3fc\";\n\nexport default (adaptee) => {\n    const withoutTicks = (arg) => {\n        return adaptee(arg);\n    };\n\n    rebindAll(withoutTicks, adaptee);\n\n    withoutTicks.ticks = function () {\n        return [];\n    };\n\n    return withoutTicks;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport {flattenArray} from \"./flatten\";\nimport {extentLinear as customExtent} from \"../d3fc/extent/extentLinear\";\nimport valueformatter from \"./valueFormatter\";\n\nexport const scale = () => d3.scaleLinear();\n\nexport const domain = () => {\n    const base = customExtent().pad([0, 0.1]).padUnit(\"percent\");\n\n    let valueNames = [\"crossValue\"];\n\n    const _domain = (data) => {\n        base.accessors(valueNames.map((v) => (d) => parseFloat(d[v])));\n\n        return getDataExtent(flattenArray(data));\n    };\n\n    fc.rebindAll(_domain, base);\n\n    const getMinimumGap = (data) => {\n        const gaps = valueNames.map((valueName) =>\n            data\n                .map((d) => d[valueName])\n                .sort((a, b) => a - b)\n                .filter((d, i, a) => i === 0 || d !== a[i - 1])\n                .reduce((acc, d, i, src) =>\n                    i === 0 || acc <= d - src[i - 1]\n                        ? acc\n                        : Math.abs(d - src[i - 1])\n                )\n        );\n\n        return Math.min(...gaps);\n    };\n\n    const getDataExtent = (data) => {\n        if (base.padUnit() == \"domain\") {\n            const dataWidth = getMinimumGap(data);\n            return base.pad([dataWidth / 2, dataWidth / 2])(data);\n        } else {\n            return base(data);\n        }\n    };\n\n    _domain.valueName = (...args) => {\n        if (!args.length) {\n            return valueNames[0];\n        }\n        valueNames = [args[0]];\n        return _domain;\n    };\n    _domain.valueNames = (...args) => {\n        if (!args.length) {\n            return valueNames;\n        }\n        valueNames = args[0];\n        return _domain;\n    };\n\n    return _domain;\n};\n\nexport const labelFunction = (valueName) => (d) => d[valueName][0];\n\nexport const tickFormatFunction = valueformatter;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3Array from \"d3-array\";\nimport {defaultPadding} from \"../padding/default\";\n\nexport const extentLinear = function () {\n    let accessors = [\n        function (d) {\n            return d;\n        },\n    ];\n    let symmetricalAbout = null;\n    let include = [];\n    let paddingStrategy = defaultPadding();\n\n    const instance = function instance(data) {\n        let values = new Array(data.length);\n        let _iteratorNormalCompletion = true;\n        let _didIteratorError = false;\n        let _iteratorError = undefined;\n\n        let _iterator = accessors[Symbol.iterator]();\n        try {\n            for (\n                let _step;\n                !(_iteratorNormalCompletion = (_step = _iterator.next()).done);\n                _iteratorNormalCompletion = true\n            ) {\n                let accessor = _step.value;\n\n                for (let i = 0; i < data.length; i++) {\n                    let value = accessor(data[i], i);\n                    if (Array.isArray(value)) {\n                        values.push.apply(values, toConsumableArray(value));\n                    } else {\n                        values.push(value);\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        let extent$$1 = [d3Array.min(values), d3Array.max(values)];\n\n        extent$$1[0] =\n            extent$$1[0] == null\n                ? d3Array.min(include)\n                : d3Array.min(\n                      [extent$$1[0]].concat(toConsumableArray(include))\n                  );\n        extent$$1[1] =\n            extent$$1[1] == null\n                ? d3Array.max(include)\n                : d3Array.max(\n                      [extent$$1[1]].concat(toConsumableArray(include))\n                  );\n\n        if (symmetricalAbout != null) {\n            let halfRange = Math.max(\n                Math.abs(extent$$1[1] - symmetricalAbout),\n                Math.abs(extent$$1[0] - symmetricalAbout)\n            );\n            extent$$1[0] = symmetricalAbout - halfRange;\n            extent$$1[1] = symmetricalAbout + halfRange;\n        }\n\n        return paddingStrategy(extent$$1);\n    };\n\n    instance.accessors = function () {\n        if (!arguments.length) {\n            return accessors;\n        }\n        accessors = arguments.length <= 0 ? undefined : arguments[0];\n        return instance;\n    };\n\n    //This function points directly at the paddingStrategy child object's\n    //properties for backwards-compatibility. DEPRECATED.\n    instance.pad = function () {\n        if (!arguments.length) {\n            return paddingStrategy.pad;\n        }\n        paddingStrategy.pad(arguments.length <= 0 ? undefined : arguments[0]);\n        return instance;\n    };\n\n    //This function points directly at the paddingStrategy child object's\n    //properties for backwards-compatibility. DEPRECATED.\n    instance.padUnit = function () {\n        if (!arguments.length) {\n            return paddingStrategy.padUnit;\n        }\n        paddingStrategy.padUnit(\n            arguments.length <= 0 ? undefined : arguments[0]\n        );\n        return instance;\n    };\n\n    instance.include = function () {\n        if (!arguments.length) {\n            return include;\n        }\n        include = arguments.length <= 0 ? undefined : arguments[0];\n        return instance;\n    };\n\n    instance.symmetricalAbout = function () {\n        if (!arguments.length) {\n            return symmetricalAbout;\n        }\n        symmetricalAbout = arguments.length <= 0 ? undefined : arguments[0];\n        return instance;\n    };\n\n    instance.paddingStrategy = function () {\n        if (!arguments.length) {\n            return paddingStrategy;\n        }\n        paddingStrategy = arguments.length <= 0 ? undefined : arguments[0];\n        return instance;\n    };\n\n    return instance;\n};\n\nlet toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n        let arr2 = Array(arr.length);\n        for (let i = 0; i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }\n        return arr2;\n    } else {\n        return Array.from(arr);\n    }\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const defaultPadding = () => {\n    let pad = [0, 0];\n    let padUnit = \"percent\";\n\n    const padding = (extent) => {\n        switch (padUnit) {\n            case \"domain\": {\n                extent[0] -= pad[0];\n                extent[1] += pad[1];\n                break;\n            }\n            case \"percent\": {\n                let delta = extent[1] - extent[0];\n                extent[0] -= pad[0] * delta;\n                extent[1] += pad[1] * delta;\n                break;\n            }\n            default:\n                throw new Error(\"Unknown padUnit: \" + padUnit);\n        }\n        return extent;\n    };\n\n    padding.pad = function () {\n        if (!arguments.length) {\n            return pad;\n        }\n        pad = arguments.length <= 0 ? undefined : arguments[0];\n        return padding;\n    };\n\n    padding.padUnit = function () {\n        if (!arguments.length) {\n            return padUnit;\n        }\n        padUnit = arguments.length <= 0 ? undefined : arguments[0];\n        return padding;\n    };\n\n    return padding;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\n\nconst SI_MIN = 10000000;\n\nexport default (d) =>\n    Math.abs(d) >= SI_MIN\n        ? d3.format(\".3s\")(d)\n        : Number.isInteger(d)\n        ? d3.format(\",.0f\")(d)\n        : d3.format(\",.2f\")(d);\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport {flattenArray} from \"./flatten\";\n\nexport const scale = () => d3.scaleTime();\n\nexport const domain = () => {\n    const base = fc.extentTime();\n\n    let valueNames = [\"crossValue\"];\n\n    const _domain = (data) => {\n        base.accessors(valueNames.map((v) => (d) => new Date(d[v])));\n\n        return getDataExtent(flattenArray(data));\n    };\n\n    fc.rebindAll(_domain, base, fc.exclude(\"include\", \"paddingStrategy\"));\n\n    const getMinimumGap = (data) => {\n        const gaps = valueNames.map((valueName) =>\n            data\n                .map((d) => new Date(d[valueName]).getTime())\n                .sort((a, b) => a - b)\n                .filter((d, i, a) => i === 0 || d !== a[i - 1])\n                .reduce((acc, d, i, src) =>\n                    i === 0 || Math.abs(acc) <= Math.abs(d - src[i - 1])\n                        ? Math.abs(acc)\n                        : Math.abs(d - src[i - 1])\n                )\n        );\n\n        return Math.min(...gaps);\n    };\n\n    const getDataExtent = (data) => {\n        const dataWidth = Math.abs(getMinimumGap(data));\n        return base.padUnit(\"domain\").pad([dataWidth / 2, dataWidth / 2])(data);\n    };\n\n    _domain.valueName = (...args) => {\n        if (!args.length) {\n            return valueNames[0];\n        }\n        valueNames = [args[0]];\n        return _domain;\n    };\n    _domain.valueNames = (...args) => {\n        if (!args.length) {\n            return valueNames;\n        }\n        valueNames = args[0];\n        return _domain;\n    };\n\n    return _domain;\n};\n\nexport const labelFunction = (valueName) => (d) => new Date(d[valueName][0]);\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport minBandwidth from \"./minBandwidth\";\nimport {flattenArray} from \"./flatten\";\nimport {\n    multiAxisBottom,\n    multiAxisLeft,\n    multiAxisTop,\n    multiAxisRight,\n} from \"../d3fc/axis/multi-axis\";\nimport {getChartContainer} from \"../plugin/root\";\n\nexport const scale = () => minBandwidth(d3.scaleBand()).padding(0.5);\n\nexport const domain = () => {\n    let valueNames = [\"crossValue\"];\n    let orient = \"horizontal\";\n\n    const _domain = (data) => {\n        const flattenedData = flattenArray(data);\n        return transformDomain([\n            ...Array.from(new Set(flattenedData.map((d) => d[valueNames[0]]))),\n        ]);\n    };\n\n    const transformDomain = (d) => (orient == \"vertical\" ? d.reverse() : d);\n\n    _domain.valueName = (...args) => {\n        if (!args.length) {\n            return valueNames[0];\n        }\n        valueNames = [args[0]];\n        return _domain;\n    };\n    _domain.valueNames = (...args) => {\n        if (!args.length) {\n            return valueNames;\n        }\n        valueNames = args[0];\n        return _domain;\n    };\n\n    _domain.orient = (...args) => {\n        if (!args.length) {\n            return orient;\n        }\n        orient = args[0];\n        return _domain;\n    };\n\n    return _domain;\n};\n\nexport const labelFunction = (valueName) => (d) => d[valueName].join(\"|\");\n\nexport const component = (settings) => {\n    let orient = \"horizontal\";\n    let settingName = \"crossValues\";\n    let domain = null;\n\n    const getComponent = () => {\n        const multiLevel = settings[settingName].length > 1;\n\n        // Calculate the label groups and corresponding group sizes\n        const levelGroups = axisGroups(domain);\n        const groupTickLayout = levelGroups.map(getGroupTickLayout);\n\n        const tickSizeInner = multiLevel\n            ? groupTickLayout.map((l) => l.size)\n            : groupTickLayout[0].size;\n        const tickSizeOuter = groupTickLayout.reduce((s, v) => s + v.size, 0);\n\n        const createAxis = (base) => (scale) => {\n            const axis = base(scale);\n\n            if (multiLevel) {\n                axis.groups(levelGroups)\n                    .tickSizeInner(tickSizeInner)\n                    .tickSizeOuter(tickSizeOuter);\n            }\n            if (orient !== \"horizontal\") axis.tickPadding(10);\n            return axis;\n        };\n\n        const decorate = (s, data, index) => {\n            const rotation = groupTickLayout[index].rotation;\n            if (orient === \"horizontal\") applyLabelRotation(s, rotation);\n            hideOverlappingLabels(s, rotation);\n        };\n\n        const axisSet = getAxisSet(multiLevel);\n        return {\n            bottom: createAxis(axisSet.bottom),\n            left: createAxis(axisSet.left),\n            right: createAxis(axisSet.right),\n            top: createAxis(axisSet.top),\n            size: `${tickSizeOuter + 10}px`,\n            decorate,\n        };\n    };\n\n    // const pickAxis = multiLevel => {\n    //     if (multiLevel) {\n    //         return orient === \"horizontal\" ?\n    //                multiAxisBottom : multiAxisLeft;\n    //     }\n    //     return orient === \"horizontal\" ?\n    //                 fc.axisOrdinalBottom : fc.axisOrdinalLeft;\n    // };\n\n    const getAxisSet = (multiLevel) => {\n        if (multiLevel) {\n            return {\n                bottom: multiAxisBottom,\n                left: multiAxisLeft,\n                top: multiAxisTop,\n                right: multiAxisRight,\n            };\n        } else {\n            return {\n                bottom: fc.axisOrdinalBottom,\n                left: fc.axisOrdinalLeft,\n                top: fc.axisOrdinalTop,\n                right: fc.axisOrdinalRight,\n            };\n        }\n    };\n\n    const axisGroups = (domain) => {\n        const groups = [];\n        domain.forEach((tick) => {\n            const split = tick && tick.split ? tick.split(\"|\") : [tick];\n            split.forEach((s, i) => {\n                while (groups.length <= i) groups.push([]);\n\n                const group = groups[i];\n                if (group.length > 0 && group[group.length - 1].text === s) {\n                    group[group.length - 1].domain.push(tick);\n                } else {\n                    group.push({text: s, domain: [tick]});\n                }\n            });\n        });\n        return groups.reverse();\n    };\n\n    const getGroupTickLayout = (group) => {\n        const width = settings.size.width;\n        const maxLength = Math.max(\n            ...group.map((g) => (g.text ? g.text.length : 0))\n        );\n\n        if (orient === \"horizontal\") {\n            // x-axis may rotate labels and expand the available height\n            if (group && group.length * 16 > width - 100) {\n                return {\n                    size: maxLength * 5 + 10,\n                    rotation: 90,\n                };\n            } else if (\n                group &&\n                group.length * (maxLength * 6 + 10) > width - 100\n            ) {\n                return {\n                    size: maxLength * 3 + 20,\n                    rotation: 45,\n                };\n            }\n            return {\n                size: 25,\n                rotation: 0,\n            };\n        } else {\n            // y-axis size always based on label size\n            return {\n                size: maxLength * 5 + 10,\n                rotation: 0,\n            };\n        }\n    };\n\n    const hideOverlappingLabels = (s, rotated) => {\n        const getTransformCoords = (transform) => {\n            const splitOn = transform.indexOf(\",\") !== -1 ? \",\" : \" \";\n            const coords = transform\n                .substring(transform.indexOf(\"(\") + 1, transform.indexOf(\")\"))\n                .split(splitOn)\n                .map((c) => parseInt(c));\n            while (coords.length < 2) coords.push(0);\n            return coords;\n        };\n\n        const rectanglesOverlap = (r1, r2) =>\n            r1.x <= r2.x + r2.width &&\n            r2.x <= r1.x + r1.width &&\n            r1.y <= r2.y + r2.height &&\n            r2.y <= r1.y + r1.height;\n        const rotatedLabelsOverlap = (r1, r2) =>\n            r1.x + r1.width + 14 > r2.x + r2.width;\n        const isOverlap = rotated ? rotatedLabelsOverlap : rectanglesOverlap;\n\n        const rectangleContained = (r1, r2) =>\n            r1.x >= r2.x &&\n            r1.x + r1.width <= r2.x + r2.width &&\n            r1.y >= r2.y &&\n            r1.y + r1.height <= r2.y + r2.height;\n        // The bounds rect is the available screen space a label can fit into\n        const boundsRect =\n            orient == \"horizontal\" ? getXAxisBoundsRect(s) : null;\n\n        const previousRectangles = [];\n        s.each((d, i, nodes) => {\n            const tick = d3.select(nodes[i]);\n\n            // How the \"tick\" element is transformed (x/y)\n            const transformCoords = getTransformCoords(tick.attr(\"transform\"));\n\n            // Work out the actual rectanble the label occupies\n            const tickRect = tick.node().getBBox();\n            const rect = {\n                x: tickRect.x + transformCoords[0],\n                y: tickRect.y + transformCoords[1],\n                width: tickRect.width,\n                height: tickRect.height,\n            };\n\n            const overlap = previousRectangles.some((r) => isOverlap(r, rect));\n\n            // Test that it also fits into the screen space\n            const hidden =\n                overlap ||\n                (boundsRect && !rectangleContained(rect, boundsRect));\n\n            tick.attr(\"visibility\", hidden ? \"hidden\" : \"\");\n            if (!hidden) {\n                previousRectangles.push(rect);\n            }\n        });\n    };\n\n    const getXAxisBoundsRect = (s) => {\n        const container = getChartContainer(s.node());\n        if (container === null) {\n            return;\n        }\n        const chart = container.querySelector(\".cartesian-chart\");\n        const axis = chart.querySelector(\".x-axis\");\n\n        const chartRect = chart.getBoundingClientRect();\n        const axisRect = axis.getBoundingClientRect();\n        return {\n            x: chartRect.left - axisRect.left,\n            width: chartRect.width,\n            y: chartRect.top - axisRect.top,\n            height: chartRect.height,\n        };\n    };\n\n    const getLabelTransform = (rotation) => {\n        if (!rotation) {\n            return \"translate(0, 8)\";\n        }\n        if (rotation < 60) {\n            return `rotate(-${rotation} 5 5)`;\n        }\n        return `rotate(-${rotation} 3 7)`;\n    };\n\n    const applyLabelRotation = (s, rotation) => {\n        const transform = getLabelTransform(rotation);\n        const anchor = rotation ? \"end\" : \"\";\n        s.each((d, i, nodes) => {\n            const tick = d3.select(nodes[i]);\n            const text = tick.select(\"text\");\n\n            text.attr(\"transform\", transform).style(\"text-anchor\", anchor);\n        });\n    };\n\n    getComponent.orient = (...args) => {\n        if (!args.length) {\n            return orient;\n        }\n        orient = args[0];\n        return getComponent;\n    };\n\n    getComponent.settingName = (...args) => {\n        if (!args.length) {\n            return settingName;\n        }\n        settingName = args[0];\n        return getComponent;\n    };\n\n    getComponent.domain = (...args) => {\n        if (!args.length) {\n            return domain;\n        }\n        domain = args[0];\n        return getComponent;\n    };\n\n    return getComponent;\n};\n", "import {select, line} from \"d3\";\nimport {\n    axisOrdinalTop,\n    axisOrdinalBottom,\n    axisOrdinalLeft,\n    axisOrdinalRight,\n    dataJoin,\n    rebindAll,\n    exclude,\n} from \"d3fc\";\nimport store from \"./store\";\n\nconst multiAxis = (orient, baseAxis, scale) => {\n    let tickSizeOuter = 6;\n    let tickSizeInner = 6;\n    let axisStore = store(\n        \"tickFormat\",\n        \"ticks\",\n        \"tickArguments\",\n        \"tickValues\",\n        \"tickPadding\"\n    );\n    let decorate = () => {};\n\n    let groups = null;\n\n    const groupDataJoin = dataJoin(\"g\", \"group\");\n    const domainPathDataJoin = dataJoin(\"path\", \"domain\");\n\n    const translate = (x, y) =>\n        isVertical() ? `translate(${y}, ${x})` : `translate(${x}, ${y})`;\n\n    const pathTranspose = (arr) =>\n        isVertical() ? arr.map((d) => [d[1], d[0]]) : arr;\n\n    const isVertical = () => orient === \"left\" || orient === \"right\";\n\n    const multiAxis = (selection) => {\n        if (!groups) {\n            axisStore(baseAxis(scale).decorate(decorate))(selection);\n            return;\n        }\n\n        // if (selection.selection) {\n        //     groupDataJoin.call(selection);\n        //     domainPathDataJoin.call(selection);\n        // }\n\n        selection.each((data, index, group) => {\n            const element = group[index];\n\n            const container = select(element);\n\n            const sign = orient === \"bottom\" || orient === \"right\" ? 1 : -1;\n\n            // add the domain line\n            const range = scale.range();\n            const domainPathData = pathTranspose([\n                [range[0], sign * tickSizeOuter],\n                [range[0], 0],\n                [range[1], 0],\n                [range[1], sign * tickSizeOuter],\n            ]);\n\n            const domainLine = domainPathDataJoin(container, [data]);\n            domainLine\n                .attr(\"d\", line()(domainPathData))\n                .attr(\"stroke\", \"#000\")\n                .attr(\"fill\", \"none\");\n\n            const g = groupDataJoin(container, groups);\n\n            const getAxisSize = (i) =>\n                Array.isArray(tickSizeInner) ? tickSizeInner[i] : tickSizeInner;\n            const getAxisOffset = (i) => {\n                let sum = 0;\n                for (let n = 0; n < i; n++) {\n                    sum += getAxisSize(n);\n                }\n                return sum;\n            };\n\n            g.attr(\"transform\", (d, i) =>\n                translate(0, sign * getAxisOffset(i))\n            ).each((group, i, nodes) => {\n                const groupElement = select(nodes[i]);\n                const groupScale = scaleFromGroup(scale, group);\n                const useAxis = axisStore(baseAxis(groupScale))\n                    .decorate((s, data) => decorate(s, data, i))\n                    .tickSizeInner(getAxisSize(i))\n                    .tickOffset((d) => groupScale.step(d) / 2);\n                useAxis(groupElement);\n\n                groupElement.select(\"path.domain\").attr(\"visibility\", \"hidden\");\n            });\n\n            // exit\n            g.exit().attr(\"transform\", (d, i) =>\n                translate(0, sign * getAxisOffset(i))\n            );\n        });\n    };\n\n    const scaleFromGroup = (scale, group) => {\n        function customScale(value) {\n            const values = value.domain;\n            return values.reduce((sum, d) => sum + scale(d), 0) / values.length;\n        }\n\n        customScale.ticks = () => {\n            return group;\n        };\n        customScale.tickFormat = () => (d) => {\n            return d.text;\n        };\n        customScale.copy = () => scaleFromGroup(scale, group);\n\n        customScale.step = (value) => value.domain.length * scale.step();\n\n        rebindAll(customScale, scale, exclude(\"ticks\", \"step\", \"copy\"));\n        return customScale;\n    };\n\n    multiAxis.tickSize = (...args) => {\n        if (!args.length) {\n            return tickSizeInner;\n        }\n        tickSizeInner = tickSizeOuter = Number(args[0]);\n        return multiAxis;\n    };\n\n    multiAxis.tickSizeInner = (...args) => {\n        if (!args.length) {\n            return tickSizeInner;\n        }\n        tickSizeInner = Array.isArray(args[0]) ? args[0] : Number(args[0]);\n        return multiAxis;\n    };\n\n    multiAxis.tickSizeOuter = (...args) => {\n        if (!args.length) {\n            return tickSizeOuter;\n        }\n        tickSizeOuter = Number(args[0]);\n        return multiAxis;\n    };\n\n    multiAxis.decorate = (...args) => {\n        if (!args.length) {\n            return decorate;\n        }\n        decorate = args[0];\n        return multiAxis;\n    };\n\n    multiAxis.groups = (...args) => {\n        if (!args.length) {\n            return groups;\n        }\n        groups = args[0];\n        return multiAxis;\n    };\n\n    rebindAll(multiAxis, axisStore);\n\n    return multiAxis;\n};\n\nexport const multiAxisTop = (scale) => multiAxis(\"top\", axisOrdinalTop, scale);\n\nexport const multiAxisBottom = (scale) =>\n    multiAxis(\"bottom\", axisOrdinalBottom, scale);\n\nexport const multiAxisLeft = (scale) =>\n    multiAxis(\"left\", axisOrdinalLeft, scale);\n\nexport const multiAxisRight = (scale) =>\n    multiAxis(\"right\", axisOrdinalRight, scale);\n", "export default (...names) => {\n    const data = {};\n\n    const store = (target) => {\n        for (const key of Object.keys(data)) {\n            target[key](data[key]);\n        }\n        return target;\n    };\n\n    for (const name of names) {\n        store[name] = (...args) => {\n            if (!args.length) {\n                return data[name];\n            }\n            data[name] = args[0];\n            return store;\n        };\n    }\n\n    return store;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport function getChartElement(element) {\n    return element.getRootNode().host;\n}\n\nexport function getChartContainer(element) {\n    return element.closest(\"#container.chart\");\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\n\nexport const chartSvgFactory = (xAxis, yAxis) =>\n    chartFactory(xAxis, yAxis, (x, y) => x.svgPlotArea(y), false);\nexport const chartCanvasFactory = (xAxis, yAxis) =>\n    chartFactory(\n        xAxis,\n        yAxis,\n        (x, y) => {\n            return x.canvasPlotArea(y).svgPlotArea(fc.seriesSvgPoint());\n        },\n        true\n    );\n\nconst chartFactory = (xAxis, yAxis, cartesian, canvas) => {\n    let axisSplitter = null;\n    let altAxis = null;\n\n    const chart = fc\n        .chartCartesian({\n            xScale: xAxis.scale,\n            yScale: yAxis.scale,\n            xAxis: xAxis.component,\n            yAxis: yAxis.component,\n        })\n        .xDomain(xAxis.domain)\n        .xLabel(xAxis.label)\n        .xAxisHeight(xAxis.size)\n        .xDecorate(xAxis.decorate)\n        .xTickFormat(xAxis.tickFormatFunction)\n        .yDomain(yAxis.domain)\n        .yLabel(yAxis.label)\n        .yAxisWidth(yAxis.size)\n        .yDecorate(yAxis.decorate)\n        .yOrient(\"left\")\n        .yTickFormat(yAxis.tickFormatFunction);\n\n    if (xAxis.decorate) chart.xDecorate(xAxis.decorate);\n    if (yAxis.decorate) chart.yDecorate(yAxis.decorate);\n\n    // Padding defaults can be overridden\n    chart.xPaddingInner && chart.xPaddingInner(1);\n    chart.xPaddingOuter && chart.xPaddingOuter(0.5);\n    chart.yPaddingInner && chart.yPaddingInner(1);\n    chart.yPaddingOuter && chart.yPaddingOuter(0.5);\n\n    chart.axisSplitter = (...args) => {\n        if (!args.length) {\n            return axisSplitter;\n        }\n        axisSplitter = args[0];\n        return chart;\n    };\n\n    chart.altAxis = (...args) => {\n        if (!args.length) {\n            return altAxis;\n        }\n        altAxis = args[0];\n        return chart;\n    };\n\n    /**\n     * Mimics the previous D3FC API and returns the main plot area selection.\n     * Both chart types will have both layers, so this should be determined\n     * by the constructor's `canvas` property.\n     *\n     * @param  {...any} args If provided, this function will act as a setter.\n     * @returns\n     */\n    chart.plotArea = function (...args) {\n        if (args.length == 0) {\n            if (canvas) {\n                return this.canvasPlotArea();\n            } else {\n                return this.svgPlotArea();\n            }\n        } else {\n            return cartesian(this, ...args);\n        }\n    };\n\n    const oldDecorate = chart.decorate();\n    chart.decorate((container, data) => {\n        const plotArea = container.select(\"d3fc-svg.plot-area\");\n        const node = plotArea.select(\"svg\").node();\n        node.setAttribute(\n            \"viewBox\",\n            `0 0 ${plotArea.node().clientWidth} ${plotArea.node().clientHeight}`\n        );\n        node.setAttribute(\"preserveAspectRatio\", \"none\");\n\n        for (const axis of [\"x-axis\", \"y-axis\"]) {\n            container\n                .select(`d3fc-svg.${axis} svg`)\n                .node()\n                .setAttribute(\"preserveAspectRatio\", \"none\");\n        }\n\n        oldDecorate(container, data);\n\n        // Not sure why these are out of order ...\n        // https://github.com/d3fc/d3fc/blob/master/packages/d3fc-chart/README.md#changing-the-z-order-of-plot-areas\n        if (canvas) {\n            const svgPlotArea = container.select(\".svg-plot-area\").node();\n            const canvasPlotArea = container.select(\".canvas-plot-area\").node();\n            d3.selectAll([svgPlotArea, canvasPlotArea]).order();\n        }\n\n        if (!axisSplitter) return;\n\n        if (axisSplitter.haveSplit()) {\n            // Render a second axis on the right of the chart\n            const altData = axisSplitter.altData();\n\n            const y2AxisDataJoin = fc\n                .dataJoin(\"d3fc-svg\", \"y2-axis\")\n                .key((d) => d);\n            const ySeriesDataJoin = fc.dataJoin(\"g\", \"y-series\").key((d) => d);\n\n            // Column 5 of the grid\n            container\n                // .enter()\n                .append(\"div\")\n                .attr(\"class\", \"y-label right-label\")\n                .style(\"grid-column\", 5)\n                .style(\"-ms-grid-column\", 5)\n                .style(\"grid-row\", 3)\n                .style(\"-ms-grid-row\", 3)\n                .style(\"width\", altAxis.size || \"1em\")\n                .style(\"display\", \"flex\")\n                .style(\"align-items\", \"center\")\n                .style(\"justify-content\", \"center\")\n                .append(\"span\")\n                .attr(\"class\", \"y-label splitter-label\")\n                .style(\"transform\", \"rotate(-90deg)\");\n\n            const y2Scale = altAxis.scale.domain(altAxis.domain);\n            const yAxisComponent = altAxis.component.right(y2Scale);\n            yAxisComponent.tickFormat(altAxis.tickFormatFunction);\n            if (altAxis.decorate) yAxisComponent.decorate(altAxis.decorate);\n\n            // Render the axis\n            y2AxisDataJoin(container, [\"right\"])\n                .attr(\"class\", (d) => `y-axis ${d}-axis`)\n                .on(\"measure\", function (event, d) {\n                    const {width, height} = event.detail;\n                    if (d === \"left\") {\n                        d3.select(event.currentTarget)\n                            .select(\"svg\")\n                            .attr(\"viewBox\", `${-width} 0 ${width} ${height}`)\n                            .attr(\"preserveAspectRatio\", \"none\");\n                    }\n                    y2Scale.range([height, 0]);\n                })\n                .on(\"draw\", function (event, d) {\n                    d3.select(event.currentTarget)\n                        .select(\"svg\")\n                        .call(yAxisComponent);\n                });\n\n            // Render all the series using either the primary or alternate\n            // y-scales\n            if (canvas) {\n                const drawMultiCanvasSeries = (selection) => {\n                    const canvasPlotArea = chart.plotArea();\n                    canvasPlotArea\n                        .context(selection.node().getContext(\"2d\"))\n                        .xScale(xAxis.scale);\n\n                    const yScales = [yAxis.scale, y2Scale];\n                    [data, altData].forEach((d, i) => {\n                        canvasPlotArea.yScale(yScales[i]);\n                        canvasPlotArea(d);\n                    });\n                };\n\n                container\n                    .select(\"d3fc-canvas.plot-area\")\n                    .on(\"draw\", function (event, d) {\n                        drawMultiCanvasSeries(\n                            d3.select(event.currentTarget).select(\"canvas\")\n                        );\n                    });\n            } else {\n                const drawMultiSvgSeries = function (selection) {\n                    const svgPlotArea = chart.plotArea();\n                    svgPlotArea.xScale(xAxis.scale);\n\n                    const yScales = [yAxis.scale, y2Scale];\n                    ySeriesDataJoin(selection, [data, altData]).each(\n                        (d, i, nodes) => {\n                            svgPlotArea.yScale(yScales[i]);\n                            d3.select(nodes[i]).datum(d).call(svgPlotArea);\n                        }\n                    );\n                };\n\n                container\n                    .select(\"d3fc-svg.plot-area\")\n                    .on(\"draw\", function (event, d) {\n                        drawMultiSvgSeries(\n                            d3.select(event.currentTarget).select(\"svg\")\n                        );\n                    });\n            }\n        }\n\n        // Render any UI elements the splitter component requires\n        axisSplitter(container);\n    });\n\n    return chart;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {tooltip} from \"../tooltip/tooltip\";\n\nexport function barSeries(settings, color) {\n    let series =\n        settings.mainValues.length > 1\n            ? fc.seriesSvgGrouped(fc.seriesSvgBar())\n            : fc.seriesSvgBar();\n\n    series = series.decorate((selection) => {\n        tooltip().settings(settings)(selection);\n        selection.style(\"fill\", (d) => color(d.key));\n    });\n\n    return fc\n        .autoBandwidth(minBandwidth(series))\n        .crossValue((d) => d.crossValue)\n        .mainValue((d) => (d.mainValue ? d.mainValue : 0))\n        .baseValue((d) => d.baseValue);\n}\n\nconst minBandwidth = (adaptee) => {\n    const min = (arg) => {\n        return adaptee(arg);\n    };\n\n    fc.rebindAll(min, adaptee);\n\n    min.bandwidth = (...args) => {\n        if (!args.length) {\n            return adaptee.bandwidth();\n        }\n        adaptee.bandwidth(Math.max(args[0], 1));\n        return min;\n    };\n\n    return min;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {select} from \"d3\";\nimport {getChartContainer} from \"../plugin/root\";\nimport {getOrCreateElement, isElementOverflowing} from \"../utils/utils\";\nimport tooltipTemplate from \"../../html/tooltip.html\";\nimport {generateHtml} from \"./generateHTML\";\nimport {selectionEvent} from \"./selectionEvent\";\n\nexport const tooltip = () => {\n    let alwaysShow = false;\n    let tooltipDiv = null;\n    let settings = null;\n    let centered = false;\n\n    const _tooltip = (selection) => {\n        const node = selection.node();\n\n        if (!node || !node.isConnected) {\n            hideTooltip(tooltipDiv);\n            return;\n        }\n\n        const container = select(getChartContainer(node));\n        tooltipDiv = getTooltipDiv(container);\n\n        const showTip = function (_event, data) {\n            generateHtml(tooltipDiv, data, settings);\n            const nodes = selection.nodes();\n            const i = nodes.indexOf(this);\n            showTooltip(container.node(), nodes[i], tooltipDiv, centered);\n            select(nodes[i]).style(\"opacity\", \"0.7\");\n        };\n\n        const hideTip = function (_event, _data) {\n            hideTooltip(tooltipDiv);\n            const nodes = selection.nodes();\n            const i = nodes.indexOf(this);\n            if (nodes) select(nodes[i]).style(\"opacity\", \"1\");\n        };\n\n        if (alwaysShow) {\n            selection.each(function (data) {\n                return showTip.call(this, undefined, data);\n            });\n        } else {\n            selection.on(\"mouseover\", showTip).on(\"mouseout\", hideTip);\n            selectionEvent().settings(settings)(selection);\n        }\n    };\n\n    _tooltip.alwaysShow = (...args) => {\n        if (!args.length) {\n            return alwaysShow;\n        }\n        alwaysShow = args[0];\n        return _tooltip;\n    };\n\n    _tooltip.centered = (...args) => {\n        if (!args.length) {\n            return centered;\n        }\n        centered = args[0];\n        return _tooltip;\n    };\n\n    _tooltip.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return _tooltip;\n    };\n\n    return _tooltip;\n};\n\nfunction getTooltipDiv(container) {\n    return getOrCreateElement(container, \"div.tooltip\", () =>\n        container\n            .append(\"div\")\n            .attr(\"class\", \"tooltip\")\n            .style(\"z-index\", 3)\n            .style(\"opacity\", 0)\n            .html(tooltipTemplate)\n    );\n}\n\nfunction showTooltip(containerNode, node, tooltipDiv, centered) {\n    const containerRect = containerNode.getBoundingClientRect();\n    const rect = node.getBoundingClientRect();\n\n    let left = rect.left + rect.width / 2 - containerRect.left;\n    let top = rect.top - containerRect.top + containerNode.scrollTop;\n\n    if (centered)\n        top =\n            rect.top +\n            rect.height / 2 -\n            containerRect.top +\n            containerNode.scrollTop;\n\n    tooltipDiv\n        .style(\"left\", `${left}px`)\n        .style(\"top\", `${top}px`)\n        // .transition()\n        // .duration(200)\n        .style(\"opacity\", 0.9);\n\n    if (centered) [left, top] = centerTip(tooltipDiv, containerRect);\n\n    shiftIfOverflowingChartArea(tooltipDiv, containerRect, left, top, centered);\n}\n\nfunction centerTip(tooltipDiv, containerRect) {\n    const tooltipDivRect = tooltipDiv.node().getBoundingClientRect();\n\n    const leftAdjust = tooltipDivRect.width / 2;\n    const newLeft = tooltipDivRect.left - leftAdjust - containerRect.left;\n    tooltipDiv.style(\"left\", `${newLeft}px`);\n\n    const topAdjust = tooltipDivRect.height / 2;\n    const newTop = tooltipDivRect.top - topAdjust - containerRect.top;\n    tooltipDiv.style(\"top\", `${newTop}px`);\n    return [newLeft, newTop];\n}\n\nfunction shiftIfOverflowingChartArea(\n    tooltipDiv,\n    containerRect,\n    left,\n    top,\n    centered = false\n) {\n    const tooltipDivRect = tooltipDiv.node().getBoundingClientRect();\n\n    if (isElementOverflowing(containerRect, tooltipDivRect)) {\n        const leftAdjust = tooltipDivRect.right - containerRect.right;\n        tooltipDiv.style(\"left\", `${left - leftAdjust}px`);\n    }\n\n    if (isElementOverflowing(containerRect, tooltipDivRect, \"bottom\")) {\n        const topAdjust = tooltipDivRect.bottom - containerRect.bottom;\n        tooltipDiv.style(\"top\", `${top - topAdjust}px`);\n    }\n\n    if (!centered) return;\n\n    if (isElementOverflowing(containerRect, tooltipDivRect, \"left\")) {\n        const leftAdjust = tooltipDivRect.left - containerRect.left;\n        tooltipDiv.style(\"left\", `${left - leftAdjust}px`);\n    }\n\n    if (isElementOverflowing(containerRect, tooltipDivRect, \"top\")) {\n        const topAdjust = tooltipDivRect.top - containerRect.top;\n        tooltipDiv.style(\"top\", `${top - topAdjust}px`);\n    }\n}\n\nfunction hideTooltip(tooltipDiv) {\n    if (tooltipDiv) {\n        tooltipDiv\n            // .transition()\n            // .duration(500)\n            .style(\"opacity\", 0);\n    }\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport function getOrCreateElement(container, selector, createCallback) {\n    let element = container.select(selector);\n    return element.size() > 0 ? element : createCallback();\n}\n\nexport function isElementOverflowing(\n    containerRect,\n    innerElementRect,\n    direction = \"right\"\n) {\n    if (direction === \"right\" || direction === \"bottom\") {\n        return containerRect[direction] < innerElementRect[direction]\n            ? true\n            : false;\n    }\n\n    if (direction === \"left\" || direction === \"top\") {\n        return containerRect[direction] > innerElementRect[direction]\n            ? true\n            : false;\n    }\n\n    throw `Direction being checked for overflow is invalid: ${direction}`;\n}\n\nexport function isElementOverlapping(\n    axis,\n    immovableRect,\n    elementRect,\n    fuzz = 0\n) {\n    const dimension = axis === \"x\" ? \"width\" : \"height\";\n\n    const immovableInnerPoint = immovableRect[axis];\n    const immovableOuterPoint = immovableRect[axis] + immovableRect[dimension];\n\n    const elementInnerPoint = elementRect[axis];\n    const elementOuterPoint = elementRect[axis] + elementRect[dimension];\n\n    const innerPointInside =\n        elementInnerPoint + fuzz > immovableInnerPoint &&\n        elementInnerPoint - fuzz < immovableOuterPoint;\n    const outerPointInside =\n        elementOuterPoint + fuzz > immovableInnerPoint &&\n        elementOuterPoint - fuzz < immovableOuterPoint;\n    const pointsEitherSide =\n        elementInnerPoint + fuzz < immovableInnerPoint &&\n        elementOuterPoint - fuzz > immovableOuterPoint;\n\n    return innerPointInside || outerPointInside || pointsEitherSide;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {select} from \"d3\";\nimport {getGroupValues, getSplitValues, getDataValues} from \"./selectionData\";\nimport {get_type_config} from \"../../../../perspective/src/js/config\";\n\nexport function generateHtml(tooltipDiv, data, settings) {\n    const tooltipValues = getGroupValues(data, settings)\n        .concat(getSplitValues(data, settings))\n        .concat(getDataValues(data, settings));\n    addDataValues(tooltipDiv, tooltipValues);\n}\n\nfunction addDataValues(tooltipDiv, values) {\n    tooltipDiv\n        .select(\"#tooltip-values\")\n        .selectAll(\"li\")\n        .data(values)\n        .join(\"li\")\n        .each(function (d) {\n            select(this)\n                .text(`${d.name}: `)\n                .append(\"b\")\n                .text(formatNumber(d.value));\n        });\n}\n\nconst formatNumber = (value) =>\n    value === null\n        ? \"-\"\n        : value.toLocaleString(undefined, {\n              style: \"decimal\",\n              minimumFractionDigits: get_type_config(\"float\").precision,\n              maximumFractionDigits: get_type_config(\"float\").precision,\n          });\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {get_type_config} from \"../../../../perspective/src/js/config\";\n\nexport function toValue(type, value) {\n    switch (type) {\n        case \"date\":\n        case \"datetime\":\n            return value instanceof Date\n                ? value\n                : new Date(parseInt(value)).toLocaleString(\n                      \"en-us\",\n                      get_type_config(type).format\n                  );\n        case \"integer\":\n            return parseInt(value, 10);\n        case \"float\":\n            return parseFloat(value);\n    }\n    return value;\n}\n\nexport function getGroupValues(data, settings) {\n    if (settings.crossValues.length === 0) return [];\n    if (data.crossValue.length === 0) return [];\n    const groupValues = (data.crossValue.split\n        ? data.crossValue.split(\"|\")\n        : [data.crossValue]) || [data.key];\n    return groupValues.map((cross, i) => ({\n        name: settings.crossValues[i].name,\n        value: toValue(settings.crossValues[i].type, cross),\n    }));\n}\n\nexport function getSplitValues(data, settings) {\n    if (settings.splitValues.length === 0) return [];\n    const splitValues = data.key\n        ? data.key.split(\"|\")\n        : data.mainValue.split\n        ? data.mainValue.split(\"|\")\n        : [data.mainValue];\n    return settings.splitValues.map((split, i) => ({\n        name: split.name,\n        value: toValue(split.type, splitValues[i]),\n    }));\n}\n\nexport function getDataValues(data, settings) {\n    if (settings.mainValues.length > 1) {\n        if (data.mainValue) {\n            return [\n                {\n                    name: data.key,\n                    value: data.mainValue - (data.baseValue || 0),\n                },\n            ];\n        }\n        return settings.mainValues.map((main, i) => ({\n            name: main.name,\n            value: toValue(main.type, data.mainValues[i]),\n        }));\n    }\n    return [\n        {\n            name: settings.mainValues[0].name,\n            value: toValue(\n                settings.mainValues[0].type,\n                data.colorValue ||\n                    data.mainValue - data.baseValue ||\n                    data.mainValue ||\n                    data.mainValues\n            ),\n        },\n    ];\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {getGroupValues, getSplitValues, getDataValues} from \"./selectionData\";\n\nconst mapToFilter = (d) => [d.name, \"==\", d.value];\n\nexport const raiseEvent = (node, data, settings) => {\n    const column_names = getDataValues(data, settings).map((d) => d.name);\n    const groupFilters = getGroupValues(data, settings).map(mapToFilter);\n    const splitFilters = getSplitValues(data, settings).map(mapToFilter);\n\n    const filter = settings.filter.concat(groupFilters).concat(splitFilters);\n\n    node.dispatchEvent(\n        new CustomEvent(\"perspective-click\", {\n            bubbles: true,\n            composed: true,\n            detail: {\n                column_names,\n                config: {filter},\n                row: data.row,\n            },\n        })\n    );\n};\n\nexport const selectionEvent = () => {\n    let settings = null;\n\n    const _event = (selection) => {\n        const node = selection.node();\n        selection.on(\"click\", (_event, data) =>\n            raiseEvent(node, data, settings)\n        );\n    };\n\n    _event.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return _event;\n    };\n\n    return _event;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport {groupFromKey} from \"./seriesKey\";\n\nexport function seriesColors(settings) {\n    const col =\n        settings.data && settings.data.length > 0 ? settings.data[0] : {};\n    const domain = Object.keys(col).filter((k) => k !== \"__ROW_PATH__\");\n    return colorScale().settings(settings).domain(domain)();\n}\n\nexport function seriesColorsFromDistinct(settings, data) {\n    let domain = Array.from(new Set(data));\n    return colorScale().settings(settings).domain(domain)();\n}\n\nexport function seriesColorsFromGroups(settings) {\n    const col =\n        settings.data && settings.data.length > 0 ? settings.data[0] : {};\n    const domain = [];\n    Object.keys(col).forEach((key) => {\n        if (key !== \"__ROW_PATH__\") {\n            const group = groupFromKey(key);\n            if (!domain.includes(group)) {\n                domain.push(group);\n            }\n        }\n    });\n    return colorScale().settings(settings).domain(domain)();\n}\n\nexport function colorScale() {\n    let domain = null;\n    let defaultColors = null;\n    let settings = {};\n    let mapFunction = (d) =>\n        withOpacity(d, settings.colorStyles && settings.colorStyles.opacity);\n\n    const colors = () => {\n        const styles = settings.colorStyles;\n        const defaults = defaultColors || [styles.series];\n        if (defaults || domain.length > 1) {\n            const range = domain.length > 1 ? styles.scheme : defaults;\n            return d3.scaleOrdinal(range.map(mapFunction)).domain(domain);\n        }\n        return null;\n    };\n\n    colors.domain = (...args) => {\n        if (!args.length) {\n            return domain;\n        }\n        domain = args[0];\n        return colors;\n    };\n\n    colors.defaultColors = (...args) => {\n        if (!args.length) {\n            return defaultColors;\n        }\n        defaultColors = args[0];\n        return colors;\n    };\n\n    colors.mapFunction = (...args) => {\n        if (!args.length) {\n            return mapFunction;\n        }\n        mapFunction = args[0];\n        return colors;\n    };\n\n    colors.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return colors;\n    };\n\n    return colors;\n}\n\nexport function withoutOpacity(color) {\n    return setOpacity(1)(color);\n}\n\nexport function withOpacity(color, opacity = 0.5) {\n    return setOpacity(opacity)(color);\n}\n\nexport function setOpacity(opacity) {\n    return (color) => {\n        const decoded = d3.color(color);\n        decoded.opacity = opacity;\n        return decoded + \"\";\n    };\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport function groupFromKey(key) {\n    return key.split(\"|\").slice(0, -1).join(\"|\");\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {rebindAll} from \"d3fc\";\nimport {axisType} from \"./axisType\";\nimport {labelFunction as noLabel} from \"./noAxis\";\nimport {labelFunction as timeLabel} from \"./timeAxis\";\nimport {labelFunction as linearLabel} from \"./linearAxis\";\nimport {labelFunction as ordinalLabel} from \"./ordinalAxis\";\n\nconst labelFunctions = {\n    none: noLabel,\n    ordinal: ordinalLabel,\n    time: timeLabel,\n    linear: linearLabel,\n};\n\nexport const labelFunction = (settings) => {\n    const base = axisType(settings);\n    let valueName = \"__ROW_PATH__\";\n\n    const label = (d, i) => {\n        return labelFunctions[base()](valueName)(d, i);\n    };\n\n    rebindAll(label, base);\n\n    label.valueName = (...args) => {\n        if (!args.length) {\n            return valueName;\n        }\n        valueName = args[0];\n        return label;\n    };\n\n    return label;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport function splitIntoMultiSeries(\n    settings,\n    data,\n    {stack = false, excludeEmpty = false} = {}\n) {\n    const useData = data || settings.data;\n\n    if (settings.splitValues.length > 0) {\n        return splitByValuesIntoMultiSeries(settings, useData, {\n            stack,\n            excludeEmpty,\n        });\n    }\n    return [useData];\n}\n\nfunction splitByValuesIntoMultiSeries(\n    settings,\n    data,\n    {stack = false, excludeEmpty = false}\n) {\n    // Create a series for each \"split\" value, each one containing all the\n    // \"aggregate\" values, and \"base\" values to offset it from the previous\n    // series\n    const multiSeries = {};\n\n    data.forEach((col) => {\n        // Split this column by \"split\", including multiple aggregates for each\n        const baseValues = {};\n        const split = {};\n\n        // Keys are of the form \"split1|split2|aggregate\"\n        Object.keys(col)\n            .filter((key) => key !== \"__ROW_PATH__\")\n            .filter(\n                (key) =>\n                    !excludeEmpty || (col[key] != null && col[key] != undefined)\n            )\n            .forEach((key) => {\n                const labels = key.split(\"|\");\n                // label=\"aggregate\"\n                const label = labels[labels.length - 1];\n                const value = col[key] || 0;\n                const baseKey = `${label}${value >= 0 ? \"+ve\" : \"-ve\"}`;\n                // splitName=\"split1|split2\"\n                const splitName = labels.slice(0, labels.length - 1).join(\"|\");\n\n                // Combine aggregate values for the same split in a single\n                // object\n                const splitValues = (split[splitName] = split[splitName] || {\n                    __ROW_PATH__: col.__ROW_PATH__,\n                });\n                const baseValue = baseValues[baseKey] || 0;\n\n                splitValues.__KEY__ = splitName;\n\n                // Assign the values for this split/aggregate\n                if (stack) {\n                    splitValues[label] = baseValue + value;\n                    splitValues[`__BASE_VALUE__${label}`] = baseValue;\n                    baseValues[baseKey] = splitValues[label];\n                } else {\n                    splitValues[label] = value;\n                }\n                splitValues.row = col;\n            });\n\n        // Push each object onto the correct series\n        Object.keys(split).forEach((splitName) => {\n            const series = (multiSeries[splitName] =\n                multiSeries[splitName] || []);\n            series.push(split[splitName]);\n        });\n    });\n\n    return Object.keys(multiSeries).map((k) => {\n        const series = multiSeries[k];\n        series.key = k;\n        return series;\n    });\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {labelFunction} from \"../axis/axisLabel\";\nimport {splitIntoMultiSeries} from \"./splitIntoMultiSeries\";\n\nexport function groupData(settings, data) {\n    const stack = {stack: false};\n    const groupedSeries = splitIntoMultiSeries(settings, data, stack).map(\n        (data) => groupPointDataByMainValue(settings, data, stack)\n    );\n\n    if (settings.mainValues.length > 1) {\n        const flattenedSeries = groupedSeries.reduce((a, b) => a.concat(b));\n        return flattenedSeries;\n    }\n\n    return groupedSeries;\n}\n\nexport function groupAndStackData(settings, data) {\n    const stack = {stack: true};\n    return splitIntoMultiSeries(settings, data, stack).map((data) =>\n        groupPointDataByMainValue(settings, data, stack)\n    );\n}\n\nfunction seriesDataFn(settings, data, {stack = false}) {\n    const labelfn = labelFunction(settings);\n\n    return (mainValue) => {\n        const baseValue = (col) =>\n            stack ? col[`__BASE_VALUE__${mainValue.name}`] || 0 : 0;\n        const series = data.map((col, i) => ({\n            crossValue: labelfn(col, i),\n            mainValue: !!col[mainValue.name] ? col[mainValue.name] : null,\n            baseValue: baseValue(col),\n            key: col.__KEY__\n                ? `${col.__KEY__}|${mainValue.name}`\n                : mainValue.name,\n            row: col.row || col,\n        }));\n        series.key = series[0].key;\n        return series;\n    };\n}\n\nfunction groupPointDataByMainValue(settings, data, {stack = false}) {\n    // Split data into a group for each aggregate (mainValue)\n    const seriesFn = seriesDataFn(settings, data, {stack});\n\n    if (settings.mainValues.length > 1) {\n        return settings.mainValues.map(seriesFn);\n    } else {\n        return seriesFn(settings.mainValues[0]);\n    }\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport * as d3Legend from \"d3-svg-legend\";\nimport scrollableLegend from \"./scrollableLegend\";\nimport {withoutOpacity} from \"../series/seriesColors\";\nimport {getChartElement} from \"../plugin/root\";\nimport {getOrCreateElement} from \"../utils/utils\";\n\nconst scrollColorLegend = (settings) =>\n    scrollableLegend(\n        d3Legend.legendColor().shape(\"circle\").shapeRadius(6),\n        settings\n    );\n\nconst scrollSymbolLegend = (settings) =>\n    scrollableLegend(\n        d3Legend.legendSymbol().shapePadding(1).labelOffset(3),\n        settings\n    );\n\nexport const colorLegend = () => legendComponent(scrollColorLegend);\nexport const symbolLegend = () =>\n    legendComponent(scrollSymbolLegend, symbolScale);\nexport const colorGroupLegend = () =>\n    legendComponent(scrollColorLegend, symbolScale);\n\nfunction symbolScale(fromScale) {\n    if (!fromScale) return null;\n\n    const domain = fromScale.domain();\n    const range = fromScale.range().map((r) => d3.symbol().type(r)());\n\n    return d3.scaleOrdinal().domain(domain).range(range);\n}\n\nfunction legendComponent(scrollLegendComponent, scaleModifier) {\n    let settings = {};\n    let scale = null;\n    let color = null;\n\n    function legend(container) {\n        if (scale && scale.range().length > 1) {\n            const scrollLegend = scrollLegendComponent(settings);\n            scrollLegend\n                .scale(scale)\n                .orient(\"vertical\")\n                .on(\"cellclick\", function (_d) {\n                    // d3-svg-legend is very outdated and incompat with d3 6.x\n                    const d = this.__data__;\n                    settings.hideKeys = settings.hideKeys || [];\n                    if (settings.hideKeys.includes(d)) {\n                        settings.hideKeys = settings.hideKeys.filter(\n                            (k) => k !== d\n                        );\n                    } else {\n                        settings.hideKeys.push(d);\n                    }\n\n                    getChartElement(this)._draw();\n                });\n\n            scrollLegend.labels((options) => {\n                const parts = options.domain[options.i].split(\"|\");\n                return settings.mainValues.length <= 1 && parts.length > 1\n                    ? parts.slice(0, parts.length - 1).join(\"|\")\n                    : options.domain[options.i];\n            });\n\n            const legendSelection = getOrCreateElement(\n                container,\n                \"div.legend-container\",\n                () => container.append(\"div\")\n            );\n\n            scrollLegend.decorate((selection) => {\n                const isHidden = (data) =>\n                    settings.hideKeys && settings.hideKeys.includes(data);\n\n                const cells = selection\n                    .select(\"g.legendCells\")\n                    .attr(\"transform\", \"translate(20,20)\")\n                    .selectAll(\"g.cell\");\n\n                cells.classed(\"hidden\", isHidden);\n                cells.append(\"title\").html((d) => d);\n\n                if (color) {\n                    cells\n                        .select(\"circle, path\")\n                        .style(\"fill\", (d) => (isHidden(d) ? null : color(d)))\n                        .style(\"stroke\", (d) =>\n                            isHidden(d) ? null : withoutOpacity(color(d))\n                        );\n                }\n            });\n\n            // render the legend\n            legendSelection\n                .attr(\"class\", \"legend-container\")\n                .attr(\"borderbox-on-hover\", true)\n                .style(\"z-index\", \"2\")\n                .call(scrollLegend);\n        }\n    }\n\n    legend.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return legend;\n    };\n\n    legend.scale = (...args) => {\n        if (!args.length) {\n            return scale;\n        }\n        scale = scaleModifier ? scaleModifier(args[0]) : args[0];\n        return legend;\n    };\n\n    legend.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return legend;\n    };\n\n    return legend;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3Legend from \"d3-svg-legend\";\nimport {rebindAll} from \"d3fc\";\nimport {getOrCreateElement} from \"../utils/utils\";\nimport legendControlsTemplate from \"../../html/legend-controls.html\";\nimport {cropCellContents} from \"./styling/cropCellContents\";\nimport {draggableComponent} from \"./styling/draggableComponent\";\nimport {resizableComponent} from \"./styling/resizableComponent\";\n\nconst averageCellHeightPx = 16;\nconst controlsHeightPx = 20;\n\nexport default (fromLegend, settings) => {\n    const legend = fromLegend || d3Legend.legendColor();\n\n    let domain = [];\n    let pageCount = 1;\n    let pageSize;\n    let pageIndex =\n        settings.legend && settings.legend.pageIndex\n            ? settings.legend.pageIndex\n            : 0;\n    let decorate = () => {};\n    let draggable = draggableComponent().settings(settings);\n    let resizable;\n\n    const scrollableLegend = (selection) => {\n        domain = legend.scale().domain();\n\n        resizable = resizableComponent()\n            .settings(settings)\n            .maxHeight(domain.length * averageCellHeightPx + controlsHeightPx)\n            .on(\"resize\", () => render(selection));\n\n        resizable(selection);\n        draggable(selection);\n        render(selection);\n    };\n\n    const render = (selection) => {\n        calculatePageSize(selection);\n        renderControls(selection);\n        renderLegend(selection);\n        cropCellContents(selection);\n    };\n\n    const renderControls = (selection) => {\n        const controls = getLegendControls(selection);\n        controls.style(\"display\", pageCount <= 1 ? \"none\" : \"block\");\n\n        controls.select(\"#page-text\").text(`${pageIndex + 1}/${pageCount}`);\n\n        controls\n            .select(\"#up-arrow\")\n            .attr(\"class\", pageIndex === 0 ? \"disabled\" : \"\")\n            .on(\"click\", () => {\n                if (pageIndex > 0) {\n                    setPage(pageIndex - 1);\n                    render(selection);\n                }\n            });\n\n        controls\n            .select(\"#down-arrow\")\n            .attr(\"class\", pageIndex >= pageCount - 1 ? \"disabled\" : \"\")\n            .on(\"click\", () => {\n                if (pageIndex < pageCount - 1) {\n                    setPage(pageIndex + 1);\n                    render(selection);\n                }\n            });\n    };\n\n    const renderLegend = (selection) => {\n        if (pageCount > 1) legend.cellFilter(cellFilter());\n        selection.select(\"g.legendCells\").remove();\n\n        const legendElement = getLegendElement(selection);\n        legendElement.call(legend);\n\n        const cellContainerSize = selection\n            .select(\"g.legendCells\")\n            .node()\n            .getBBox();\n        legendElement.attr(\n            \"height\",\n            cellContainerSize.height + controlsHeightPx\n        );\n\n        decorate(selection);\n    };\n\n    const setPage = (index) => {\n        pageIndex = index;\n        settings.legend = {...settings.legend, pageIndex};\n    };\n\n    const cellFilter = () => (_, i) =>\n        i >= pageSize * pageIndex && i < pageSize * pageIndex + pageSize;\n\n    const calculatePageSize = (selection) => {\n        const legendContainerRect = selection.node().getBoundingClientRect();\n        let proposedPageSize =\n            Math.floor(legendContainerRect.height / averageCellHeightPx) - 1;\n\n        // if page size is less than all legend items, leave space for the\n        // legend controls\n        pageSize =\n            proposedPageSize < domain.length\n                ? proposedPageSize - 1\n                : proposedPageSize;\n        pageCount = calculatePageCount(proposedPageSize);\n        pageIndex = Math.min(pageIndex, pageCount - 1);\n    };\n\n    const calculatePageCount = (pageSize) =>\n        Math.ceil(domain.length / pageSize);\n\n    const getLegendControls = (container) =>\n        getOrCreateElement(container, \".legend-controls\", () =>\n            container\n                .append(\"g\")\n                .attr(\"class\", \"legend-controls\")\n                .html(legendControlsTemplate)\n        );\n\n    const getLegendElement = (container) =>\n        getOrCreateElement(container, \".legend\", () =>\n            container.append(\"svg\").attr(\"class\", \"legend\")\n        );\n\n    scrollableLegend.decorate = (...args) => {\n        if (!args.length) {\n            return decorate;\n        }\n        decorate = args[0];\n        return scrollableLegend;\n    };\n\n    rebindAll(scrollableLegend, legend);\n\n    return scrollableLegend;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {isElementOverflowing} from \"../../utils/utils\";\n\nexport function cropCellContents(legendDiv) {\n    const legendCells = legendDiv.select(\"g.legendCells\");\n    const legendDivRect = legendDiv.node().getBoundingClientRect();\n\n    if (\n        !isElementOverflowing(\n            legendDivRect,\n            legendCells.node().getBoundingClientRect()\n        )\n    ) {\n        return;\n    }\n\n    const svg = legendDiv.select(\".legend\");\n\n    legendCells.selectAll(\".label\").text((d, i, nodes) => {\n        const cell = nodes[i];\n        if (isElementOverflowing(legendDivRect, cell.getBoundingClientRect())) {\n            const cutoffCharIndex = getCutoffCharacterIndex(\n                cell,\n                svg,\n                legendDivRect\n            );\n            return `${d.substring(0, cutoffCharIndex - 3)}...`;\n        } else {\n            return d;\n        }\n    });\n}\n\nfunction getCutoffCharacterIndex(cell, svg, legendDivRect) {\n    const cellRect = cell.getBoundingClientRect();\n    const cutoffCoord = svg.node().createSVGPoint();\n    // Sometimes the svg point can _just_ miss a character, so we fuzz it.\n    const fuzzyFactor = 3;\n    cutoffCoord.x = legendDivRect.right - cellRect.left - fuzzyFactor;\n    cutoffCoord.y = 0;\n    return cell.getCharNumAtPosition(cutoffCoord);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {getChartContainer} from \"../../plugin/root\";\nimport {enforceContainerBoundaries, margin} from \"./enforceContainerBoundaries\";\n\nconst resizeForDraggingEvent = \"resize.for-dragging\";\n\nexport function draggableComponent() {\n    let pinned = true;\n    let settings = null;\n\n    const draggable = (element) => {\n        const node = element.node();\n        const viewer = node.getRootNode().host.closest(\"perspective-viewer\");\n        node.style.cursor = \"move\";\n        if (settings.legend) {\n            node.style.left = settings.legend.left;\n            node.style.top = settings.legend.top;\n        }\n\n        const drag = d3.drag().on(\"drag\", function (event) {\n            const offsets = enforceContainerBoundaries(\n                this,\n                event.dx,\n                event.dy\n            );\n            this.style.left = `${this.offsetLeft + offsets.x}px`;\n            this.style.top = `${this.offsetTop + offsets.y}px`;\n            const position = {\n                left: this.style.left,\n                top: this.style.top,\n            };\n            settings.legend = {...settings.legend, ...position};\n\n            pinned = isNodeInTopRight(node)\n                ? pinNodeToTopRight(node)\n                : unpinNodeFromTopRight(node, pinned);\n        });\n\n        drag.on(\"end\", function (event) {\n            d3.select(window).on(resizeForDraggingEvent, null);\n            viewer?.dispatchEvent(new Event(\"perspective-config-update\"));\n        });\n\n        element.call(drag);\n    };\n\n    draggable.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return draggable;\n    };\n\n    return draggable;\n}\n\nfunction unpinNodeFromTopRight(node, pinned) {\n    if (pinned !== false) {\n        // Default behaviour for the legend is to remain pinned to the top right\n        // hand corner with a specific margin. Once the legend has moved we\n        // cannot continue to use that css based approach.\n        d3.select(window).on(resizeForDraggingEvent, function () {\n            const offsets = enforceContainerBoundaries(node, 0, 0);\n            node.style.left = `${node.offsetLeft + offsets.x}px`;\n            node.style.top = `${node.offsetTop + offsets.y}px`;\n        });\n    }\n    return false;\n}\n\nfunction pinNodeToTopRight(node) {\n    d3.select(window).on(resizeForDraggingEvent, null);\n    node.style.left = \"auto\";\n    return true;\n}\n\nfunction isNodeInTopRight(node) {\n    const nodeRect = node.getBoundingClientRect();\n    const containerRect = d3\n        .select(getChartContainer(node))\n        .node()\n        .getBoundingClientRect();\n\n    const fuzz = 5;\n\n    return (\n        nodeRect.right + margin + fuzz >= containerRect.right &&\n        nodeRect.top - margin - fuzz <= containerRect.top\n    );\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {isElementOverflowing} from \"../../utils/utils\";\nimport {getChartElement} from \"../../plugin/root\";\n\nexport const margin = 10;\n\nexport function enforceContainerBoundaries(innerNode, offsetX, offsetY) {\n    const chartNodeRect = d3\n        .select(getChartElement(innerNode).getContainer())\n        .node()\n        .getBoundingClientRect();\n\n    const innerNodeRect = innerNode.getBoundingClientRect();\n\n    const draggedInnerNodeRect = {\n        top: innerNodeRect.top + offsetY - margin,\n        right: innerNodeRect.right + offsetX + margin,\n        bottom: innerNodeRect.bottom + offsetY + margin,\n        left: innerNodeRect.left + offsetX - margin,\n    };\n\n    const adjustedOffsets = {x: offsetX, y: offsetY};\n    const boundaries = [\n        {edge: \"right\", dimension: \"x\"},\n        {edge: \"left\", dimension: \"x\"},\n        {edge: \"top\", dimension: \"y\"},\n        {edge: \"bottom\", dimension: \"y\"},\n    ];\n\n    boundaries.forEach((bound) => {\n        if (\n            isElementOverflowing(\n                chartNodeRect,\n                draggedInnerNodeRect,\n                bound.edge\n            )\n        ) {\n            const adjustment =\n                draggedInnerNodeRect[bound.edge] - chartNodeRect[bound.edge];\n            adjustedOffsets[bound.dimension] =\n                adjustedOffsets[bound.dimension] - adjustment;\n        }\n    });\n\n    return adjustedOffsets;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {enforceContainerBoundaries} from \"./enforceContainerBoundaries\";\n\nconst horizontalHandleClass = \"horizontal-drag-handle\";\nconst verticalHandleClass = \"vertical-drag-handle\";\nconst cornerHandleClass = \"corner-drag-handle\";\n\nconst handlesContainerId = \"dragHandles\";\n\nconst fillOpacity = 0.0;\nconst resizeEvent = \"resize\";\n\nexport function resizableComponent() {\n    let handleWidthPx = 9;\n    let zIndex = 3;\n    let settings = null;\n    const minDimensionsPx = {height: 100, width: 100};\n    const maxDimensionsPx = {height: null, width: null};\n\n    const callbacks = [];\n    const executeCallbacks = (event, direction) =>\n        callbacks\n            .filter((callback) => callback.event === event)\n            .forEach((callback) => callback.execute(direction));\n\n    const resizable = (container) => {\n        if (handlesContainerExists(container)) {\n            return;\n        }\n\n        const dragHelper = {\n            left: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: dragLeft(event),\n                    vertical: false,\n                }),\n            top: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: false,\n                    vertical: dragTop(event),\n                }),\n            right: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: dragRight(event),\n                    vertical: false,\n                }),\n            bottom: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: false,\n                    vertical: dragBottom(event),\n                }),\n            topleft: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: dragLeft(event),\n                    vertical: dragTop(event),\n                }),\n            topright: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: dragRight(event),\n                    vertical: dragTop(event),\n                }),\n            bottomright: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: dragRight(event),\n                    vertical: dragBottom(event),\n                }),\n            bottomleft: (event) =>\n                executeCallbacks(resizeEvent, {\n                    horizontal: dragLeft(event),\n                    vertical: dragBottom(event),\n                }),\n        };\n\n        const containerNode = container.node();\n        if (settings.legend) {\n            containerNode.style.height = settings.legend.height;\n            containerNode.style.width = settings.legend.width;\n        }\n\n        const containerRect = containerNode.getBoundingClientRect();\n        const handles = container\n            .append(\"svg\")\n            .attr(\"id\", handlesContainerId)\n            .attr(\"width\", containerRect.width)\n            .attr(\"height\", containerRect.height);\n        const handlesGroup = handles.append(\"g\");\n\n        const isVertical = (d) => d === \"left\" || d === \"right\";\n        const xCoordHelper = {\n            left: 0,\n            top: handleWidthPx,\n            right: containerRect.width - handleWidthPx,\n            bottom: handleWidthPx,\n        };\n        const yCoordHelper = {\n            left: handleWidthPx,\n            top: 0,\n            right: handleWidthPx,\n            bottom: containerRect.height - handleWidthPx,\n        };\n        const edgeHandles = [\"left\", \"top\", \"right\", \"bottom\"];\n        const [leftHandle, topHandle, rightHandle, bottomHandle] =\n            edgeHandles.map((edge) =>\n                handlesGroup\n                    .append(\"rect\")\n                    .attr(\"id\", `drag${edge}`)\n                    .attr(\n                        \"class\",\n                        isVertical(edge)\n                            ? verticalHandleClass\n                            : horizontalHandleClass\n                    )\n                    .attr(\"y\", yCoordHelper[edge])\n                    .attr(\"x\", xCoordHelper[edge])\n                    .attr(\n                        \"height\",\n                        isVertical(edge)\n                            ? containerRect.height - handleWidthPx * 2\n                            : handleWidthPx\n                    )\n                    .attr(\n                        \"width\",\n                        isVertical(edge)\n                            ? handleWidthPx\n                            : containerRect.width - handleWidthPx * 2\n                    )\n                    .attr(\"fill\", isVertical(edge) ? \"lightgreen\" : \"lightblue\")\n                    .attr(\"fill-opacity\", fillOpacity)\n                    .style(\"z-index\", zIndex)\n                    .attr(\n                        \"cursor\",\n                        isVertical(edge) ? \"ew-resize\" : \"ns-resize\"\n                    )\n                    .call(d3.drag().on(\"drag\", dragHelper[edge]))\n            );\n\n        const concatCornerEdges = (corner) => `${corner[0]}${corner[1]}`;\n        const cornerCursorHelper = {\n            topleft: \"nwse\",\n            topright: \"nesw\",\n            bottomright: \"nwse\",\n            bottomleft: \"nesw\",\n        };\n        const cornerHandles = [\n            [\"top\", \"left\"],\n            [\"top\", \"right\"],\n            [\"bottom\", \"right\"],\n            [\"bottom\", \"left\"],\n        ];\n        const [\n            topLeftHandle,\n            topRightHandle,\n            bottomRightHandle,\n            bottomLeftHandle,\n        ] = cornerHandles.map((corner) =>\n            handlesGroup\n                .append(\"rect\")\n                .attr(\"id\", `drag${concatCornerEdges(corner)}`)\n                .attr(\"class\", `${cornerHandleClass} ${corner[0]} ${corner[1]}`)\n                .attr(\"height\", handleWidthPx)\n                .attr(\"width\", handleWidthPx)\n                .attr(\"fill\", \"red\")\n                .attr(\"fill-opacity\", fillOpacity)\n                .style(\"z-index\", zIndex)\n                .attr(\n                    \"cursor\",\n                    `${cornerCursorHelper[concatCornerEdges(corner)]}-resize`\n                )\n                .call(\n                    d3.drag().on(\"drag\", dragHelper[concatCornerEdges(corner)])\n                )\n        );\n\n        enforceMaxDimensions(\"height\", \"y\", bottomHandle);\n        enforceMaxDimensions(\"width\", \"x\", rightHandle);\n        pinCorners(handles);\n\n        function dragLeft(event) {\n            const offset = enforceDistToParallelBarConstraints(\n                enforceContainerBoundaries(leftHandle.node(), event.x, 0).x,\n                handles,\n                \"width\",\n                (x, y) => x - y\n            );\n            containerNode.style.left = `${containerNode.offsetLeft + offset}px`;\n            containerNode.style.width = `${\n                containerNode.offsetWidth - offset\n            }px`;\n            updateSettings();\n            return resizeAndRelocateHandles(rightHandle, offset, \"width\", \"x\");\n        }\n\n        function dragRight(event) {\n            const offset = -enforceDistToParallelBarConstraints(\n                enforceContainerBoundaries(rightHandle.node(), event.dx, 0).x,\n                handles,\n                \"width\",\n                (x, y) => x + y\n            );\n            if (\n                pointerFallenBehindAbsoluteCoordinates(\n                    offset,\n                    \"x\",\n                    rightHandle,\n                    event\n                )\n            )\n                return false;\n            containerNode.style.width = `${\n                containerNode.offsetWidth - offset\n            }px`;\n            updateSettings();\n            return resizeAndRelocateHandles(rightHandle, offset, \"width\", \"x\");\n        }\n\n        function dragTop(event) {\n            const offset = enforceDistToParallelBarConstraints(\n                enforceContainerBoundaries(topHandle.node(), 0, event.y).y,\n                handles,\n                \"height\",\n                (x, y) => x - y\n            );\n            containerNode.style.top = `${containerNode.offsetTop + offset}px`;\n            containerNode.style.height = `${\n                containerNode.offsetHeight - offset\n            }px`;\n            updateSettings();\n            return resizeAndRelocateHandles(\n                bottomHandle,\n                offset,\n                \"height\",\n                \"y\"\n            );\n        }\n\n        function dragBottom(event) {\n            const offset = -enforceDistToParallelBarConstraints(\n                enforceContainerBoundaries(bottomHandle.node(), 0, event.dy).y,\n                handles,\n                \"height\",\n                (x, y) => x + y\n            );\n            if (\n                pointerFallenBehindAbsoluteCoordinates(\n                    offset,\n                    \"y\",\n                    bottomHandle,\n                    event\n                )\n            )\n                return false;\n            containerNode.style.height = `${\n                containerNode.offsetHeight - offset\n            }px`;\n            updateSettings();\n            return resizeAndRelocateHandles(\n                bottomHandle,\n                offset,\n                \"height\",\n                \"y\"\n            );\n        }\n\n        function updateSettings() {\n            const dimensions = {\n                top: containerNode.style.top,\n                left: containerNode.style.left,\n                height: containerNode.style.height,\n                width: containerNode.style.width,\n            };\n            settings.legend = {...settings.legend, ...dimensions};\n        }\n\n        function resizeAndRelocateHandles(handle, offset, dimension, axis) {\n            extendHandlesBox(handles, dimension, offset);\n            pinHandleToHandleBoxEdge(handle, axis, offset);\n            extendPerpendicularHandles(\n                handles,\n                offset,\n                dimension,\n                dimension === \"height\"\n                    ? verticalHandleClass\n                    : horizontalHandleClass\n            );\n            pinCorners(handles);\n            return offset != 0;\n        }\n\n        function pinCorners(handles) {\n            topLeftHandle.attr(\"y\", 0, \"x\", 0);\n            topRightHandle\n                .attr(\"y\", 0)\n                .attr(\"x\", handles.attr(\"width\") - handleWidthPx);\n            bottomRightHandle\n                .attr(\"y\", handles.attr(\"height\") - handleWidthPx)\n                .attr(\"x\", handles.attr(\"width\") - handleWidthPx);\n            bottomLeftHandle\n                .attr(\"y\", handles.attr(\"height\") - handleWidthPx)\n                .attr(\"x\", 0);\n        }\n\n        function enforceMaxDimensions(dimension, axis, relativeHandle) {\n            if (\n                !!maxDimensionsPx[dimension] &&\n                maxDimensionsPx[dimension] < containerRect[dimension]\n            ) {\n                containerNode.style[\n                    dimension\n                ] = `${maxDimensionsPx[dimension]}px`;\n                resizeAndRelocateHandles(\n                    relativeHandle,\n                    containerRect[dimension] - maxDimensionsPx[dimension],\n                    dimension,\n                    axis\n                );\n            }\n        }\n    };\n\n    resizable.on = (event, callback) => {\n        callbacks.push({event: event, execute: callback});\n        return resizable;\n    };\n\n    resizable.zIndex = (input) => {\n        zIndex = input;\n        return resizable;\n    };\n\n    resizable.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return resizable;\n    };\n\n    resizable.minWidth = (input) => {\n        minDimensionsPx.width = input;\n        if (!!maxDimensionsPx.width)\n            maxDimensionsPx.width = Math.max(\n                minDimensionsPx.width,\n                maxDimensionsPx.width\n            );\n        return resizable;\n    };\n\n    resizable.minHeight = (input) => {\n        minDimensionsPx.height = input;\n        if (!!maxDimensionsPx.height)\n            maxDimensionsPx.height = Math.max(\n                minDimensionsPx.height,\n                maxDimensionsPx.height\n            );\n        return resizable;\n    };\n\n    resizable.handleWidth = (input) => {\n        handleWidthPx = input;\n        return resizable;\n    };\n\n    resizable.maxWidth = (input) => {\n        maxDimensionsPx.width = input;\n        minDimensionsPx.width = Math.min(\n            minDimensionsPx.width,\n            maxDimensionsPx.width\n        );\n        return resizable;\n    };\n\n    resizable.maxHeight = (input) => {\n        maxDimensionsPx.height = input;\n        minDimensionsPx.height = Math.min(\n            minDimensionsPx.height,\n            maxDimensionsPx.height\n        );\n        return resizable;\n    };\n\n    function pointerFallenBehindAbsoluteCoordinates(\n        offset,\n        axis,\n        handle,\n        event\n    ) {\n        const becauseCrossedMinSize = (offset, axis, handle, event) =>\n            offset < 0 && event[axis] < Number(handle.attr(axis));\n        const becauseExitedCoordinateSpace = (offset, axis, handle, event) =>\n            offset > 0 && event[axis] > Number(handle.attr(axis));\n        return (\n            becauseCrossedMinSize(offset, axis, handle, event) ||\n            becauseExitedCoordinateSpace(offset, axis, handle, event)\n        );\n    }\n\n    function enforceDistToParallelBarConstraints(\n        offset,\n        dragHandleContainer,\n        dimension,\n        operatorFunction\n    ) {\n        const anticipatedDimension = operatorFunction(\n            Number(dragHandleContainer.attr(dimension)),\n            offset\n        );\n        if (anticipatedDimension < minDimensionsPx[dimension]) {\n            const difference =\n                minDimensionsPx[dimension] - anticipatedDimension;\n            return operatorFunction(offset, difference);\n        }\n        if (\n            !!maxDimensionsPx[dimension] &&\n            anticipatedDimension > maxDimensionsPx[dimension]\n        ) {\n            const difference =\n                maxDimensionsPx[dimension] - anticipatedDimension;\n            return operatorFunction(offset, difference);\n        }\n        return offset;\n    }\n\n    return resizable;\n}\n\n// \"dimension\" referring to width or height\nconst extendPerpendicularHandles = (\n    handles,\n    offset,\n    dimension,\n    orientationClass\n) => {\n    const perpendicularHandles = handles.selectAll(`.${orientationClass}`);\n    perpendicularHandles.each((_, i, nodes) => {\n        const handleNode = nodes[i];\n        const handleElement = d3.select(handleNode);\n        handleElement.attr(\n            dimension,\n            handleNode.getBoundingClientRect()[dimension] - offset\n        );\n    });\n};\n\nconst handlesContainerExists = (container) =>\n    container.select(`#${handlesContainerId}`).size() > 0;\n\nconst pinHandleToHandleBoxEdge = (handle, axis, offset) =>\n    handle.attr(axis, Number(handle.attr(axis)) - offset);\n\nconst extendHandlesBox = (handles, dimension, offset) =>\n    handles.attr(\n        dimension,\n        handles.node().getBoundingClientRect()[dimension] - offset\n    );\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {groupFromKey} from \"../series/seriesKey\";\n\nexport function filterData(settings, data) {\n    const useData = data || settings.data;\n    if (settings.hideKeys && settings.hideKeys.length > 0) {\n        return useData.map((col) => {\n            const clone = {...col};\n            settings.hideKeys.forEach((k) => {\n                delete clone[k];\n            });\n            return clone;\n        });\n    }\n    return useData;\n}\n\nexport function filterDataByGroup(settings, data) {\n    const useData = data || settings.data;\n    if (settings.hideKeys && settings.hideKeys.length > 0) {\n        return useData.map((col) => {\n            const clone = {};\n            Object.keys(col).map((key) => {\n                if (!settings.hideKeys.includes(groupFromKey(key))) {\n                    clone[key] = col[key];\n                }\n            });\n            return clone;\n        });\n    }\n    return useData;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\n\nconst mainGridSvg = (settings) => (x) =>\n    x\n        .style(\"stroke-width\", \"1.0\")\n        .style(\n            \"stroke\",\n            settings ? settings.colorStyles.grid.gridLineColor : \"#bbb\"\n        );\n\nconst mainGridCanvas = (settings) => (c) => {\n    c.strokeStyle = settings ? settings.colorStyles.grid.gridLineColor : \"#bbb\";\n    c.lineWidth = 1;\n};\n\nconst crossGridSvg = (x) => x.style(\"display\", \"none\");\nconst crossGridCanvas = (settings) => (c) => {\n    c.lineWidth = 1;\n    c.strokeStyle = settings ? settings.colorStyles.grid.gridLineColor : \"#bbb\";\n};\n\nexport default (series, settings) => {\n    let orient = \"both\";\n    let canvas = false;\n    let xScale = null;\n    let yScale = null;\n    let context = null;\n\n    let seriesMulti = fc.seriesSvgMulti();\n    let annotationGridline = fc.annotationSvgGridline();\n    let mainGrid = mainGridSvg(settings);\n    let crossGrid = crossGridSvg;\n\n    const _withGridLines = function (...args) {\n        if (canvas) {\n            seriesMulti = fc.seriesCanvasMulti().context(context);\n            annotationGridline = fc.annotationCanvasGridline();\n            mainGrid = mainGridCanvas(settings);\n            crossGrid = crossGridCanvas(settings);\n        }\n\n        const multi = seriesMulti.xScale(xScale).yScale(yScale);\n\n        const xStyle = orient === \"vertical\" ? crossGrid : mainGrid;\n        const yStyle = orient === \"horizontal\" ? crossGrid : mainGrid;\n\n        const gridlines = annotationGridline\n            .xDecorate(xStyle)\n            .yDecorate(yStyle);\n\n        return multi.series([gridlines, series])(...args);\n    };\n\n    _withGridLines.orient = (...args) => {\n        if (!args.length) {\n            return orient;\n        }\n        orient = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.canvas = (...args) => {\n        if (!args.length) {\n            return canvas;\n        }\n        canvas = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.xScale = (...args) => {\n        if (!args.length) {\n            return xScale;\n        }\n        xScale = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.yScale = (...args) => {\n        if (!args.length) {\n            return yScale;\n        }\n        yScale = args[0];\n        return _withGridLines;\n    };\n\n    _withGridLines.context = (...args) => {\n        if (!args.length) {\n            return context;\n        }\n        context = args[0];\n        return _withGridLines;\n    };\n\n    return _withGridLines;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {defaultPadding} from \"./default\";\nimport * as fc from \"d3fc\";\n\nexport const hardLimitZeroPadding = () => {\n    const _defaultPadding = defaultPadding();\n\n    const padding = (extent) => {\n        let pad = _defaultPadding.pad();\n        let padUnit = _defaultPadding.padUnit();\n\n        let delta = 1;\n        switch (padUnit) {\n            case \"domain\": {\n                break;\n            }\n            case \"percent\": {\n                delta = extent[1] - extent[0];\n                break;\n            }\n            default:\n                throw new Error(\"Unknown padUnit: \" + padUnit);\n        }\n\n        let paddedLowerExtent = extent[0] - pad[0] * delta;\n        let paddedUpperExtent = extent[1] + pad[1] * delta;\n\n        // If datapoints are exclusively negative or exclusively positive hard\n        // limit extent to 0.\n        extent[0] =\n            extent[0] >= 0 && paddedLowerExtent < 0 ? 0 : paddedLowerExtent;\n        extent[1] =\n            extent[1] <= 0 && paddedUpperExtent > 0 ? 0 : paddedUpperExtent;\n        return extent;\n    };\n\n    fc.rebindAll(padding, _defaultPadding);\n\n    return padding;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {getOrCreateElement} from \"../utils/utils\";\nimport template from \"../../html/zoom-controls.html\";\n\nexport default () => {\n    let chart = null;\n    let settings = null;\n    let xScale = null;\n    let xCopy = null;\n    let yScale = null;\n    let yCopy = null;\n    let bound = false;\n    let canvas = false;\n    let onChange = () => {};\n\n    function zoomableChart(selection) {\n        const chartPlotArea = `d3fc-${canvas ? \"canvas\" : \"svg\"}.plot-area`;\n        if (xScale || yScale) {\n            const dateAxis = xCopy && xCopy.domain()[0] instanceof Date;\n            const zoom = d3.zoom().on(\"zoom\", (event) => {\n                const {transform} = event;\n                settings.zoom = {\n                    k: transform.k,\n                    x: transform.x,\n                    y: transform.y,\n                };\n\n                applyTransform(transform);\n\n                selection.call(chart);\n\n                const noZoom =\n                    transform.k === 1 && transform.x === 0 && transform.y === 0;\n\n                const zoomControls = getZoomControls(selection).style(\n                    \"display\",\n                    noZoom ? \"none\" : \"\"\n                );\n                zoomControls\n                    .select(\"#zoom-reset\")\n                    .on(\"click\", () =>\n                        selection\n                            .select(chartPlotArea)\n                            .call(zoom.transform, d3.zoomIdentity)\n                    );\n\n                const oneYear = zoomControls\n                    .select(\"#one-year\")\n                    .style(\"display\", dateAxis ? \"\" : \"none\");\n                const sixMonths = zoomControls\n                    .select(\"#six-months\")\n                    .style(\"display\", dateAxis ? \"\" : \"none\");\n                const oneMonth = zoomControls\n                    .select(\"#one-month\")\n                    .style(\"display\", dateAxis ? \"\" : \"none\");\n                if (dateAxis) {\n                    const dateClick = (endCalculation) => () => {\n                        const start = new Date(xScale.domain()[0]);\n                        const end = new Date(start);\n                        endCalculation(start, end);\n\n                        const xRange = xCopy.range();\n                        const k =\n                            (xRange[1] - xRange[0]) /\n                            (xCopy(end) - xCopy(start));\n                        const x = -xCopy(start) * k;\n                        let y = 0;\n                        if (yScale) {\n                            const yMiddle =\n                                yScale.domain().reduce((a, b) => a + b) / 2;\n                            y = -yCopy(yMiddle) * k + yScale(yMiddle);\n                        }\n                        selection\n                            .select(chartPlotArea)\n                            .call(\n                                zoom.transform,\n                                d3.zoomIdentity.translate(x, y).scale(k)\n                            );\n                    };\n\n                    oneYear.on(\n                        \"click\",\n                        dateClick((start, end) =>\n                            end.setYear(start.getFullYear() + 1)\n                        )\n                    );\n                    sixMonths.on(\n                        \"click\",\n                        dateClick((start, end) =>\n                            end.setMonth(start.getMonth() + 6)\n                        )\n                    );\n                    oneMonth.on(\n                        \"click\",\n                        dateClick((start, end) =>\n                            end.setMonth(start.getMonth() + 1)\n                        )\n                    );\n                }\n            });\n\n            const oldDecorate = chart.decorate();\n            chart.decorate((sel, data) => {\n                oldDecorate(sel, data);\n                if (!bound) {\n                    bound = true;\n                    // add the zoom interaction on the enter selection\n                    const plotArea = sel.select(chartPlotArea);\n                    const device_pixel_factor = canvas\n                        ? window.devicePixelRatio\n                        : 1;\n\n                    plotArea\n                        .on(\"measure.zoom-range\", (event) => {\n                            if (xCopy)\n                                xCopy.range([\n                                    0,\n                                    event.detail.width / device_pixel_factor,\n                                ]);\n                            if (yCopy)\n                                yCopy.range([\n                                    0,\n                                    event.detail.height / device_pixel_factor,\n                                ]);\n\n                            if (settings.zoom) {\n                                const initialTransform = d3.zoomIdentity\n                                    .translate(settings.zoom.x, settings.zoom.y)\n                                    .scale(settings.zoom.k);\n                                plotArea.call(zoom.transform, initialTransform);\n                            }\n                        })\n                        .call(zoom);\n                }\n            });\n        }\n\n        selection.call(chart);\n    }\n\n    zoomableChart.chart = (...args) => {\n        if (!args.length) {\n            return chart;\n        }\n        chart = args[0];\n        return zoomableChart;\n    };\n\n    zoomableChart.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return zoomableChart;\n    };\n\n    zoomableChart.xScale = (...args) => {\n        if (!args.length) {\n            return xScale;\n        }\n        xScale = zoomableScale(args[0]);\n        xCopy = xScale ? xScale.copy() : null;\n        return zoomableChart;\n    };\n\n    zoomableChart.yScale = (...args) => {\n        if (!args.length) {\n            return yScale;\n        }\n        yScale = zoomableScale(args[0]);\n        yCopy = yScale ? yScale.copy() : null;\n        if (yCopy) {\n            const yDomain = yCopy.domain();\n            yCopy.domain([yDomain[1], yDomain[0]]);\n        }\n        return zoomableChart;\n    };\n\n    zoomableChart.canvas = (...args) => {\n        if (!args.length) {\n            return canvas;\n        }\n        canvas = args[0];\n        return zoomableChart;\n    };\n\n    zoomableChart.onChange = (...args) => {\n        if (!args.length) {\n            return onChange;\n        }\n        onChange = args[0];\n        return zoomableChart;\n    };\n\n    const applyTransform = (transform) => {\n        const changeArgs = {...transform};\n        if (xScale) {\n            xScale.domain(transform.rescaleX(xCopy).domain());\n            changeArgs.xDomain = xScale.domain();\n        }\n\n        if (yScale) {\n            const yZoomDomain = transform.rescaleY(yCopy).domain();\n            yScale.domain([yZoomDomain[1], yZoomDomain[0]]);\n            changeArgs.yDomain = yScale.domain();\n        }\n\n        onChange(changeArgs);\n    };\n\n    const getZoomControls = (container) =>\n        getOrCreateElement(container, \".zoom-controls\", () =>\n            container\n                .append(\"div\")\n                .attr(\"class\", \"zoom-controls\")\n                .style(\"display\", \"none\")\n                .html(template)\n        );\n\n    const zoomableScale = (scale) => {\n        if (scale && scale.nice) {\n            return scale;\n        }\n        return null;\n    };\n\n    return zoomableChart;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport domainMatchOrigins from \"../axis/domainMatchOrigins\";\nimport {\n    axisSplitter,\n    dataBlankFunction,\n    groupedBlankFunction,\n} from \"../axis/axisSplitter\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {barSeries} from \"../series/barSeries\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {groupAndStackData} from \"../data/groupData\";\nimport {colorLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\n\nfunction columnChart(container, settings) {\n    const data = groupAndStackData(settings, filterData(settings));\n    const color = seriesColors(settings);\n\n    const legend = colorLegend().settings(settings).scale(color);\n\n    const bars = barSeries(settings, color).orient(\"vertical\");\n    const series = fc\n        .seriesSvgMulti()\n        .mapping((data, index) => data[index])\n        .series(data.map(() => bars));\n\n    const xAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")(data);\n    const yAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .excludeType(AXIS_TYPES.ordinal)\n        .orient(\"vertical\")\n        .include([0])\n        .paddingStrategy(hardLimitZeroPadding());\n\n    // Check whether we've split some values into a second y-axis\n    const blankFunction =\n        settings.mainValues.length > 1\n            ? groupedBlankFunction\n            : dataBlankFunction;\n    const splitter = axisSplitter(settings, data, blankFunction).color(color);\n\n    const yAxis1 = yAxisFactory(splitter.data());\n\n    // No grid lines if splitting y-axis\n    const plotSeries = splitter.haveSplit()\n        ? series\n        : withGridLines(series, settings).orient(\"vertical\");\n\n    const chart = chartSvgFactory(xAxis, yAxis1)\n        .axisSplitter(splitter)\n        .plotArea(plotSeries);\n\n    if (chart.xPaddingInner) {\n        chart.xPaddingInner(0.5);\n        chart.xPaddingOuter(0.25);\n        bars.align(\"left\");\n    }\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale);\n\n    if (splitter.haveSplit()) {\n        // Create the y-axis data for the alt-axis\n        const yAxis2 = yAxisFactory(splitter.altData());\n\n        domainMatchOrigins(yAxis1.domain, yAxis2.domain);\n        chart.yDomain(yAxis1.domain).altAxis(yAxis2);\n    }\n\n    // render\n    container.datum(splitter.data()).call(zoomChart);\n    container.call(legend);\n}\ncolumnChart.plugin = {\n    name: \"Y Bar\",\n    category: \"Y Chart\",\n    max_cells: 1000,\n    max_columns: 50,\n    render_warning: true,\n};\n\nexport default columnChart;\n", "export default (domain1, domain2) => {\n    if (!isMatchable(domain1) || !isMatchable(domain2)) return;\n\n    const ratio1 = originRatio(domain1);\n    const ratio2 = originRatio(domain2);\n\n    if (ratio1 > ratio2) {\n        domain2[0] = adjustLowerBound(domain2, ratio1);\n    } else {\n        domain1[0] = adjustLowerBound(domain1, ratio2);\n    }\n};\n\nconst isMatchable = (domain) =>\n    domain.length === 2 &&\n    !isNaN(domain[0]) &&\n    !isNaN(domain[1]) &&\n    domain[0] !== domain[1];\nconst originRatio = (domain) => (0 - domain[0]) / (domain[1] - domain[0]);\nconst adjustLowerBound = (domain, ratio) => (ratio * domain[1]) / (ratio - 1);\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {getChartElement} from \"../plugin/root\";\nimport {withoutOpacity} from \"../series/seriesColors.js\";\n\n// Render a set of labels with the little left/right arrows for moving\n// between axes\nexport const splitterLabels = (settings) => {\n    let labels = [];\n    let alt = false;\n    let color;\n\n    const _render = (selection) => {\n        selection.text(\"\");\n\n        const labelDataJoin = fc\n            .dataJoin(\"span\", \"splitter-label\")\n            .key((d) => d);\n\n        const disabled = !alt && labels.length === 1;\n        const coloured = color && settings.splitValues.length === 0;\n        labelDataJoin(selection, labels)\n            .classed(\"disabled\", disabled)\n            .text((d) => d.name)\n            .style(\"color\", (d) =>\n                coloured ? withoutOpacity(color(d.name)) : undefined\n            )\n            .on(\"click\", (event, d) => {\n                if (disabled) return;\n\n                if (alt) {\n                    settings.splitMainValues = settings.splitMainValues.filter(\n                        (v) => v != d.name\n                    );\n                } else {\n                    settings.splitMainValues = [d.name].concat(\n                        settings.splitMainValues || []\n                    );\n                }\n\n                event.target\n                    .getRootNode()\n                    .host.closest(\"perspective-viewer\")\n                    ?.dispatchEvent(new Event(\"perspective-config-update\"));\n\n                redrawChart(selection);\n            });\n    };\n\n    const redrawChart = (selection) => {\n        const chartElement = getChartElement(selection.node());\n        chartElement._container.innerHTML = \"\";\n        chartElement._draw();\n    };\n\n    _render.labels = (...args) => {\n        if (!args.length) {\n            return labels;\n        }\n        labels = args[0];\n        return _render;\n    };\n    _render.alt = (...args) => {\n        if (!args.length) {\n            return alt;\n        }\n        alt = args[0];\n        return _render;\n    };\n\n    _render.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return _render;\n    };\n    return _render;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {splitterLabels} from \"./splitterLabels\";\n\nexport const axisSplitter = (\n    settings,\n    sourceData,\n    splitFn = dataSplitFunction\n) => {\n    let color;\n    let data;\n    let altData;\n\n    // splitMainValues is an array of main-value names to put into the alt-axis\n    const splitMainValues = settings.splitMainValues || [];\n    const altValue = (name) => {\n        const split = name.split(\"|\");\n        return splitMainValues.includes(split[split.length - 1]);\n    };\n\n    const haveSplit = settings[\"mainValues\"].some((m) => altValue(m.name));\n\n    // Split the data into main and alt displays\n    data = haveSplit\n        ? splitFn(sourceData, (key) => !altValue(key))\n        : sourceData;\n    altData = haveSplit ? splitFn(sourceData, altValue) : null;\n\n    // Renderer to show the special controls for moving between axes\n    const splitter = (selection) => {\n        if (settings[\"mainValues\"].length === 1) return;\n\n        const labelsInfo = settings[\"mainValues\"].map((v, i) => ({\n            index: i,\n            name: v.name,\n        }));\n        const mainLabels = labelsInfo.filter((v) => !altValue(v.name));\n        const altLabels = labelsInfo.filter((v) => altValue(v.name));\n\n        const labeller = () => splitterLabels(settings).color(color);\n\n        selection\n            .select(\".y-label.left-label\")\n            .call(labeller().labels(mainLabels));\n        selection\n            .select(\".y-label.right-label\")\n            .call(labeller().labels(altLabels).alt(true));\n    };\n\n    splitter.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return splitter;\n    };\n\n    splitter.haveSplit = () => haveSplit;\n\n    splitter.data = (...args) => {\n        if (!args.length) {\n            return data;\n        }\n        data = args[0];\n        return splitter;\n    };\n    splitter.altData = (...args) => {\n        if (!args.length) {\n            return altData;\n        }\n        altData = args[0];\n        return splitter;\n    };\n\n    return splitter;\n};\n\nexport const dataSplitFunction = (sourceData, isIncludedFn) => {\n    return sourceData.map((d) => d.filter((v) => isIncludedFn(v.key)));\n};\n\nexport const dataBlankFunction = (sourceData, isIncludedFn) => {\n    return sourceData.map((series) => {\n        if (!isIncludedFn(series.key)) {\n            // Blank this data\n            return series.map((v) => Object.assign({}, v, {mainValue: null}));\n        }\n        return series;\n    });\n};\n\nexport const groupedBlankFunction = (sourceData, isIncludedFn) => {\n    return sourceData.map((group) => dataBlankFunction(group, isIncludedFn));\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport {axisSplitter} from \"../axis/axisSplitter\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {lineSeries} from \"../series/lineSeries\";\nimport {splitData} from \"../data/splitData\";\nimport {colorLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport {transposeData} from \"../data/transposeData\";\nimport withGridLines from \"../gridlines/gridlines\";\n\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\n\nfunction lineChart(container, settings) {\n    const data = splitData(settings, filterData(settings));\n    const color = seriesColors(settings);\n\n    const legend = colorLegend().settings(settings).scale(color);\n\n    const series = fc\n        .seriesSvgRepeat()\n        .series(lineSeries(settings, color))\n        .orient(\"horizontal\");\n\n    const paddingStrategy = hardLimitZeroPadding()\n        .pad([0.1, 0.1])\n        .padUnit(\"percent\");\n\n    const xAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")(data);\n\n    const yAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .orient(\"vertical\")\n        .paddingStrategy(paddingStrategy);\n\n    // Check whether we've split some values into a second y-axis\n    const splitter = axisSplitter(settings, transposeData(data)).color(color);\n\n    const yAxis1 = yAxisFactory(splitter.data());\n\n    // No grid lines if splitting y-axis\n    const plotSeries = splitter.haveSplit()\n        ? series\n        : withGridLines(series, settings).orient(\"vertical\");\n    const chart = chartSvgFactory(xAxis, yAxis1)\n        .axisSplitter(splitter)\n        .plotArea(plotSeries);\n\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale);\n\n    const toolTip = nearbyTip()\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis1.scale)\n        .color(color)\n        .data(data);\n\n    if (splitter.haveSplit()) {\n        // Create the y-axis data for the alt-axis\n        const yAxis2 = yAxisFactory(splitter.altData());\n        chart.altAxis(yAxis2);\n        // Give the tooltip the information (i.e. 2 datasets with different\n        // scales)\n        toolTip\n            .data(splitter.data())\n            .altDataWithScale({yScale: yAxis2.scale, data: splitter.altData()});\n    }\n\n    const transposed_data = splitter.data();\n\n    // render\n    container.datum(transposed_data).call(zoomChart);\n    container.call(toolTip);\n    container.call(legend);\n}\n\nlineChart.plugin = {\n    name: \"Y Line\",\n    category: \"Y Chart\",\n    max_cells: 4000,\n    max_columns: 50,\n    render_warning: true,\n};\n\nexport default lineChart;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {withoutOpacity} from \"./seriesColors.js\";\n\nexport function lineSeries(settings, color) {\n    let series = fc.seriesSvgLine();\n\n    const estimated_size =\n        settings.data.length *\n        (settings.data?.length > 0\n            ? Object.keys(settings.data[0]).length -\n              (settings.crossValues?.length > 0 ? 1 : 0)\n            : 0);\n    const stroke_width = Math.max(\n        1,\n        Math.min(3, Math.floor(settings.size.width / estimated_size / 2))\n    );\n\n    series = series.decorate((selection) => {\n        selection\n            .style(\"stroke\", (d) => withoutOpacity(color(d[0] && d[0].key)))\n            .style(\"stroke-width\", stroke_width);\n    });\n\n    return series.crossValue((d) => d.crossValue).mainValue((d) => d.mainValue);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {labelFunction} from \"../axis/axisLabel\";\n\nexport function splitData(settings, data) {\n    const labelfn = labelFunction(settings);\n\n    return data.map((col, i) => {\n        return Object.keys(col)\n            .filter((key) => key !== \"__ROW_PATH__\")\n            .map((key) => ({\n                key,\n                crossValue: labelfn(col, i),\n                mainValue: col[key],\n                row: col,\n            }));\n    });\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const transposeData = function (x) {\n    const columns = [];\n    for (const row of x) {\n        for (let col = 0; col < row.length; col++) {\n            if (row[col].mainValue !== null) {\n                columns[col] = columns[col] || [];\n                columns[col].push(row[col]);\n            }\n        }\n    }\n    return columns;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as fc from \"d3fc\";\nimport {tooltip} from \"./tooltip\";\nimport {withOpacity} from \"../series/seriesColors.js\";\nimport {findBestFromData} from \"../data/findBest\";\nimport {raiseEvent} from \"./selectionEvent\";\n\nexport default () => {\n    const base = tooltip().alwaysShow(true);\n\n    let xScale = null;\n    let yScale = null;\n    let color = null;\n    let size = null;\n    let canvas = false;\n    let data = null;\n    let xValueName = \"crossValue\";\n    let yValueName = \"mainValue\";\n    let altDataWithScale = null;\n    let scale_factor = 1;\n\n    function nearbyTip(selection) {\n        const chartPlotArea = `d3fc-${canvas ? \"canvas\" : \"svg\"}.plot-area`;\n        if (xScale || yScale) {\n            let tooltipData = null;\n            const pointer = fc.pointer().on(\"point\", (event) => {\n                const closest = event.length\n                    ? getClosestDataPoint(event[0])\n                    : null;\n                tooltipData = closest ? [closest.data] : [];\n                const useYScale = closest ? closest.scale : yScale;\n\n                renderTip(selection, tooltipData, useYScale);\n            });\n\n            selection\n                .select(chartPlotArea)\n                .on(\"measure.nearbyTip\", () => renderTip(selection, []))\n                .on(\"click\", () => {\n                    if (tooltipData.length) {\n                        raiseEvent(\n                            selection.node(),\n                            tooltipData[0],\n                            base.settings()\n                        );\n                    }\n                })\n                .call(pointer);\n        }\n    }\n\n    const renderTip = (selection, tipData, useYScale = yScale) => {\n        const tips = selection\n            .select(\"d3fc-svg.plot-area svg\")\n            .selectAll(\"circle.nearbyTip\")\n            .data(tipData);\n        tips.exit().remove();\n\n        tips.enter()\n            .append(\"circle\")\n            .attr(\"class\", \"nearbyTip\")\n            .merge(tips)\n            .attr(\"r\", (d) =>\n                size ? scale_factor * Math.sqrt(size(d.size)) : 10\n            )\n            .attr(\n                \"transform\",\n                (d) =>\n                    `translate(${xScale(d[xValueName])},${useYScale(\n                        d[yValueName]\n                    )})`\n            )\n            .style(\"stroke\", \"none\")\n            .style(\"fill\", (d) => color && d.key && withOpacity(color(d.key)));\n\n        base(tips);\n    };\n\n    const getClosestDataPoint = (pos) => {\n        const distFn = (scale) => {\n            return (v) => {\n                if (\n                    v[yValueName] === undefined ||\n                    v[yValueName] === null ||\n                    v[xValueName] === undefined ||\n                    v[xValueName] === null\n                )\n                    return null;\n\n                return Math.sqrt(\n                    Math.pow(xScale(v[xValueName]) - pos.x, 2) +\n                        Math.pow(scale(v[yValueName]) - pos.y, 2)\n                );\n            };\n        };\n\n        // Check the main data\n        const dist1 = distFn(yScale);\n        const best1 = findBestFromData(data, dist1, Math.min);\n\n        if (altDataWithScale) {\n            // Check the alt data with its scale, to see if any are closer\n            const dist2 = distFn(altDataWithScale.yScale);\n            const best2 = findBestFromData(\n                altDataWithScale.data,\n                dist2,\n                Math.min\n            );\n            return dist1(best1) <= dist2(best2)\n                ? {data: best1, scale: yScale}\n                : {data: best2, scale: altDataWithScale.yScale};\n        }\n        return {data: best1, scale: yScale};\n    };\n\n    nearbyTip.scaleFactor = (...args) => {\n        if (!args.length) {\n            return scale_factor;\n        }\n        scale_factor = args[0];\n        return nearbyTip;\n    };\n    nearbyTip.xScale = (...args) => {\n        if (!args.length) {\n            return xScale;\n        }\n        xScale = args[0];\n        return nearbyTip;\n    };\n\n    nearbyTip.yScale = (...args) => {\n        if (!args.length) {\n            return yScale;\n        }\n        yScale = args[0];\n        return nearbyTip;\n    };\n\n    nearbyTip.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return nearbyTip;\n    };\n\n    nearbyTip.size = (...args) => {\n        if (!args.length) {\n            return size;\n        }\n        size = args[0] ? args[0].copy().range([40, 4000]) : null;\n        return nearbyTip;\n    };\n\n    nearbyTip.canvas = (...args) => {\n        if (!args.length) {\n            return canvas;\n        }\n        canvas = args[0];\n        return nearbyTip;\n    };\n\n    nearbyTip.data = (...args) => {\n        if (!args.length) {\n            return data;\n        }\n        data = args[0];\n        return nearbyTip;\n    };\n\n    nearbyTip.xValueName = (...args) => {\n        if (!args.length) {\n            return xValueName;\n        }\n        xValueName = args[0];\n        return nearbyTip;\n    };\n\n    nearbyTip.yValueName = (...args) => {\n        if (!args.length) {\n            return yValueName;\n        }\n        yValueName = args[0];\n        return nearbyTip;\n    };\n\n    nearbyTip.altDataWithScale = (...args) => {\n        if (!args.length) {\n            return altDataWithScale;\n        }\n        altDataWithScale = args[0];\n        return nearbyTip;\n    };\n\n    fc.rebindAll(nearbyTip, base);\n    return nearbyTip;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const findBestFromData = (array, valueFn, compareFn = Math.min) => {\n    const findBestFromArray = (array) => {\n        return array.reduce((best, v) => {\n            const thisValue = findBestFromItem(v, valueFn);\n            return thisValue &&\n                (!best ||\n                    compareFn(best.value, thisValue.value) === thisValue.value)\n                ? thisValue\n                : best;\n        }, null);\n    };\n    const findBestFromItem = (item) => {\n        if (Array.isArray(item)) {\n            return findBestFromArray(item, valueFn);\n        }\n        const value = valueFn(item);\n        return value !== null\n            ? {\n                  item,\n                  value,\n              }\n            : null;\n    };\n\n    const bestItem = findBestFromArray(array, valueFn);\n    return bestItem ? bestItem.item : null;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as fc from \"d3fc\";\nimport {transposeData} from \"../data/transposeData\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport {symbolTypeFromGroups} from \"../series/pointSeriesCanvas\";\nimport {lineSeries} from \"../series/lineSeries\";\nimport {xySplitData} from \"../data/xySplitData\";\nimport {seriesColorsFromGroups} from \"../series/seriesColors\";\nimport {colorGroupLegend} from \"../legend/legend\";\nimport {filterDataByGroup} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\n\nfunction xyLine(container, settings) {\n    const data = transposeData(\n        xySplitData(settings, filterDataByGroup(settings))\n    );\n\n    const color = seriesColorsFromGroups(settings);\n    const symbols = symbolTypeFromGroups(settings);\n\n    let legend = null;\n    if (color.domain().length > 2) {\n        legend = colorGroupLegend()\n            .settings(settings)\n            .scale(symbols)\n            .color(color);\n    }\n\n    const series = fc\n        .seriesSvgRepeat()\n        .series(lineSeries(settings, color))\n        .orient(\"horizontal\");\n\n    const paddingStrategy = hardLimitZeroPadding()\n        .pad([0.1, 0.1])\n        .padUnit(\"percent\");\n\n    const xAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .settingValue(settings.mainValues[0].name)\n        .valueName(\"crossValue\")\n        .paddingStrategy(paddingStrategy);\n\n    const yAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .settingValue(settings.mainValues[1].name)\n        .valueName(\"mainValue\")\n        .orient(\"vertical\")\n        .paddingStrategy(paddingStrategy);\n\n    const yAxis = yAxisFactory(data);\n    const xAxis = xAxisFactory(data);\n\n    const plotSeries = withGridLines(series, settings).orient(\"vertical\");\n\n    const chart = chartSvgFactory(xAxis, yAxis)\n        .xLabel(settings.mainValues[0].name)\n        .yLabel(settings.mainValues[1].name)\n        .plotArea(plotSeries);\n\n    chart.xNice && chart.xNice();\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis.scale);\n\n    const toolTip = nearbyTip()\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis.scale)\n        .color(color)\n        .data(data);\n\n    container.datum(data).call(zoomChart);\n    container.call(toolTip);\n    if (legend) {\n        container.call(legend);\n    }\n}\n\nxyLine.plugin = {\n    name: \"X/Y Line\",\n    category: \"X/Y Chart\",\n    max_cells: 50000,\n    max_columns: 50,\n    render_warning: true,\n    initial: {\n        type: \"number\",\n        count: 2,\n        names: [\"X Axis\", \"Y Axis\", \"Tooltip\"],\n    },\n    selectMode: \"toggle\",\n};\n\nexport default xyLine;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {seriesCanvasPoint} from \"d3fc\";\nimport {withOpacity, withoutOpacity} from \"./seriesColors\";\nimport {groupFromKey} from \"./seriesKey\";\nimport {fromDomain} from \"./seriesSymbols\";\n\nexport function pointSeriesCanvas(\n    settings,\n    seriesKey,\n    size,\n    color,\n    symbols,\n    scale_factor = 1\n) {\n    let series = seriesCanvasPoint()\n        .crossValue((d) => d.x)\n        .mainValue((d) => d.y);\n\n    if (size) {\n        series.size((d) => Math.round(scale_factor * size(d.size)));\n    }\n    if (symbols) {\n        series.type(symbols(seriesKey));\n    }\n\n    series.decorate((context, d) => {\n        const colorValue = color(\n            d.colorValue !== undefined ? d.colorValue : seriesKey\n        );\n        const opacity = settings.colorStyles && settings.colorStyles.opacity;\n\n        context.strokeStyle = withoutOpacity(colorValue);\n        context.fillStyle = withOpacity(colorValue, opacity);\n    });\n\n    return series;\n}\n\nexport function symbolTypeFromGroups(settings) {\n    const col =\n        settings.data && settings.data.length > 0 ? settings.data[0] : {};\n    const domain = [];\n    Object.keys(col).forEach((key) => {\n        if (key !== \"__ROW_PATH__\") {\n            const group = groupFromKey(key);\n            if (!domain.includes(group)) {\n                domain.push(group);\n            }\n        }\n    });\n    return fromDomain(domain);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\n\nconst symbols = [\n    d3.symbolCircle,\n    d3.symbolCross,\n    d3.symbolDiamond,\n    d3.symbolSquare,\n    d3.symbolStar,\n    d3.symbolTriangle,\n    d3.symbolWye,\n];\n\nexport function fromDomain(domain) {\n    return domain.length > 1\n        ? d3.scaleOrdinal().domain(domain).range(symbols)\n        : null;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {groupFromKey} from \"../series/seriesKey\";\n\nexport function xySplitData(settings, data) {\n    const n_cols = settings.mainValues.length;\n\n    return data.map((col) => {\n        const cols = Object.keys(col).filter((key) => key !== \"__ROW_PATH__\");\n        const row = new Array(cols.length / n_cols);\n        for (let i = 0; i < cols.length / n_cols; i++) {\n            row[i] = {\n                key: groupFromKey(cols[i * n_cols]),\n                crossValue: col[cols[i * n_cols]],\n                mainValue: col[cols[i * n_cols + 1]],\n                row: col,\n            };\n        }\n        return row;\n    });\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport {axisSplitter} from \"../axis/axisSplitter\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {areaSeries} from \"../series/areaSeries\";\nimport {lineSeries} from \"../series/lineSeries\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {splitAndBaseData} from \"../data/splitAndBaseData\";\nimport {colorLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\n\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\n\nfunction areaChart(container, settings) {\n    const data = splitAndBaseData(settings, filterData(settings));\n\n    const color = seriesColors(settings);\n    const legend = colorLegend().settings(settings).scale(color);\n\n    const area_series = fc\n        .seriesSvgRepeat()\n        .series(areaSeries(settings, color).orient(\"vertical\"));\n\n    const line_series = fc\n        .seriesSvgRepeat()\n        .series(lineSeries(settings, color))\n        .orient(\"vertical\");\n\n    const series = fc.seriesSvgMulti().series([area_series, line_series]);\n\n    const xAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")(data);\n    const yAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .excludeType(AXIS_TYPES.ordinal)\n        .orient(\"vertical\")\n        .include([0])\n        .paddingStrategy(hardLimitZeroPadding());\n\n    // Check whether we've split some values into a second y-axis\n    const splitter = axisSplitter(settings, data).color(color);\n\n    const yAxis1 = yAxisFactory(splitter.data());\n\n    // No grid lines if splitting y-axis\n    const plotSeries = splitter.haveSplit()\n        ? series\n        : withGridLines(series, settings).orient(\"vertical\");\n\n    const chart = chartSvgFactory(xAxis, yAxis1)\n        .axisSplitter(splitter)\n        .plotArea(plotSeries);\n\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale);\n\n    const toolTip = nearbyTip()\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis1.scale)\n        .color(color)\n        .data(data);\n\n    if (splitter.haveSplit()) {\n        // Create the y-axis data for the alt-axis\n        const yAxis2 = yAxisFactory(splitter.altData());\n        chart.altAxis(yAxis2);\n        // Give the tooltip the information (i.e. 2 datasets with different\n        // scales)\n        toolTip\n            .data(splitter.data())\n            .altDataWithScale({yScale: yAxis2.scale, data: splitter.altData()});\n    }\n\n    // render\n    container.datum(splitter.data()).call(zoomChart);\n    container.call(toolTip);\n    container.call(legend);\n}\nareaChart.plugin = {\n    name: \"Y Area\",\n    category: \"Y Chart\",\n    max_cells: 4000,\n    max_columns: 50,\n    render_warning: true,\n};\n\nexport default areaChart;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\n\nexport function areaSeries(settings, color) {\n    let series = fc.seriesSvgArea();\n\n    series = series.decorate((selection) => {\n        selection.style(\"fill\", (d) => color(d[0].key)).style(\"opacity\", 0.5);\n    });\n\n    return series\n        .crossValue((d) => d.crossValue)\n        .mainValue((d) => d.mainValue)\n        .baseValue((d) => d.baseValue);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {labelFunction} from \"../axis/axisLabel\";\n\nexport function splitAndBaseData(settings, data) {\n    const labelfn = labelFunction(settings);\n\n    return data.map((col, i) => {\n        const baseValues = {};\n\n        return Object.keys(col)\n            .filter((key) => key !== \"__ROW_PATH__\")\n            .map((key) => {\n                // Keys are of the form \"split1|split2|aggregate\"\n                const labels = key.split(\"|\");\n                // label=\"aggregate\"\n                const label = labels[labels.length - 1];\n                const baseValue = baseValues[label] || 0;\n                const value = baseValue + col[key];\n                baseValues[label] = value;\n\n                return {\n                    key,\n                    crossValue: labelfn(col, i),\n                    mainValue: value,\n                    baseValue: baseValue,\n                    row: col,\n                };\n            });\n    });\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {chartSvgFactory} from \"../axis/chartFactory\";\nimport {axisSplitter} from \"../axis/axisSplitter\";\nimport {seriesColors} from \"../series/seriesColors\";\nimport {categoryPointSeries, symbolType} from \"../series/categoryPointSeries\";\nimport {groupData} from \"../data/groupData\";\nimport {symbolLegend} from \"../legend/legend\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\n\nfunction yScatter(container, settings) {\n    const data = groupData(settings, filterData(settings));\n    const symbols = symbolType(settings);\n    const color = seriesColors(settings);\n\n    const legend = symbolLegend()\n        .settings(settings)\n        .scale(symbols)\n        .color(color);\n\n    const series = fc\n        .seriesSvgMulti()\n        .mapping((data, index) => data[index])\n        .series(\n            data.map((series) =>\n                categoryPointSeries(settings, series.key, color, symbols)\n            )\n        );\n\n    const paddingStrategy = hardLimitZeroPadding()\n        .pad([0.05, 0.05])\n        .padUnit(\"percent\");\n\n    const xAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")(data);\n    const yAxisFactory = axisFactory(settings)\n        .settingName(\"mainValues\")\n        .valueName(\"mainValue\")\n        .orient(\"vertical\")\n        .paddingStrategy(paddingStrategy);\n\n    // Check whether we've split some values into a second y-axis\n    const splitter = axisSplitter(settings, data).color(color);\n\n    const yAxis1 = yAxisFactory(splitter.data());\n\n    // No grid lines if splitting y-axis\n    const plotSeries = splitter.haveSplit()\n        ? series\n        : withGridLines(series, settings).orient(\"vertical\");\n\n    const chart = chartSvgFactory(xAxis, yAxis1)\n        .axisSplitter(splitter)\n        .plotArea(plotSeries);\n\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale);\n\n    const toolTip = nearbyTip()\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis1.scale)\n        .color(color)\n        .data(data);\n\n    if (splitter.haveSplit()) {\n        // Create the y-axis data for the alt-axis\n        const yAxis2 = yAxisFactory(splitter.altData());\n        chart.altAxis(yAxis2);\n        // Give the tooltip the information (i.e. 2 datasets with different\n        // scales)\n        toolTip\n            .data(splitter.data())\n            .altDataWithScale({yScale: yAxis2.scale, data: splitter.altData()});\n    }\n\n    // render\n    container.datum(splitter.data()).call(zoomChart);\n    container.call(toolTip);\n    if (legend) {\n        container.call(legend);\n    }\n}\n\nyScatter.plugin = {\n    name: \"Y Scatter\",\n    category: \"Y Chart\",\n    max_cells: 4000,\n    max_columns: 50,\n    render_warning: true,\n};\n\nexport default yScatter;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {withOpacity, withoutOpacity} from \"./seriesColors\";\nimport {fromDomain} from \"./seriesSymbols\";\n\nexport function categoryPointSeries(settings, seriesKey, color, symbols) {\n    let series = fc.seriesSvgPoint().size(100);\n    const opacity = settings.colorStyles && settings.colorStyles.opacity;\n\n    if (symbols) {\n        series.type(symbols(seriesKey));\n    }\n\n    series.decorate((selection) => {\n        selection\n            .style(\"stroke\", (d) =>\n                withoutOpacity(color(d.colorValue || seriesKey))\n            )\n            .style(\"fill\", (d) =>\n                withOpacity(color(d.colorValue || seriesKey), opacity)\n            );\n    });\n\n    return series.crossValue((d) => d.crossValue).mainValue((d) => d.mainValue);\n}\n\nexport function symbolType(settings) {\n    const col =\n        settings.data && settings.data.length > 0 ? settings.data[0] : {};\n    const domain = Object.keys(col).filter((k) => k !== \"__ROW_PATH__\");\n    return fromDomain(domain);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartCanvasFactory} from \"../axis/chartFactory\";\nimport {\n    pointSeriesCanvas,\n    symbolTypeFromGroups,\n} from \"../series/pointSeriesCanvas\";\nimport {pointData} from \"../data/pointData\";\nimport {seriesColorsFromGroups} from \"../series/seriesColors\";\nimport {seriesLinearRange, seriesColorRange} from \"../series/seriesRange\";\nimport {symbolLegend} from \"../legend/legend\";\nimport {colorRangeLegend} from \"../legend/colorRangeLegend\";\nimport {filterDataByGroup} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\n\n/**\n * Define a clamped scaling factor based on the container size for bubble plots.\n *\n * @param {Array} p1 a point as a tuple of `Number`\n * @param {Array} p2 a second point as a tuple of `Number`\n * @returns a function `container -> integer` which calculates a scaling factor\n * from the linear function (clamped) defgined by the input points\n */\nfunction interpolate_scale([x1, y1], [x2, y2]) {\n    const m = (y2 - y1) / (x2 - x1);\n    const b = y2 - m * x2;\n    return function (container) {\n        const node = container.node();\n        const shortest_axis = Math.min(node.clientWidth, node.clientHeight);\n        return Math.min(y2, Math.max(y1, m * shortest_axis + b));\n    };\n}\n\nfunction xyScatter(container, settings) {\n    const data = pointData(settings, filterDataByGroup(settings));\n    const symbols = symbolTypeFromGroups(settings);\n    const useGroupColors =\n        settings.realValues.length <= 2 || settings.realValues[2] === null;\n    let color = null;\n    let legend = null;\n\n    if (useGroupColors) {\n        color = seriesColorsFromGroups(settings);\n\n        legend = symbolLegend()\n            .settings(settings)\n            .scale(symbols)\n            .color(useGroupColors ? color : null);\n    } else {\n        color = seriesColorRange(settings, data, \"colorValue\");\n        legend = colorRangeLegend().scale(color);\n    }\n\n    const size = settings.realValues[3]\n        ? seriesLinearRange(settings, data, \"size\").range([10, 10000])\n        : null;\n\n    const scale_factor = interpolate_scale([600, 0.1], [1600, 1])(container);\n    const series = fc\n        .seriesCanvasMulti()\n        .mapping((data, index) => data[index])\n        .series(\n            data.map((series) =>\n                pointSeriesCanvas(\n                    settings,\n                    series.key,\n                    size,\n                    color,\n                    symbols,\n                    scale_factor\n                )\n            )\n        );\n\n    const axisDefault = () =>\n        axisFactory(settings)\n            .settingName(\"mainValues\")\n            .paddingStrategy(hardLimitZeroPadding())\n            .pad([0.1, 0.1]);\n\n    const xAxis = axisDefault()\n        .settingValue(settings.mainValues[0].name)\n        .valueName(\"x\")(data);\n    const yAxis = axisDefault()\n        .orient(\"vertical\")\n        .settingValue(settings.mainValues[1].name)\n        .valueName(\"y\")(data);\n\n    const chart = chartCanvasFactory(xAxis, yAxis)\n        .xLabel(settings.mainValues[0].name)\n        .yLabel(settings.mainValues[1].name)\n        .plotArea(withGridLines(series, settings).canvas(true));\n\n    chart.xNice && chart.xNice();\n    chart.yNice && chart.yNice();\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis.scale)\n        .canvas(true);\n\n    const toolTip = nearbyTip()\n        .scaleFactor(scale_factor)\n        .settings(settings)\n        .canvas(true)\n        .xScale(xAxis.scale)\n        .xValueName(\"x\")\n        .yValueName(\"y\")\n        .yScale(yAxis.scale)\n        .color(useGroupColors && color)\n        .size(size)\n        .data(data);\n\n    // render\n    container.datum(data).call(zoomChart);\n    container.call(toolTip);\n    if (legend) container.call(legend);\n}\n\nxyScatter.plugin = {\n    name: \"X/Y Scatter\",\n    category: \"X/Y Chart\",\n    max_cells: 50000,\n    max_columns: 50,\n    render_warning: true,\n    initial: {\n        type: \"number\",\n        count: 2,\n        names: [\"X Axis\", \"Y Axis\", \"Color\", \"Size\", \"Tooltip\"],\n    },\n    selectMode: \"toggle\",\n};\n\nexport default xyScatter;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {labelFunction} from \"../axis/axisLabel\";\nimport {splitIntoMultiSeries} from \"./splitIntoMultiSeries\";\n\nexport function pointData(settings, data) {\n    return splitIntoMultiSeries(settings, data, {excludeEmpty: true}).map(\n        (data) => seriesToPoints(settings, data)\n    );\n}\n\nfunction seriesToPoints(settings, data) {\n    const labelfn = labelFunction(settings);\n\n    const mappedSeries = data.map((col, i) => ({\n        crossValue: labelfn(col, i),\n        mainValues: settings.mainValues.map((v) => col[v.name]),\n        x: col[settings.mainValues[0].name],\n        y: col[settings.mainValues[1].name],\n        colorValue: settings.realValues[2]\n            ? col[settings.realValues[2]]\n            : undefined,\n        size: settings.realValues[3] ? col[settings.realValues[3]] : undefined,\n        key: data.key,\n        row: col,\n    }));\n\n    mappedSeries.key = data.key;\n    return mappedSeries;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport {domain} from \"../axis/linearAxis\";\n\nexport function seriesLinearRange(settings, data, valueName, customExtent) {\n    return d3.scaleLinear().domain(getExtent(data, valueName, customExtent));\n}\n\nexport function seriesColorRange(settings, data, valueName, customExtent) {\n    let extent = getExtent(data, valueName, customExtent);\n    let gradient = settings.colorStyles.gradient.full;\n\n    if (extent[0] >= 0) {\n        gradient = settings.colorStyles.gradient.positive;\n    } else if (extent[1] <= 0) {\n        gradient = settings.colorStyles.gradient.negative;\n    } else {\n        const maxVal = Math.max(-extent[0], extent[1]);\n        extent = [-maxVal, maxVal];\n    }\n\n    const interpolator = multiInterpolator(gradient);\n    return d3.scaleSequential(interpolator).domain(extent);\n}\n\nconst getExtent = (data, valueName, customExtent) => {\n    return customExtent || domain().valueName(valueName).pad([0, 0])(data);\n};\n\nconst multiInterpolator = (gradientPairs) => {\n    // A new interpolator that calls through to a set of\n    // interpolators between each value/color pair\n    const interpolators = gradientPairs\n        .slice(1)\n        .map((p, i) => d3.interpolate(gradientPairs[i][1], p[1]));\n    return (value) => {\n        const index = gradientPairs.findIndex(\n            (p, i) =>\n                i < gradientPairs.length - 1 &&\n                value <= gradientPairs[i + 1][0] &&\n                value > p[0]\n        );\n        if (index === -1) {\n            if (value <= gradientPairs[0][0]) {\n                return gradientPairs[0][1];\n            }\n            return gradientPairs[gradientPairs.length - 1][1];\n        }\n\n        const interpolator = interpolators[index];\n        const [value1] = gradientPairs[index];\n        const [value2] = gradientPairs[index + 1];\n\n        return interpolator((value - value1) / (value2 - value1));\n    };\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as d3 from \"d3\";\nimport * as fc from \"d3fc\";\nimport {getOrCreateElement} from \"../utils/utils\";\nimport valueformatter from \"../axis/valueFormatter\";\n\nexport function colorRangeLegend() {\n    let scale = null;\n\n    function legend(container) {\n        const legendSelection = getOrCreateElement(\n            container,\n            \"div.legend-container\",\n            () =>\n                container\n                    .append(\"div\")\n                    .attr(\"class\", \"legend-container legend-color\")\n                    .style(\"z-index\", \"2\")\n        );\n        const {width, height} = legendSelection.node().getBoundingClientRect();\n\n        const xScale = d3.scaleBand().domain([0, 1]).range([0, width]);\n\n        const domain = scale.copy().nice().domain();\n        const paddedDomain = fc\n            .extentLinear()\n            .pad([0.1, 0.1])\n            .padUnit(\"percent\")(domain);\n        const [min, max] = paddedDomain;\n        const expandedDomain = d3.range(min, max, (max - min) / height);\n\n        const yScale = d3.scaleLinear().domain(paddedDomain).range([height, 0]);\n\n        const svgBar = fc\n            .autoBandwidth(fc.seriesSvgBar())\n            .xScale(xScale)\n            .yScale(yScale)\n            .crossValue(0)\n            .baseValue((_, i) => expandedDomain[Math.max(0, i - 1)])\n            .mainValue((d) => d)\n            .decorate((selection) => {\n                selection.selectAll(\"path\").style(\"fill\", (d) => scale(d));\n            });\n\n        const middle =\n            domain[0] < 0 && domain[1] > 0\n                ? 0\n                : Math.round((domain[1] + domain[0]) / 2);\n        const tickValues = [...domain, middle];\n\n        const axisLabel = fc\n            .axisRight(yScale)\n            .tickValues(tickValues)\n            .tickSizeOuter(0)\n            .tickFormat((d) => valueformatter(d));\n\n        const legendSvg = getOrCreateElement(legendSelection, \"svg\", () =>\n            legendSelection.append(\"svg\")\n        )\n            .style(\"width\", width)\n            .style(\"height\", height);\n        const legendBar = getOrCreateElement(legendSvg, \"g\", () =>\n            legendSvg.append(\"g\")\n        )\n            .datum(expandedDomain)\n            .call(svgBar);\n\n        const barWidth = Math.abs(legendBar.node().getBBox().x);\n        getOrCreateElement(legendSvg, \"#legend-axis\", () =>\n            legendSvg.append(\"g\").attr(\"id\", \"legend-axis\")\n        )\n            .attr(\"transform\", `translate(${barWidth})`)\n            .datum(expandedDomain)\n            .call(axisLabel)\n            .select(\".domain\")\n            .attr(\"visibility\", \"hidden\");\n    }\n\n    legend.scale = (...args) => {\n        if (!args.length) {\n            return scale;\n        }\n        scale = args[0];\n        return legend;\n    };\n\n    return legend;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {tooltip} from \"../tooltip/tooltip\";\n\nexport function heatmapSeries(settings, color) {\n    let series = fc.seriesCanvasHeatmap();\n\n    series.decorate((ctx, d) => {\n        ctx.fillStyle = color(d.colorValue);\n        // tooltip().settings(settings)(selection);\n        // selection.select(\"path\").attr(\"fill\", (d) => color(d.colorValue));\n    });\n\n    return fc\n        .autoBandwidth(series)\n        .xValue((d) => d.crossValue)\n        .yValue((d) => d.mainValue)\n        .colorValue((d) => d.colorValue)\n        .colorInterpolate(color.interpolator())\n        .widthFraction(1.0);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {axisType} from \"../axis/axisType\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {labelFunction} from \"../axis/axisLabel\";\n\nexport function heatmapData(settings, data) {\n    const labelfn = labelFunction(settings);\n    const mainType = axisType(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"splitValues\")();\n\n    const heatmapData = [];\n\n    data.forEach((col, i) => {\n        const crossValue = labelfn(col, i);\n        Object.keys(col)\n            .filter((key) => key !== \"__ROW_PATH__\")\n            .forEach((key) => {\n                const mainValue = getMainValues(key);\n                heatmapData.push({\n                    crossValue: crossValue,\n                    mainValue:\n                        mainType === AXIS_TYPES.time\n                            ? new Date(mainValue)\n                            : mainValue,\n                    colorValue: col[key],\n                    row: col,\n                });\n            });\n    });\n\n    return heatmapData;\n}\n\nfunction getMainValues(key) {\n    // Key format is based on \"Split By\" values plus the value label at the end\n    // val1|val2|....|label\n    const labels = key.split(\"|\");\n    labels.pop();\n    return labels.join(\"|\");\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {AXIS_TYPES} from \"../axis/axisType\";\nimport {chartCanvasFactory} from \"../axis/chartFactory\";\nimport {heatmapSeries} from \"../series/heatmapSeries\";\nimport {seriesColorRange} from \"../series/seriesRange\";\nimport {heatmapData} from \"../data/heatmapData\";\nimport {filterData} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\nimport {colorRangeLegend} from \"../legend/colorRangeLegend\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\n\nfunction heatmapChart(container, settings) {\n    const data = heatmapData(settings, filterData(settings));\n\n    const color = seriesColorRange(settings, data, \"colorValue\");\n    const series = heatmapSeries(settings, color);\n\n    const legend = colorRangeLegend().scale(color);\n\n    const xAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"crossValues\")\n        .valueName(\"crossValue\")(data);\n    const yAxis = axisFactory(settings)\n        .excludeType(AXIS_TYPES.linear)\n        .settingName(\"splitValues\")\n        .valueName(\"mainValue\")\n        .orient(\"vertical\")(data);\n\n    const chart = chartCanvasFactory(xAxis, yAxis).plotArea(\n        withGridLines(series, settings).canvas(true)\n    );\n\n    if (chart.xPaddingInner) {\n        chart.xPaddingInner(0);\n        chart.xPaddingOuter(0);\n        series.xAlign(\"right\");\n    }\n    if (chart.yPaddingInner) {\n        chart.yPaddingInner(0);\n        chart.yPaddingOuter(0);\n        series.yAlign(\"top\");\n    }\n\n    const zoomChart = zoomableChart()\n        .chart(chart)\n        .settings(settings)\n        .xScale(xAxis.scale)\n        .yScale(yAxis.scale)\n        .canvas(true);\n\n    // const tp = tooltip().settings(settings);\n\n    const toolTip = nearbyTip()\n        // .scaleFactor(scale_factor)\n        .settings(settings)\n        .canvas(true)\n        .xScale(xAxis.scale)\n        // .xValueName(\"x\")\n        // .yValueName(\"y\")\n        .yScale(yAxis.scale)\n        .color(color)\n        // .size(size)\n        .data(data);\n\n    // // render\n    // container.datum(data).call(zoomChart);\n\n    // render\n    container.datum(data).call(zoomChart);\n    container.call(legend);\n    container.call(toolTip);\n}\nheatmapChart.plugin = {\n    name: \"Heatmap\",\n    category: \"Hierarchial Chart\",\n    max_cells: 50000,\n    max_columns: 500,\n    render_warning: true,\n};\n\nexport default heatmapChart;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {seriesCanvasOhlc} from \"d3fc\";\nimport ohlcCandle from \"./ohlcCandle\";\n\nconst ohlc = ohlcCandle(seriesCanvasOhlc);\nohlc.plugin = {\n    name: \"OHLC\",\n    category: \"Y Chart\",\n    max_cells: 3500,\n    max_columns: 50,\n    render_warning: true,\n    initial: {\n        type: \"number\",\n        count: 4,\n        names: [\"Open\", \"Close\", \"High\", \"Low\"],\n    },\n    selectMode: \"toggle\",\n};\n\nexport default ohlc;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {axisFactory} from \"../axis/axisFactory\";\nimport {chartCanvasFactory} from \"../axis/chartFactory\";\nimport {ohlcData} from \"../data/ohlcData\";\nimport {filterDataByGroup} from \"../legend/filter\";\nimport withGridLines from \"../gridlines/gridlines\";\n\nimport {hardLimitZeroPadding} from \"../d3fc/padding/hardLimitZero\";\nimport zoomableChart from \"../zoom/zoomableChart\";\nimport nearbyTip from \"../tooltip/nearbyTip\";\nimport {ohlcCandleSeries} from \"../series/ohlcCandleSeries\";\nimport {colorScale, setOpacity} from \"../series/seriesColors\";\nimport {colorLegend} from \"../legend/legend\";\n\nfunction ohlcCandle(seriesCanvas) {\n    return function (container, settings) {\n        const srcData = ohlcData(settings, filterDataByGroup(settings));\n\n        const bollinger = fc\n            .indicatorBollingerBands()\n            .value((d) => d.openValue);\n        const data = srcData.map((seriesData) => {\n            const bollingerData = bollinger(seriesData);\n            return seriesData.map((d, i) =>\n                Object.assign({bollinger: bollingerData[i]}, d)\n            );\n        });\n\n        const keys = srcData\n            .map((k) => k.key)\n            .concat(settings.hideKeys ? settings.hideKeys : [])\n            .sort();\n\n        const upColor = colorScale()\n            .domain(keys)\n            .settings(settings)\n            .mapFunction(setOpacity(1))();\n\n        const legend = colorLegend()\n            .settings(settings)\n            .scale(keys.length > 1 ? upColor : null);\n\n        const series = ohlcCandleSeries(settings, seriesCanvas, upColor);\n\n        const multi = fc\n            .seriesCanvasMulti()\n            .mapping((data, index) => data[index])\n            .series(data.map(() => series));\n\n        const paddingStrategy = hardLimitZeroPadding()\n            .pad([0.1, 0.1])\n            .padUnit(\"percent\");\n\n        const xAxis = axisFactory(settings)\n            .settingName(\"crossValues\")\n            .valueName(\"crossValue\")(data);\n        const yAxis = axisFactory(settings)\n            .settingName(\"mainValues\")\n            .valueNames([\"lowValue\", \"highValue\"])\n            .orient(\"vertical\")\n            .paddingStrategy(paddingStrategy)(data);\n\n        const chart = chartCanvasFactory(xAxis, yAxis).plotArea(\n            withGridLines(multi, settings).orient(\"vertical\").canvas(true)\n        );\n\n        chart.yNice && chart.yNice();\n\n        const zoomChart = zoomableChart()\n            .chart(chart)\n            .settings(settings)\n            .xScale(xAxis.scale)\n            .onChange((zoom) => {\n                const zoomedData = data.map((series) =>\n                    series.filter(\n                        (d) =>\n                            d.crossValue >= zoom.xDomain[0] &&\n                            d.crossValue <= zoom.xDomain[1]\n                    )\n                );\n                chart.yDomain(yAxis.domainFunction(zoomedData));\n            })\n            .canvas(true);\n\n        const toolTip = nearbyTip()\n            .settings(settings)\n            .xScale(xAxis.scale)\n            .yScale(yAxis.scale)\n            .yValueName(\"closeValue\")\n            .color(upColor)\n            .data(data)\n            .canvas(true);\n\n        // render\n        container.datum(data).call(zoomChart);\n        container.call(toolTip);\n        container.call(legend);\n    };\n}\n\nexport default ohlcCandle;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {labelFunction} from \"../axis/axisLabel\";\nimport {splitIntoMultiSeries} from \"./splitIntoMultiSeries\";\n\nexport function ohlcData(settings, data) {\n    return splitIntoMultiSeries(settings, data, {excludeEmpty: true}).map(\n        (data) => seriesToOHLC(settings, data)\n    );\n}\n\nfunction seriesToOHLC(settings, data) {\n    const labelfn = labelFunction(settings);\n\n    const getNextOpen = (i) =>\n        data[i < data.length - 1 ? i + 1 : i][settings.mainValues[0].name];\n    const mappedSeries = data.map((col, i) => {\n        const openValue =\n            settings.mainValues.length >= 1\n                ? col[settings.mainValues[0].name]\n                : undefined;\n        const closeValue =\n            settings.mainValues.length >= 2\n                ? col[settings.mainValues[1].name]\n                : getNextOpen(i);\n        return {\n            crossValue: labelfn(col, i),\n            mainValues: settings.mainValues.map((v) => col[v.name]),\n            openValue: openValue,\n            closeValue: closeValue,\n            highValue:\n                settings.mainValues.length >= 3\n                    ? col[settings.mainValues[2].name]\n                    : Math.max(openValue, closeValue),\n            lowValue:\n                settings.mainValues.length >= 4\n                    ? col[settings.mainValues[3].name]\n                    : Math.min(openValue, closeValue),\n            key: data.key,\n            row: col,\n        };\n    });\n\n    mappedSeries.key = data.key;\n    return mappedSeries;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport * as fc from \"d3fc\";\nimport {colorScale, setOpacity} from \"../series/seriesColors\";\n\nconst isUp = (d) => d.closeValue >= d.openValue;\n\nexport function ohlcCandleSeries(settings, seriesCanvas, upColor) {\n    const domain = upColor.domain();\n    const downColor = colorScale()\n        .domain(domain)\n        .settings(settings)\n        .defaultColors([settings.colorStyles[\"series-2\"]])\n        .mapFunction(setOpacity(0.5))();\n    const avgColor = colorScale().settings(settings).domain(domain)();\n\n    const series = seriesCanvas()\n        .crossValue((d) => d.crossValue)\n        .openValue((d) => d.openValue)\n        .highValue((d) => d.highValue)\n        .lowValue((d) => d.lowValue)\n        .closeValue((d) => d.closeValue)\n        .decorate((context, d) => {\n            const color = isUp(d) ? upColor(d.key) : downColor(d.key);\n            context.fillStyle = color;\n            context.strokeStyle = color;\n        });\n\n    const bollingerAverageSeries = fc\n        .seriesCanvasLine()\n        .mainValue((d) => d.bollinger.average)\n        .crossValue((d) => d.crossValue)\n        .decorate((context, d) => {\n            context.strokeStyle = avgColor(d[0].key);\n        });\n\n    const bollingerAreaSeries = fc\n        .seriesCanvasArea()\n        .mainValue((d) => d.bollinger.upper)\n        .baseValue((d) => d.bollinger.lower)\n        .crossValue((d) => d.crossValue)\n        .decorate((context, d) => {\n            context.fillStyle = setOpacity(0.25)(avgColor(d[0].key));\n        });\n\n    return fc\n        .seriesCanvasMulti()\n        .series([bollingerAreaSeries, series, bollingerAverageSeries]);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {seriesCanvasCandlestick} from \"d3fc\";\nimport ohlcCandle from \"./ohlcCandle\";\n\nconst candlestick = ohlcCandle(seriesCanvasCandlestick);\ncandlestick.plugin = {\n    name: \"Candlestick\",\n    category: \"Y Chart\",\n    max_cells: 4000,\n    max_columns: 50,\n    render_warning: true,\n    initial: {\n        type: \"number\",\n        count: 4,\n        names: [\"Open\", \"Close\", \"High\", \"Low\"],\n    },\n    selectMode: \"toggle\",\n};\n\nexport default candlestick;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {select} from \"d3\";\nimport {treeColor} from \"../series/sunburst/sunburstColor\";\nimport {treeData} from \"../data/treeData\";\nimport {sunburstSeries} from \"../series/sunburst/sunburstSeries\";\nimport {tooltip} from \"../tooltip/tooltip\";\nimport {gridLayoutMultiChart} from \"../layout/gridLayoutMultiChart\";\nimport {colorRangeLegend} from \"../legend/colorRangeLegend\";\nimport {colorLegend} from \"../legend/legend\";\n\nfunction sunburst(container, settings) {\n    if (settings.crossValues.length === 0) {\n        console.warn(\"Unable to render a chart in the absence of any groups.\");\n        return;\n    }\n\n    const data = treeData(settings);\n    const color = treeColor(settings, data);\n    const sunburstGrid = gridLayoutMultiChart().elementsPrefix(\"sunburst\");\n\n    container.datum(data).call(sunburstGrid);\n\n    if (color) {\n        const color_column = settings.realValues[1];\n        if (\n            settings.mainValues.find((x) => x.name === color_column)?.type ===\n            \"string\"\n        ) {\n            const legend = colorLegend().settings(settings).scale(color);\n            container.call(legend);\n        } else {\n            const legend = colorRangeLegend().scale(color);\n            container.call(legend);\n        }\n    }\n\n    const sunburstContainer = sunburstGrid.chartContainer();\n    const sunburstEnter = sunburstGrid.chartEnter();\n    const sunburstDiv = sunburstGrid.chartDiv();\n    const sunburstTitle = sunburstGrid.chartTitle();\n    const containerSize = sunburstGrid.containerSize();\n\n    sunburstTitle.each((d, i, nodes) => select(nodes[i]).text(d.split));\n\n    sunburstContainer\n        .append(\"circle\")\n        .attr(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\");\n\n    sunburstContainer.append(\"text\").attr(\"class\", \"parent\");\n    sunburstEnter\n        .merge(sunburstDiv)\n        .select(\"svg\")\n        .select(\"g.sunburst\")\n        .attr(\n            \"transform\",\n            `translate(${containerSize.width / 2}, ${containerSize.height / 2})`\n        )\n        .each(function ({split, data}) {\n            const sunburstElement = select(this);\n            const svgNode = this.parentNode;\n            const {width, height} = svgNode.getBoundingClientRect();\n\n            const radius =\n                (Math.min(width, height) - 24) /\n                (settings.crossValues.length * 2);\n            sunburstSeries()\n                .settings(settings)\n                .split(split)\n                .data(data)\n                .color(color)\n                .radius(radius)(sunburstElement);\n\n            tooltip().settings(settings)(\n                sunburstElement.selectAll(\"g.segment\")\n            );\n        });\n}\n\nsunburst.plugin = {\n    name: \"Sunburst\",\n    category: \"Hierarchial Chart\",\n    max_cells: 7500,\n    max_columns: 50,\n    render_warning: true,\n    initial: {\n        type: \"number\",\n        count: 1,\n        names: [\"Size\", \"Color\", \"Tooltip\"],\n    },\n};\n\nexport default sunburst;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {flattenExtent} from \"../../axis/flatten\";\nimport {seriesColorRange} from \"../seriesRange\";\nimport {seriesColorsFromDistinct} from \"../seriesColors\";\n\nexport function treeColor(settings, data) {\n    if (settings.realValues.length > 1 && settings.realValues[1] !== null) {\n        const color_column = settings.realValues[1];\n        if (\n            settings.mainValues.find((x) => x.name === color_column)?.type ===\n            \"string\"\n        ) {\n            const colors = data\n                .map((d) => d.data)\n                .filter((x) => x.height > 0)\n                .map((x) => getColors(x))\n                .reduce((a, b) => a.concat(b));\n            return seriesColorsFromDistinct(settings, colors);\n        } else {\n            return seriesColorRange(\n                settings,\n                null,\n                null,\n                flattenExtent(data.map((d) => d.extents))\n            );\n        }\n    }\n}\n\n// only get the colors from the bottom level (e.g. nodes with no children)\nfunction getColors(nodes, colors = []) {\n    nodes.children && nodes.children.length > 0\n        ? nodes.children.forEach((child) =>\n              colors.concat(getColors(child, colors))\n          )\n        : nodes.data.color && colors.push(nodes.data.color);\n    return colors;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {toValue} from \"../tooltip/selectionData\";\n\nexport function treeData(settings) {\n    const sets = {};\n    const real_aggs = settings.realValues.map((x) =>\n        x === null ? null : settings.mainValues.find((y) => y.name === x)\n    );\n    settings.data.forEach((d, j) => {\n        const groups = d.__ROW_PATH__;\n        const splits = getSplitNames(d);\n        splits.forEach((split) => {\n            let currentLevel;\n            if (!sets[split]) {\n                sets[split] = [];\n            }\n            currentLevel = sets[split];\n            groups.forEach((group, i) => {\n                let element = currentLevel.find((e) => e.name === group);\n                if (!element) {\n                    element = {name: group, children: []};\n                    currentLevel.push(element);\n                }\n                if (\n                    settings.realValues.length > 1 &&\n                    settings.realValues[1] !== null\n                ) {\n                    const is_leaf = i === groups.length - 1;\n                    const colorValue = is_leaf\n                        ? getDataValue(d, settings.mainValues[1], split)\n                        : getDataValue(\n                              settings.agg_paths[j][i + 1] || d,\n                              settings.mainValues[1],\n                              split\n                          );\n                    if (colorValue !== undefined) {\n                        element.color = colorValue;\n                    }\n                }\n                if (\n                    settings.realValues.length > 2 &&\n                    settings.realValues[2] !== null\n                ) {\n                    element.tooltip = [];\n                    for (let i = 2; i < settings.realValues.length; ++i) {\n                        element.tooltip.push(\n                            getDataValue(d, real_aggs[i], split)\n                        );\n                    }\n                }\n                if (i === groups.length - 1) {\n                    element.name = groups.slice(-1)[0];\n                    if (groups.length === settings.crossValues.length) {\n                        const size = getDataValue(\n                            d,\n                            settings.mainValues[0],\n                            split\n                        );\n                        element.size = size > 0 ? size : 0;\n                    }\n                }\n                currentLevel = element.children;\n            });\n        });\n    });\n\n    const data = Object.entries(sets).map((set) => {\n        const tree = {name: \"root\", children: set[1]};\n        const root = d3.hierarchy(tree).sum((d) => d.size);\n        const chartData = d3.partition().size([2 * Math.PI, root.height + 1])(\n            root\n        );\n        chartData.each((d) => {\n            d.current = d;\n            d.mainValues =\n                settings.realValues.length === 1 ||\n                (settings.realValues[1] === null &&\n                    settings.realValues[2] === null)\n                    ? d.value\n                    : [d.value, d.data.color]\n                          .concat(d.data.tooltip || [])\n                          .filter((x) => x !== undefined);\n\n            d.crossValue = d\n                .ancestors()\n                .slice(0, -1)\n                .reverse()\n                .map((cross) => cross.data.name);\n\n            d.key = set[0];\n            d.label = toValue(\n                settings.crossValues[d.depth - 1 < 0 ? 0 : d.depth - 1].type,\n                d.data.name\n            );\n        });\n\n        return {\n            split: set[0],\n            data: chartData,\n            extents: getExtents(settings, set),\n        };\n    });\n\n    return data;\n}\n\nexport const getDataValue = (d, aggregate, split) =>\n    split.length ? d[`${split}|${aggregate.name}`] : d[aggregate.name];\n\nfunction getExtents(settings, [split, data]) {\n    if (settings.realValues.length > 1 && settings.realValues[1] !== null) {\n        const min = Math.min(\n            ...settings.data.map((d) =>\n                getDataValue(d, settings.mainValues[1], split)\n            )\n        );\n        const max = Math.max(...data.map((d) => d.color));\n        return [min, max];\n    }\n}\n\nfunction getSplitNames(d) {\n    const splits = [];\n    Object.keys(d).forEach((key) => {\n        if (key !== \"__ROW_PATH__\") {\n            const splitValue = key.split(\"|\").slice(0, -1).join(\"|\");\n            if (!splits.includes(splitValue)) {\n                splits.push(splitValue);\n            }\n        }\n    });\n    return splits;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {arc} from \"d3\";\n\nexport const drawArc = (radius) =>\n    arc()\n        .startAngle((d) => d.x0)\n        .endAngle((d) => d.x1)\n        .padAngle((d) => Math.min((d.x1 - d.x0) / 2, 0.005))\n        .padRadius(radius)\n        .innerRadius((d) => Math.max(1, (d.y0 - 1) * radius))\n        .outerRadius((d) =>\n            Math.max((d.y0 - 1) * radius, (d.y1 - 1) * radius - 1)\n        );\n\nexport const arcVisible = (d) => d.y0 >= 1 && d.x1 > d.x0;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {select} from \"d3\";\n\nexport const labelVisible = (d) =>\n    d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.06;\n\nexport function labelTransform(d, radius) {\n    const x = (((d.x0 + d.x1) / 2) * 180) / Math.PI;\n    const y = ((d.y0 - 1 + (d.y1 - 1)) / 2) * radius;\n    return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n}\n\nexport function cropLabel(d, targetWidth) {\n    let actualWidth = this.getBBox().width;\n    if (actualWidth > targetWidth) {\n        let labelText = d.label;\n        const textSelection = select(this);\n        while (actualWidth > targetWidth) {\n            labelText = labelText.substring(0, labelText.length - 1);\n            textSelection.text(() => labelText);\n            actualWidth = this.getBBox().width;\n        }\n        textSelection.text(\n            () =>\n                `${labelText\n                    .substring(0, labelText.length - 3)\n                    .replace(/\\s+$/, \"\")}...`\n        );\n    }\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {interpolate} from \"d3\";\nimport {drawArc, arcVisible} from \"./sunburstArc\";\nimport {labelVisible, labelTransform} from \"./sunburstLabel\";\n\nexport const clickHandler =\n    (data, g, parent, parentTitle, path, label, radius, split, settings) =>\n    (p, skipTransition) => {\n        settings.sunburstLevel[split] = p.data.name;\n        if (p.parent) {\n            parent.datum(p.parent);\n            parent.style(\"cursor\", \"pointer\");\n            parentTitle.html(`&#8682; ${p.label}`);\n        } else {\n            parent.datum(data);\n            parent.style(\"cursor\", \"default\");\n            parentTitle.html(\"\");\n        }\n        data.each(\n            (d) =>\n                (d.target = {\n                    x0:\n                        Math.max(\n                            0,\n                            Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))\n                        ) *\n                        2 *\n                        Math.PI,\n                    x1:\n                        Math.max(\n                            0,\n                            Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))\n                        ) *\n                        2 *\n                        Math.PI,\n                    y0: Math.max(0, d.y0 - p.depth),\n                    y1: Math.max(0, d.y1 - p.depth),\n                })\n        );\n\n        const t = g.transition().duration(skipTransition ? 0 : 750);\n        path.transition(t)\n            .tween(\"data\", (d) => {\n                const i = interpolate(d.current, d.target);\n                return (t) => (d.current = i(t));\n            })\n            .filter(function (d) {\n                return (\n                    +this.getAttribute(\"fill-opacity\") || arcVisible(d.target)\n                );\n            })\n            .attr(\"fill-opacity\", (d) => (arcVisible(d.target) ? 1 : 0))\n            .attr(\"user-select\", (d) =>\n                arcVisible(d.target) ? \"initial\" : \"none\"\n            )\n            .style(\"pointer-events\", (d) =>\n                arcVisible(d.target) ? \"initial\" : \"none\"\n            )\n            .attrTween(\"d\", (d) => () => drawArc(radius)(d.current));\n\n        label\n            .filter(function (d) {\n                return (\n                    +this.getAttribute(\"fill-opacity\") || labelVisible(d.target)\n                );\n            })\n            .transition(t)\n            .attr(\"fill-opacity\", (d) => +labelVisible(d.target))\n            .attrTween(\n                \"transform\",\n                (d) => () => labelTransform(d.current, radius)\n            );\n    };\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {drawArc, arcVisible} from \"./sunburstArc\";\nimport {labelVisible, labelTransform, cropLabel} from \"./sunburstLabel\";\nimport {clickHandler} from \"./sunburstClick\";\n\nexport function sunburstSeries() {\n    let settings = null;\n    let split = null;\n    let data = null;\n    let color = null;\n    let radius = null;\n\n    const _sunburstSeries = (sunburstElement) => {\n        const segment = sunburstElement\n            .selectAll(\"g.segment\")\n            .data(data.descendants().slice(1));\n        const segmentEnter = segment\n            .enter()\n            .append(\"g\")\n            .attr(\"class\", \"segment\");\n\n        segmentEnter.append(\"path\");\n        segmentEnter\n            .append(\"text\")\n            .attr(\"class\", \"segment\")\n            .attr(\"dy\", \"0.35em\");\n        const segmentMerge = segmentEnter.merge(segment);\n\n        const path = segmentMerge\n            .select(\"path\")\n            .attr(\"fill-opacity\", (d) => (arcVisible(d.current) ? 1 : 0))\n            .attr(\"user-select\", (d) =>\n                arcVisible(d.current) ? \"initial\" : \"none\"\n            )\n            .style(\"pointer-events\", (d) =>\n                arcVisible(d.current) ? \"initial\" : \"none\"\n            )\n            .attr(\"d\", (d) => drawArc(radius)(d.current));\n        color && path.style(\"fill\", (d) => color(d.data.color));\n\n        const label = segmentMerge\n            .select(\"text\")\n            .attr(\"fill-opacity\", (d) => +labelVisible(d.current))\n            .attr(\"transform\", (d) => labelTransform(d.current, radius))\n            .text((d) => d.label)\n            .each(function (d) {\n                cropLabel.call(this, d, radius);\n            });\n\n        const parentTitle = sunburstElement.select(\"text.parent\");\n        const parent = sunburstElement\n            .select(\"circle\")\n            .attr(\"r\", radius)\n            .datum(data);\n\n        const onClick = clickHandler(\n            data,\n            sunburstElement,\n            parent,\n            parentTitle,\n            path,\n            label,\n            radius,\n            split,\n            settings\n        );\n        if (settings.sunburstLevel) {\n            const currentLevel = data\n                .descendants()\n                .find((d) => d.data.name === settings.sunburstLevel[split]);\n            currentLevel && onClick(currentLevel, true);\n        } else {\n            settings.sunburstLevel = {};\n        }\n        parent.on(\"click\", (d) => onClick(d, false));\n        path.filter((d) => d.children)\n            .style(\"cursor\", \"pointer\")\n            .on(\"click\", (d) => onClick(d, false));\n    };\n\n    _sunburstSeries.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        return _sunburstSeries;\n    };\n\n    _sunburstSeries.split = (...args) => {\n        if (!args.length) {\n            return split;\n        }\n        split = args[0];\n        return _sunburstSeries;\n    };\n\n    _sunburstSeries.data = (...args) => {\n        if (!args.length) {\n            return data;\n        }\n        data = args[0];\n        return _sunburstSeries;\n    };\n\n    _sunburstSeries.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return _sunburstSeries;\n    };\n\n    _sunburstSeries.radius = (...args) => {\n        if (!args.length) {\n            return radius;\n        }\n        radius = args[0];\n        return _sunburstSeries;\n    };\n\n    return _sunburstSeries;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {getOrCreateElement} from \"../utils/utils\";\n\nexport function gridLayoutMultiChart() {\n    let elementsPrefix = \"element-prefix-unset\";\n\n    let chartContainer = null;\n    let chartEnter = null;\n    let chartDiv = null;\n    let chartTitle = null;\n    let color = null;\n    let containerSize = null;\n\n    const _gridLayoutMultiChart = (container) => {\n        const innerContainer = getOrCreateElement(\n            container,\n            \"div.inner-container\",\n            () => container.append(\"div\").attr(\"class\", \"inner-container\")\n        );\n\n        const innerRect = innerContainer.node().getBoundingClientRect();\n        const containerHeight = innerRect.height;\n        const containerWidth = innerRect.width - (color ? 70 : 0);\n\n        const minSize = 300;\n        const data = container.datum();\n\n        const cols = Math.max(\n            1,\n            Math.min(data.length, Math.floor(containerWidth / minSize))\n        );\n        const rows = Math.ceil(data.length / cols);\n\n        containerSize = {\n            width: containerWidth / Math.max(cols, 1),\n            height: Math.min(\n                containerHeight,\n                Math.max(\n                    containerHeight / rows,\n                    containerWidth / Math.max(cols, 1)\n                )\n            ),\n        };\n\n        if (containerHeight / rows > containerSize.height * 0.75) {\n            containerSize.height = containerHeight / rows;\n        }\n\n        if (data.length > 1) {\n            innerContainer.style(\n                \"grid-template-columns\",\n                `repeat(${cols}, ${100 / cols}%)`\n            );\n            innerContainer.style(\n                \"grid-template-rows\",\n                `repeat(${rows}, ${containerSize.height}px)`\n            );\n        } else {\n            innerContainer.style(\"grid-template-columns\", `repeat(1, 100%)`);\n            innerContainer.style(\"grid-template-rows\", `repeat(1, 100%)`);\n        }\n\n        chartDiv = innerContainer\n            .selectAll(`div.${elementsPrefix}-container`)\n            .data(data, (d) => d.split);\n        chartDiv.exit().remove();\n\n        chartEnter = chartDiv\n            .enter()\n            .append(\"div\")\n            .attr(\"class\", `${elementsPrefix}-container`);\n\n        chartTitle = chartEnter\n            .append(\"div\")\n            .attr(\"class\", \"title-container\")\n            .style(\"text-align\", \"center\")\n            .attr(\"display\", \"inline-block\")\n            .append(\"text\")\n            .attr(\"class\", \"title\")\n            .style(\"text-align\", \"left\");\n\n        chartContainer = chartEnter\n            .append(\"svg\")\n            .append(\"g\")\n            .attr(\"class\", elementsPrefix);\n    };\n\n    _gridLayoutMultiChart.elementsPrefix = (...args) => {\n        if (!args.length) {\n            return elementsPrefix;\n        }\n        elementsPrefix = args[0];\n        return _gridLayoutMultiChart;\n    };\n\n    _gridLayoutMultiChart.chartContainer = () => chartContainer;\n\n    _gridLayoutMultiChart.chartEnter = () => chartEnter;\n\n    _gridLayoutMultiChart.chartDiv = () => chartDiv;\n\n    _gridLayoutMultiChart.chartTitle = () => chartTitle;\n\n    _gridLayoutMultiChart.containerSize = () => containerSize;\n\n    return _gridLayoutMultiChart;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {treeColor} from \"../series/treemap/treemapColor\";\nimport {treeData} from \"../data/treeData\";\nimport {treemapSeries} from \"../series/treemap/treemapSeries\";\nimport {tooltip} from \"../tooltip/tooltip\";\nimport {gridLayoutMultiChart} from \"../layout/gridLayoutMultiChart\";\nimport {colorRangeLegend} from \"../legend/colorRangeLegend\";\nimport {colorLegend} from \"../legend/legend\";\n\nfunction treemap(container, settings) {\n    if (settings.crossValues.length === 0) {\n        console.warn(\"Unable to render a chart in the absence of any groups.\");\n        return;\n    }\n    if (!settings.treemaps) settings.treemaps = {};\n\n    const data = treeData(settings);\n    const color = treeColor(\n        settings,\n        data.map((d) => d.data)\n    );\n\n    if (color) {\n        this._container.classList.add(\"has-legend\");\n    }\n\n    const treemapGrid = gridLayoutMultiChart().elementsPrefix(\"treemap\");\n    container.datum(data).call(treemapGrid);\n    if (color) {\n        const color_column = settings.realValues[1];\n        if (\n            settings.mainValues.find((x) => x.name === color_column)?.type ===\n            \"string\"\n        ) {\n            const legend = colorLegend().settings(settings).scale(color);\n            container.call(legend);\n        } else {\n            const legend = colorRangeLegend().scale(color);\n            container.call(legend);\n        }\n    }\n\n    const treemapEnter = treemapGrid.chartEnter();\n    const treemapDiv = treemapGrid.chartDiv();\n    const treemapTitle = treemapGrid.chartTitle();\n\n    treemapTitle.each((d, i, nodes) => d3.select(nodes[i]).text(d.split));\n    treemapEnter\n        .merge(treemapDiv)\n        .select(\"svg\")\n        .select(\"g.treemap\")\n        .each(function ({split, data}) {\n            const treemapSvg = d3.select(this);\n\n            if (!settings.treemaps[split]) settings.treemaps[split] = {};\n\n            treemapSeries()\n                .settings(settings.treemaps[split], settings)\n                .data(data)\n                .container(\n                    d3.select(d3.select(this.parentNode).node().parentNode)\n                )\n                .color(color)(treemapSvg);\n\n            tooltip().settings(settings).centered(true)(\n                treemapSvg.selectAll(\"g\")\n            );\n        });\n}\n\ntreemap.plugin = {\n    type: \"Treemap\",\n    name: \"Treemap\",\n    category: \"Hierarchial Chart\",\n    max_cells: 5000,\n    max_columns: 50,\n    render_warning: true,\n    initial: {\n        type: \"number\",\n        count: 1,\n        names: [\"Size\", \"Color\", \"Tooltip\"],\n    },\n};\nexport default treemap;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {seriesColorRange} from \"../seriesRange\";\nimport {seriesColorsFromDistinct} from \"../seriesColors\";\n\nexport function treeColor(settings, data) {\n    if (\n        settings.realValues.length < 1 ||\n        settings.realValues[1] === null ||\n        settings.realValues[1] === undefined\n    )\n        return;\n    const color_column = settings.realValues[1];\n    const colors = data\n        .filter((x) => x.height > 0)\n        .map((x) => getColors(x))\n        .reduce((a, b) => a.concat(b));\n    if (\n        settings.mainValues.find((x) => x.name === color_column)?.type ===\n        \"string\"\n    ) {\n        return seriesColorsFromDistinct(settings, colors);\n    } else {\n        let min = Math.min(...colors);\n        let max = Math.max(...colors);\n        return seriesColorRange(settings, null, null, [min, max]);\n    }\n}\n\n// only get the colors from the bottom level (e.g. nodes with no children)\nfunction getColors(nodes, colors = []) {\n    nodes.children && nodes.children.length > 0\n        ? nodes.children.forEach((child) =>\n              colors.concat(getColors(child, colors))\n          )\n        : nodes.data.color && colors.push(nodes.data.color);\n    return colors;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {select} from \"d3\";\nimport {isElementOverlapping, isElementOverflowing} from \"../../utils/utils\";\n\nconst minTextSize = 7;\n\nexport const labelMapExists = (d) =>\n    d.target && d.target.textAttributes ? true : false;\n\nexport const toggleLabels = (nodes, treemapLevel, crossValues) => {\n    nodes.selectAll(\"text\").each(function (d, i) {\n        const help = textLevelHelper(d, treemapLevel, crossValues);\n        this.style = help;\n    });\n\n    const visibleNodes = selectVisibleNodes(nodes);\n    centerLabels(visibleNodes);\n    preventTextCollisions(visibleNodes);\n};\n\nexport const restoreLabels = (nodes) => {\n    nodes.each((d, i, nodes) => {\n        const label = select(nodes[i]).selectAll(\"text\");\n        label\n            .attr(\"dx\", d.target.textAttributes.dx)\n            .attr(\"dy\", d.target.textAttributes.dy)\n            .attr(\"style\", d.target.textAttributes.style);\n    });\n};\n\nexport const preventTextCollisions = (nodes) => {\n    const textCollisionFuzzFactorPx = -2;\n    const textAdjustPx = 14; // This should remain the same as the css value for .top => font-size in the chart.less\n    const rect = (element) => element.getBoundingClientRect();\n\n    const topNodes = [];\n    nodes\n        .selectAll(\"text\")\n        .filter(\n            (_, i, nodes) =>\n                select(nodes[i]).attr(\"style\") === textVisibility.high\n        )\n        .each((_, i, nodes) => topNodes.push(nodes[i]));\n\n    nodes\n        .selectAll(\"text\")\n        .filter(\n            (_, i, nodes) =>\n                select(nodes[i]).attr(\"style\") === textVisibility.low\n        )\n        .each((_, i, nodes) => {\n            const lowerNode = nodes[i];\n            topNodes\n                .filter(\n                    (topNode) =>\n                        isElementOverlapping(\n                            \"x\",\n                            rect(topNode),\n                            rect(lowerNode)\n                        ) &&\n                        isElementOverlapping(\n                            \"y\",\n                            rect(topNode),\n                            rect(lowerNode),\n                            textCollisionFuzzFactorPx\n                        )\n                )\n                .forEach(() =>\n                    select(lowerNode).attr(\n                        \"dy\",\n                        Number(select(lowerNode).attr(\"dy\")) + textAdjustPx\n                    )\n                );\n        });\n};\n\nexport const lockTextOpacity = (d) =>\n    select(d).style(\"opacity\", textOpacity[select(d).attr(\"class\")]);\n\nexport const unlockTextOpacity = (d) => select(d).style(\"opacity\", null);\n\nexport const textOpacity = {top: 1, mid: 0.7, lower: 0};\n\nexport const selectVisibleNodes = (nodes) =>\n    nodes.filter(\n        (_, i, nodes) =>\n            select(nodes[i]).selectAll(\"text\").attr(\"style\") !==\n            textVisibility.zero\n    );\n\nexport const adjustLabelsThatOverflow = (nodes) =>\n    nodes.selectAll(\"text\").each((_, i, nodes) => shrinkOrHideText(nodes[i]));\n\nconst centerLabels = (nodes) =>\n    nodes.selectAll(\"text\").each((_, i, nodes) => centerText(nodes[i]));\n\nconst centerText = (d) => {\n    const nodeSelect = select(d);\n    const rect = d.getBoundingClientRect();\n    nodeSelect.attr(\"dx\", 0 - rect.width / 2).attr(\"dy\", 0 + rect.height / 4);\n};\n\n// WOuld be ideal to use IntersectionObserver here, but it does not support SVG\nconst shrinkOrHideText = (d) => {\n    const parent = d.parentNode;\n    const rect = parent.childNodes[0];\n\n    const textRect = d.getBBox();\n    const rectRect = rect.getBBox();\n\n    if (!needsToShrinkOrHide(d, rectRect, textRect)) {\n        select(d).attr(\"style\", select(d).attr(\"style\"));\n    }\n};\n\nconst needsToShrinkOrHide = (d, rectRect, textRect) => {\n    const resize_factor = Math.min(\n        rectRect.height / textRect.height,\n        rectRect.width / textRect.width\n    );\n\n    if (resize_factor < 1) {\n        const fontSize = parseInt(select(d).style(\"font-size\"));\n        const newFontSize = Math.floor(fontSize * resize_factor);\n        if (fontSize > minTextSize && newFontSize > minTextSize) {\n            select(d).style(\"font-size\", `${newFontSize}px`);\n            centerText(d);\n        } else {\n            select(d).style(\"font-size\", null);\n            select(d).style(\"opacity\", \"0\");\n        }\n        return true;\n    }\n    return false;\n};\n\nconst textLevelHelper = (d, treemapLevel, crossValues) => {\n    if (\n        !crossValues\n            .filter((x) => x !== \"\")\n            .every((x) => d.crossValue.includes(x))\n    )\n        return textVisibility.zero;\n    switch (d.depth) {\n        case treemapLevel + 1:\n            return textVisibility.high;\n        case treemapLevel + 2:\n            return textVisibility.low;\n        default:\n            return textVisibility.zero;\n    }\n};\n\nconst textVisibility = {\n    high: \"font-size:14px;z-index:5;pointer-events: none;\",\n    low: \"font-size:8px;opacity:0.7;z-index:4;\",\n    zero: \"font-size:0px;opacity:0;z-index:4;\",\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\n\nexport default (width, height) => {\n    const treemapLayout = d3\n        .treemap()\n        .size([width, height])\n        .paddingInner((d) => 1 + 2 * (d.height - 1));\n\n    treemapLayout.tile(d3.treemapBinary);\n\n    return treemapLayout;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport {calcWidth, calcHeight} from \"./treemapSeries\";\nimport {\n    labelMapExists,\n    toggleLabels,\n    preventTextCollisions,\n    lockTextOpacity,\n    unlockTextOpacity,\n    textOpacity,\n    selectVisibleNodes,\n    adjustLabelsThatOverflow,\n    restoreLabels,\n} from \"./treemapLabel\";\nimport {calculateSubTreeMap, saveLabelMap} from \"./treemapLevelCalculation\";\nimport {raiseEvent} from \"../../tooltip/selectionEvent\";\n\nexport function returnToLevel(\n    rects,\n    nodesMerge,\n    labels,\n    settings,\n    treemapDiv,\n    treemapSvg,\n    rootNode,\n    parentCtrls,\n    root_settings\n) {\n    if (settings.treemapLevel > 0) {\n        const crossValues = rootNode.crossValue;\n        executeTransition(\n            rootNode,\n            rects,\n            nodesMerge,\n            labels,\n            settings,\n            treemapDiv,\n            treemapSvg,\n            rootNode,\n            0,\n            crossValues,\n            parentCtrls,\n            root_settings,\n            1,\n            false\n        );\n\n        settings.treemapRoute\n            .slice(1, settings.treemapRoute.length)\n            .forEach((cv) => {\n                const d = nodesMerge.filter((d) => d.crossValue === cv).datum();\n                const crossValues = d.crossValue;\n                calculateSubTreeMap(\n                    d,\n                    crossValues,\n                    nodesMerge,\n                    d.depth,\n                    rootNode,\n                    treemapDiv\n                );\n                executeTransition(\n                    d,\n                    rects,\n                    nodesMerge,\n                    labels,\n                    settings,\n                    treemapDiv,\n                    treemapSvg,\n                    rootNode,\n                    d.depth,\n                    crossValues,\n                    parentCtrls,\n                    root_settings,\n                    1,\n                    false\n                );\n            });\n    }\n}\n\nexport function changeLevel(\n    d,\n    rects,\n    nodesMerge,\n    labels,\n    settings,\n    treemapDiv,\n    treemapSvg,\n    rootNode,\n    parentCtrls,\n    root_settings\n) {\n    if (!d.children) return;\n\n    if (settings.treemapLevel < d.depth) {\n        settings.treemapRoute.push(d.crossValue);\n    } else {\n        settings.treemapRoute.pop();\n    }\n\n    settings.treemapLevel = d.depth;\n\n    const crossValues = d.crossValue;\n\n    if (\n        !d.mapLevel[settings.treemapLevel] ||\n        !d.mapLevel[settings.treemapLevel].levelRoot\n    ) {\n        calculateSubTreeMap(\n            d,\n            crossValues,\n            nodesMerge,\n            settings.treemapLevel,\n            rootNode,\n            treemapDiv\n        );\n    }\n\n    executeTransition(\n        d,\n        rects,\n        nodesMerge,\n        labels,\n        settings,\n        treemapDiv,\n        treemapSvg,\n        rootNode,\n        settings.treemapLevel,\n        crossValues,\n        parentCtrls,\n        root_settings\n    );\n}\n\nfunction executeTransition(\n    d,\n    rects,\n    nodesMerge,\n    labels,\n    settings,\n    treemapDiv,\n    treemapSvg,\n    rootNode,\n    treemapLevel,\n    crossValues,\n    parentCtrls,\n    root_settings,\n    duration = 500,\n    recordLabelMap = true\n) {\n    const parent = d.parent;\n\n    const t = treemapSvg\n        .transition(\"main transition\")\n        .duration(duration)\n        .ease(d3.easeCubicOut);\n\n    nodesMerge.each((d) => (d.target = d.mapLevel[treemapLevel]));\n\n    if (!labelMapExists(d)) preventUserInteraction(nodesMerge, parentCtrls);\n\n    // hide hidden svgs\n    nodesMerge\n        .transition(t)\n        .tween(\"data\", (d) => {\n            const i = d3.interpolate(d.current, d.target);\n            return (t) => (d.current = i(t));\n        })\n        .styleTween(\"opacity\", (d) => () => d.current.opacity)\n        .attrTween(\n            \"pointer-events\",\n            (d) => () => d.target.visible ? \"all\" : \"none\"\n        );\n\n    rects\n        .transition(t)\n        .filter((d) => d.target.visible)\n        .styleTween(\"x\", (d) => () => `${d.current.x0}px`)\n        .styleTween(\"y\", (d) => () => `${d.current.y0}px`)\n        .styleTween(\"width\", (d) => () => `${d.current.x1 - d.current.x0}px`)\n        .styleTween(\"height\", (d) => () => `${d.current.y1 - d.current.y0}px`);\n\n    labels\n        .transition(t)\n        .filter((d) => d.target.visible)\n        .attrTween(\"x\", (d) => () => d.current.x0 + calcWidth(d.current) / 2)\n        .attrTween(\"y\", (d) => () => d.current.y0 + calcHeight(d.current) / 2)\n        .end()\n        .catch(() => enableUserInteraction(nodesMerge))\n        .then(() => {\n            if (!labelMapExists(d)) {\n                preventTextCollisions(visibleLabelNodes);\n                adjustLabelsThatOverflow(visibleLabelNodes);\n                fadeTextTransition(labels, treemapSvg, duration);\n                if (recordLabelMap) saveLabelMap(nodesMerge, treemapLevel);\n                enableUserInteraction(nodesMerge, parentCtrls, parent);\n            }\n        })\n        .catch((ex) => {\n            console.error(\n                \"Exception completing promises after main transition\",\n                ex\n            );\n            enableUserInteraction(nodesMerge, parentCtrls, parent);\n        });\n\n    if (!labelMapExists(d)) {\n        labels.each((_, i, labels) => lockTextOpacity(labels[i]));\n        toggleLabels(nodesMerge, treemapLevel, crossValues);\n    } else {\n        restoreLabels(nodesMerge);\n    }\n\n    const visibleLabelNodes = selectVisibleNodes(nodesMerge);\n\n    if (parent) {\n        parentCtrls\n            .hide(false)\n            .text(d.label)\n            .onClick(() => {\n                changeLevel(\n                    parent,\n                    rects,\n                    nodesMerge,\n                    labels,\n                    settings,\n                    treemapDiv,\n                    treemapSvg,\n                    rootNode,\n                    parentCtrls,\n                    root_settings\n                    // duration\n                );\n                const viewer = treemapDiv.node().getRootNode()\n                    .host.parentElement;\n                raiseEvent(viewer, parent, root_settings);\n            })();\n    } else {\n        parentCtrls.hide(true)();\n    }\n}\n\nasync function fadeTextTransition(labels, treemapSvg, duration = 400) {\n    const t = treemapSvg\n        .transition(\"text fade transition\")\n        .duration(duration)\n        .ease(d3.easeCubicOut);\n\n    await labels\n        .transition(t)\n        .filter((d) => d.target.visible)\n        .tween(\"data\", (d, i, labels) => {\n            const label = labels[i];\n            const interpolation = d3.interpolate(\n                lockedOpacity(d),\n                targetOpacity(label)\n            );\n            return (t) => (d.current.opacity = interpolation(t));\n        })\n        .styleTween(\"opacity\", (d) => () => d.current.opacity)\n        .end()\n        .catch((ex) => console.error(\"Exception in text fade transition\", ex))\n        .then(() =>\n            labels.each((_, i, labels) => unlockTextOpacity(labels[i]))\n        );\n}\n\nconst lockedOpacity = (d) => d.target.textLockedAt.opacity;\nconst targetOpacity = (d) => textOpacity[d3.select(d).attr(\"class\")];\n\nconst preventUserInteraction = (nodes, parentCtrls) => {\n    parentCtrls.deactivate(true);\n\n    nodes.each((_, i, nodes) => {\n        const rect = d3.select(nodes[i]).selectAll(\"rect\");\n        rect.style(\"pointer-events\", \"none\");\n    });\n};\n\nconst enableUserInteraction = (nodes, parentCtrls) => {\n    if (parentCtrls) parentCtrls.deactivate(false);\n\n    nodes.each((_, i, nodes) => {\n        const rect = d3.select(nodes[i]).selectAll(\"rect\");\n        rect.style(\"pointer-events\", null);\n    });\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {calcWidth, calcHeight} from \"./treemapSeries\";\nimport {hierarchy, select} from \"d3\";\nimport treemapLayout from \"./treemapLayout\";\nimport {textOpacity} from \"./treemapLabel\";\n\nconst includesAllCrossValues = (d, crossValues) =>\n    crossValues.every((val) => d.crossValue.includes(val));\n\nexport function calculateSubTreeMap(\n    d,\n    crossValues,\n    nodesMerge,\n    treemapLevel,\n    rootNode,\n    treemapDiv\n) {\n    // We can approximate coordinates for most of the tree which will be shunted\n    // beyond the viewable area. This approach alone results in excessive\n    // margins as one goes deeper into the treemap.\n    approximateAttributesForAllNodes(\n        d,\n        crossValues,\n        nodesMerge,\n        treemapLevel,\n        rootNode\n    );\n    d.mapLevel[treemapLevel].levelRoot = true;\n    // Use the pre-existing d3 mechanism to calculate the subtree for the\n    // viewable area.\n    recalculateVisibleSubTreeCoordinates(\n        d,\n        treemapDiv.node().getBoundingClientRect().width,\n        treemapDiv.node().getBoundingClientRect().height,\n        treemapLevel\n    );\n\n    calculateTextOpacities(nodesMerge, treemapLevel);\n}\n\nexport function calculateRootLevelMap(nodesMerge, rootNode) {\n    nodesMerge.each((d) => {\n        d.mapLevel = [];\n        d.mapLevel[0] = {\n            x0: d.x0,\n            x1: calcWidth(d) + d.x0,\n            y0: d.y0,\n            y1: calcHeight(d) + d.y0,\n            visible: true,\n            opacity: 1,\n        };\n    });\n    rootNode.mapLevel[0].levelRoot = true;\n    calculateTextOpacities(nodesMerge, 0);\n}\n\nexport const saveLabelMap = (nodes, treemapLevel) => {\n    nodes.each((d, i, nodes) => {\n        const label = select(nodes[i]).selectAll(\"text\");\n        d.mapLevel[treemapLevel].textAttributes = {\n            dx: label.attr(\"dx\"),\n            dy: label.attr(\"dy\"),\n            class: label.attr(\"class\"),\n            \"font-size\": label.style(\"font-size\"),\n        };\n    });\n};\n\nfunction approximateAttributesForAllNodes(\n    d,\n    crossValues,\n    nodesMerge,\n    treemapLevel,\n    rootNode\n) {\n    const oldDimensions = {\n        x: d.x0,\n        y: d.y0,\n        width: d.x1 - d.x0,\n        height: d.y1 - d.y0,\n    };\n    const newDimensions = {\n        width: rootNode.x1 - rootNode.x0,\n        height: rootNode.y1 - rootNode.y0,\n    };\n    const dimensionMultiplier = {\n        width: newDimensions.width / oldDimensions.width,\n        height: newDimensions.height / oldDimensions.height,\n    };\n\n    nodesMerge.each((d) => {\n        const x0 = (d.x0 - oldDimensions.x) * dimensionMultiplier.width;\n        const y0 = (d.y0 - oldDimensions.y) * dimensionMultiplier.height;\n        const width = calcWidth(d) * dimensionMultiplier.width;\n        const height = calcHeight(d) * dimensionMultiplier.height;\n        const visible =\n            includesAllCrossValues(d, crossValues) &&\n            d.data.name !== crossValues[treemapLevel - 1];\n\n        d.mapLevel[treemapLevel] = {\n            x0,\n            x1: width + x0,\n            y0,\n            y1: height + y0,\n            visible,\n            opacity: visible ? 1 : 0,\n        };\n    });\n    d.mapLevel[treemapLevel].levelRoot = true;\n}\n\nfunction recalculateVisibleSubTreeCoordinates(\n    subTreeRoot,\n    treeRootWidth,\n    treeRootHeight,\n    treemapLevel\n) {\n    const treemapBlueprinter = treemapLayout(treeRootWidth, treeRootHeight);\n    const treemapBlueprint = treemapBlueprinter(\n        hierarchy(subTreeRoot.data).sum((d) => d.size)\n    );\n\n    const dummiedDescendants = treemapBlueprint.descendants();\n    const descendants = subTreeRoot.descendants();\n\n    dummiedDescendants.forEach((_, i) => {\n        descendants[i].mapLevel[treemapLevel].x0 = dummiedDescendants[i].x0;\n        descendants[i].mapLevel[treemapLevel].x1 = dummiedDescendants[i].x1;\n        descendants[i].mapLevel[treemapLevel].y0 = dummiedDescendants[i].y0;\n        descendants[i].mapLevel[treemapLevel].y1 = dummiedDescendants[i].y1;\n    });\n}\n\nfunction calculateTextOpacities(nodesMerge, treemapLevel) {\n    nodesMerge.selectAll(\"text\").each((_, i, nodes) => {\n        const text = select(nodes[i]);\n        const d = select(nodes[i]).datum();\n        const textVis = text.attr(\"class\");\n        d.mapLevel[treemapLevel].textLockedAt = {opacity: textOpacity[textVis]};\n    });\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {getOrCreateElement} from \"../../utils/utils\";\nimport template from \"../../../html/parent-controls.html\";\n\nexport function parentControls(container) {\n    let onClick = null;\n    let text = null;\n    let hide = true;\n    let deactivated = false;\n\n    const parent = getOrCreateElement(container, \".parent-controls\", () =>\n        container\n            .append(\"div\")\n            .attr(\"class\", \"parent-controls\")\n            .style(\"display\", hide ? \"none\" : \"\")\n            .html(template)\n    );\n\n    const controls = () => {\n        parent\n            .style(\"display\", hide ? \"none\" : \"\")\n            .select(\"#goto-parent\")\n            .style(\"pointer-events\", deactivated ? \"none\" : null)\n            .html(`\u21EA ${text}`)\n            .on(\"click\", () => onClick());\n    };\n\n    controls.deactivate = (...args) => {\n        if (!args.length) {\n            return deactivated;\n        }\n        deactivated = args[0];\n\n        const button = parent.select(\"#goto-parent\");\n        if (deactivated) {\n            button.style(\"pointer-events\", \"none\");\n        } else {\n            button.style(\"pointer-events\", null);\n        }\n\n        return controls;\n    };\n\n    controls.hide = (...args) => {\n        if (!args.length) {\n            return hide;\n        }\n        hide = args[0];\n        return controls;\n    };\n\n    controls.text = (...args) => {\n        if (!args.length) {\n            return text;\n        }\n        text = args[0];\n        return controls;\n    };\n\n    controls.onClick = (...args) => {\n        if (!args.length) {\n            return onClick;\n        }\n        onClick = args[0];\n        return controls;\n    };\n\n    return controls;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {\n    toggleLabels,\n    adjustLabelsThatOverflow,\n    selectVisibleNodes,\n} from \"./treemapLabel\";\nimport treemapLayout from \"./treemapLayout\";\nimport {changeLevel, returnToLevel} from \"./treemapTransitions\";\nimport {parentControls} from \"./treemapControls\";\nimport {calculateRootLevelMap, saveLabelMap} from \"./treemapLevelCalculation\";\n\nexport const nodeLevel = {\n    leaf: \"leafnode\",\n    branch: \"branchnode\",\n    root: \"rootnode\",\n};\nexport const calcWidth = (d) => d.x1 - d.x0;\nexport const calcHeight = (d) => d.y1 - d.y0;\nconst isLeafNode = (maxDepth, d) => d.depth === maxDepth;\nconst nodeLevelHelper = (maxDepth, d) =>\n    d.depth === 0\n        ? nodeLevel.root\n        : isLeafNode(maxDepth, d)\n        ? nodeLevel.leaf\n        : nodeLevel.branch;\n\nexport function treemapSeries() {\n    let settings = null;\n    let root_settings = null;\n    let data = null;\n    let color = null;\n    let treemapDiv = null;\n    let parentCtrls = null;\n\n    const _treemapSeries = (treemapSvg) => {\n        parentCtrls = parentControls(treemapDiv);\n        parentCtrls();\n\n        const maxDepth = data.height;\n        if (!settings.treemapLevel) settings.treemapLevel = 0;\n        if (!settings.treemapRoute) settings.treemapRoute = [];\n        const treemap = treemapLayout(\n            treemapDiv.node().getBoundingClientRect().width,\n            treemapDiv.node().getBoundingClientRect().height\n        );\n        treemap(data);\n\n        const nodes = treemapSvg.selectAll(\"g\").data(data.descendants());\n        const nodesEnter = nodes.enter().append(\"g\");\n\n        nodesEnter.append(\"rect\");\n        nodesEnter.append(\"text\");\n\n        // Draw child nodes first\n        const nodesMerge = nodesEnter\n            .merge(nodes)\n            .sort((a, b) => b.depth - a.depth);\n\n        const rects = nodesMerge\n            .select(\"rect\")\n            .attr(\"class\", (d) => `treerect ${nodeLevelHelper(maxDepth, d)}`)\n            .style(\"x\", (d) => d.x0)\n            .style(\"y\", (d) => d.y0)\n            .style(\"width\", (d) => calcWidth(d))\n            .style(\"height\", (d) => calcHeight(d));\n\n        rects.style(\"fill\", (d) => {\n            if (nodeLevelHelper(maxDepth, d) === nodeLevel.leaf) {\n                if (d.data.color) {\n                    return color(d.data.color);\n                } else {\n                    return root_settings.colorStyles.series;\n                }\n            } else {\n                return \"transparent\";\n            }\n        });\n\n        const labels = nodesMerge\n            .filter((d) => d.value !== 0)\n            .select(\"text\")\n            .attr(\"x\", (d) => d.x0 + calcWidth(d) / 2)\n            .attr(\"y\", (d) => d.y0 + calcHeight(d) / 2)\n            .text((d) => d.label);\n\n        const rootNode = rects.filter((d) => d.crossValue.length === 0).datum();\n        calculateRootLevelMap(nodesMerge, rootNode);\n\n        toggleLabels(nodesMerge, 0, []);\n        adjustLabelsThatOverflow(selectVisibleNodes(nodesMerge));\n        saveLabelMap(nodesMerge, 0);\n\n        if (settings.treemapRoute.length === 0)\n            settings.treemapRoute.push(rootNode.crossValue);\n        rects\n            .filter((d) => d.children)\n            .on(\"click\", (_event, d) =>\n                changeLevel(\n                    d,\n                    rects,\n                    nodesMerge,\n                    labels,\n                    settings,\n                    treemapDiv,\n                    treemapSvg,\n                    rootNode,\n                    parentCtrls,\n                    root_settings\n                )\n            );\n\n        returnToLevel(\n            rects,\n            nodesMerge,\n            labels,\n            settings,\n            treemapDiv,\n            treemapSvg,\n            rootNode,\n            parentCtrls,\n            root_settings\n        );\n    };\n\n    _treemapSeries.settings = (...args) => {\n        if (!args.length) {\n            return settings;\n        }\n        settings = args[0];\n        root_settings = args[1];\n        return _treemapSeries;\n    };\n\n    _treemapSeries.data = (...args) => {\n        if (!args.length) {\n            return data;\n        }\n        data = args[0];\n        return _treemapSeries;\n    };\n\n    _treemapSeries.color = (...args) => {\n        if (!args.length) {\n            return color;\n        }\n        color = args[0];\n        return _treemapSeries;\n    };\n\n    _treemapSeries.container = (...args) => {\n        if (!args.length) {\n            return treemapDiv;\n        }\n        treemapDiv = args[0];\n        return _treemapSeries;\n    };\n\n    return _treemapSeries;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport barChart from \"./bar\";\nimport columnChart from \"./column\";\nimport lineChart from \"./line\";\nimport xyLine from \"./xy-line\";\nimport areaChart from \"./area\";\nimport yScatter from \"./y-scatter\";\nimport xyScatter from \"./xy-scatter\";\nimport heatmap from \"./heatmap\";\nimport ohlc from \"./ohlc\";\nimport candlestick from \"./candlestick\";\nimport sunburst from \"./sunburst\";\nimport treemap from \"./treemap\";\n\nconst chartClasses = [\n    barChart,\n    columnChart,\n    lineChart,\n    xyLine,\n    areaChart,\n    yScatter,\n    xyScatter,\n    ohlc,\n    candlestick,\n    treemap,\n    sunburst,\n    heatmap,\n];\n\nexport default chartClasses;\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as d3 from \"d3\";\nimport * as gparser from \"gradient-parser\";\n\nexport const initialiseStyles = (container, settings) => {\n    if (!settings.colorStyles) {\n        const styles = {\n            scheme: [],\n            gradient: {},\n            interpolator: {},\n            grid: {},\n        };\n\n        const computed = computedStyle(container);\n        styles[\"series\"] = computed(`--d3fc-local-series`);\n        for (let i = 1; ; i++) {\n            const key = `series-${i}`;\n            const color = computed(`--d3fc-local-${key}`);\n            if (!color) {\n                break;\n            }\n\n            styles[key] = color;\n            styles.scheme.push(color);\n        }\n\n        styles.opacity = getOpacityFromColor(styles.series);\n        styles.grid.gridLineColor = computed`--d3fc-gridline--color`;\n\n        const gradients = [\"full\", \"positive\", \"negative\"];\n        gradients.forEach((g) => {\n            const gradient = computed(`--d3fc-local-${g}--gradient`);\n            styles.gradient[g] = parseGradient(gradient, styles.opacity);\n        });\n\n        settings.colorStyles = styles;\n    }\n};\n\nconst getOpacityFromColor = (color) => {\n    return d3.color(color).opacity;\n};\n\nconst stepAsColor = (value, opacity) => {\n    const color = d3.color(`#${value}`);\n    color.opacity = opacity;\n    return color + \"\";\n};\n\nconst computedStyle = (container) => {\n    const containerStyles = getComputedStyle(container);\n    return (d) => containerStyles?.getPropertyValue(d);\n};\n\nconst parseGradient = (gradient, opacity) => {\n    const parsed = gparser.parse(gradient)[0].colorStops;\n    return parsed\n        .map((g, i) => [\n            g.length ? g.length.value / 100 : i / (parsed.length - 1),\n            stepAsColor(g.value, opacity),\n        ])\n        .sort((a, b) => a[0] - b[0]);\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport \"./polyfills/index\";\nimport charts from \"../charts/charts\";\nimport {initialiseStyles} from \"../series/colorStyles\";\nimport style from \"../../less/chart.less\";\n\nimport * as d3 from \"d3\";\n\nconst DEFAULT_PLUGIN_SETTINGS = {\n    initial: {\n        type: \"number\",\n        count: 1,\n    },\n    selectMode: \"select\",\n};\n\nconst styleWithD3FC = `${style}${getD3FCStyles()}`;\nconst EXCLUDED_SETTINGS = [\n    \"crossValues\",\n    \"mainValues\",\n    \"realValues\",\n    \"splitValues\",\n    \"filter\",\n    \"data\",\n    \"size\",\n    \"colorStyles\",\n    \"agg_paths\",\n    \"treemaps\",\n];\n\nfunction getD3FCStyles() {\n    const headerStyles = document\n        .querySelector(\"head\")\n        .querySelectorAll(\"style\");\n    const d3fcStyles = [];\n    headerStyles.forEach((s) => {\n        if (s.innerText.indexOf(\"d3fc-\") !== -1) {\n            d3fcStyles.push(s.innerText);\n        }\n    });\n    return d3fcStyles.join(\"\");\n}\n\nfunction register_element(plugin_name) {\n    customElements.get(\"perspective-viewer\").registerPlugin(plugin_name);\n}\n\nexport function register(...plugins) {\n    plugins = new Set(\n        plugins.length > 0 ? plugins : charts.map((chart) => chart.plugin.name)\n    );\n    charts.forEach((chart) => {\n        if (plugins.has(chart.plugin.name)) {\n            const name = chart.plugin.name\n                .toLowerCase()\n                .replace(/[ \\t\\r\\n\\/]*/g, \"\");\n            const plugin_name = `perspective-viewer-d3fc-${name}`;\n            customElements.define(\n                plugin_name,\n                class extends HTMLElement {\n                    constructor() {\n                        super();\n                        this._chart = null;\n                        this._settings = null;\n                        this.render_warning = true;\n                    }\n\n                    connectedCallback() {\n                        if (!this._initialized) {\n                            this.attachShadow({mode: \"open\"});\n                            this.shadowRoot.innerHTML = `<style>${styleWithD3FC}</style>`;\n                            this.shadowRoot.innerHTML += `<div id=\"container\" class=\"chart\"></div>`;\n                            this._container =\n                                this.shadowRoot.querySelector(\".chart\");\n                            this._initialized = true;\n                        }\n                    }\n\n                    get name() {\n                        return chart.plugin.name;\n                    }\n\n                    get category() {\n                        return chart.plugin.category;\n                    }\n\n                    get select_mode() {\n                        return chart.plugin.selectMode || \"select\";\n                    }\n\n                    get min_config_columns() {\n                        return (\n                            chart.plugin.initial?.count ||\n                            DEFAULT_PLUGIN_SETTINGS.initial.count\n                        );\n                    }\n\n                    get config_column_names() {\n                        return (\n                            chart.plugin.initial?.names ||\n                            DEFAULT_PLUGIN_SETTINGS.initial.names\n                        );\n                    }\n\n                    // get initial() {\n                    //     return chart.plugin.initial\n                    //        || DEFAULT_PLUGIN_SETTINGS.initial;\n                    // }\n\n                    get max_cells() {\n                        return chart.plugin.max_cells || 4000;\n                    }\n\n                    set max_cells(x) {\n                        chart.plugin.max_cells = x;\n                    }\n\n                    get max_columns() {\n                        return chart.plugin.max_columns || 50;\n                    }\n\n                    set max_columns(x) {\n                        chart.plugin.max_columns = x;\n                    }\n\n                    async render() {\n                        var canvas = document.createElement(\"canvas\");\n                        var container =\n                            this.shadowRoot.querySelector(\"#container\");\n                        canvas.width = container.offsetWidth;\n                        canvas.height = container.offsetHeight;\n\n                        const context = canvas.getContext(\"2d\");\n                        context.fillStyle =\n                            window\n                                .getComputedStyle(this)\n                                .getPropertyValue(\"--plugin--background\") ||\n                            \"white\";\n                        context.fillRect(0, 0, canvas.width, canvas.height);\n                        const text_color = window\n                            .getComputedStyle(this)\n                            .getPropertyValue(\"color\");\n\n                        const svgs = Array.from(\n                            this.shadowRoot.querySelectorAll(\n                                \"svg:not(#dragHandles)\"\n                            )\n                        );\n\n                        for (const svg of svgs.reverse()) {\n                            var img = document.createElement(\"img\");\n                            // document.body.appendChild(img);\n                            img.width = svg.parentNode.offsetWidth;\n                            img.height = svg.parentNode.offsetHeight;\n\n                            // Pretty sure this is a chrome bug - `drawImage()` call\n                            // without this scales incorrectly.\n                            const new_svg = svg.cloneNode(true);\n                            if (!new_svg.hasAttribute(\"viewBox\")) {\n                                new_svg.setAttribute(\n                                    \"viewBox\",\n                                    `0 0 ${img.width} ${img.height}`\n                                );\n                            }\n\n                            new_svg.setAttribute(\n                                \"xmlns\",\n                                \"http://www.w3.org/2000/svg\"\n                            );\n\n                            for (const text of new_svg.querySelectorAll(\n                                \"text\"\n                            )) {\n                                text.setAttribute(\"fill\", text_color);\n                            }\n\n                            var xml = new XMLSerializer().serializeToString(\n                                new_svg\n                            );\n\n                            xml = xml.replace(/[^\\x00-\\x7F]/g, \"\");\n\n                            const done = new Promise((x, y) => {\n                                img.onload = x;\n                                img.onerror = y;\n                            });\n\n                            try {\n                                img.src = `data:image/svg+xml;base64,${btoa(\n                                    xml\n                                )}`;\n                                await done;\n                            } catch (e) {\n                                const done = new Promise((x, y) => {\n                                    img.onload = x;\n                                    img.onerror = y;\n                                });\n                                img.src = `data:image/svg+xml;utf8,${xml}`;\n                                await done;\n                            }\n\n                            context.drawImage(\n                                img,\n                                svg.parentNode.offsetLeft,\n                                svg.parentNode.offsetTop,\n                                img.width,\n                                img.height\n                            );\n                        }\n\n                        const canvases = Array.from(\n                            this.shadowRoot.querySelectorAll(\"canvas\")\n                        );\n\n                        for (const canvas of canvases.reverse()) {\n                            context.drawImage(\n                                canvas,\n                                canvas.parentNode.offsetLeft,\n                                canvas.parentNode.offsetTop,\n                                canvas.width / window.devicePixelRatio,\n                                canvas.height / window.devicePixelRatio\n                            );\n                        }\n\n                        return await new Promise(\n                            (x) => canvas.toBlob((blob) => x(blob)),\n                            \"image/png\"\n                        );\n                    }\n\n                    async draw(view, end_col, end_row) {\n                        if (!this.isConnected) {\n                            return;\n                        }\n\n                        this.config = await this.parentElement.save();\n                        await this.update(view, end_col, end_row, true);\n                    }\n\n                    async update(view, end_col, end_row, clear = false) {\n                        if (!this.isConnected) {\n                            return;\n                        }\n\n                        const viewer = this.parentElement;\n                        let jsonp, metadata;\n                        // const realValues =\n                        //     JSON.parse(viewer.getAttribute(\"columns\"));\n                        const realValues = this.config.columns;\n                        const leaves_only = chart.plugin.name !== \"Sunburst\";\n                        if (end_col && end_row) {\n                            jsonp = view.to_json({\n                                end_row,\n                                end_col,\n                                leaves_only,\n                            });\n                        } else if (end_col) {\n                            jsonp = view.to_json({end_col, leaves_only});\n                        } else if (end_row) {\n                            jsonp = view.to_json({end_row, leaves_only});\n                        } else {\n                            jsonp = view.to_json({leaves_only});\n                        }\n\n                        metadata = await Promise.all([\n                            viewer\n                                .getTable()\n                                .then((table) => table.schema(false)),\n                            view.expression_schema(false),\n                            view.schema(false),\n                            jsonp,\n                            view.get_config(),\n                        ]);\n                        let [\n                            table_schema,\n                            expression_schema,\n                            view_schema,\n                            json,\n                            config,\n                        ] = metadata;\n\n                        /**\n                         * Retrieve a tree axis column from the table and\n                         * expression schemas, returning a String type or\n                         * `undefined`.\n                         * @param {String} column a column name\n                         */\n                        const get_pivot_column_type = function (column) {\n                            let type = table_schema[column];\n                            if (!type) {\n                                type = expression_schema[column];\n                            }\n                            return type;\n                        };\n\n                        const {columns, group_by, split_by, filter} = config;\n                        const filtered =\n                            group_by.length > 0\n                                ? json.reduce(\n                                      (acc, col) => {\n                                          if (\n                                              col.__ROW_PATH__ &&\n                                              col.__ROW_PATH__.length ==\n                                                  group_by.length\n                                          ) {\n                                              acc.agg_paths.push(\n                                                  acc.aggs.slice()\n                                              );\n                                              acc.rows.push(col);\n                                          } else {\n                                              const len =\n                                                  col.__ROW_PATH__.filter(\n                                                      (x) => x !== undefined\n                                                  ).length;\n                                              acc.aggs[len] = col;\n                                              acc.aggs = acc.aggs.slice(\n                                                  0,\n                                                  len + 1\n                                              );\n                                          }\n                                          return acc;\n                                      },\n                                      {rows: [], aggs: [], agg_paths: []}\n                                  )\n                                : {rows: json};\n                        const dataMap = (col, i) =>\n                            !group_by.length\n                                ? {...col, __ROW_PATH__: [i]}\n                                : col;\n                        const mapped = filtered.rows.map(dataMap);\n\n                        let settings = {\n                            realValues,\n                            crossValues: group_by.map((r) => ({\n                                name: r,\n                                type: get_pivot_column_type(r),\n                            })),\n                            mainValues: columns.map((a) => ({\n                                name: a,\n                                type: view_schema[a],\n                            })),\n                            splitValues: split_by.map((r) => ({\n                                name: r,\n                                type: get_pivot_column_type(r),\n                            })),\n                            filter,\n                            data: mapped,\n                            agg_paths: filtered.agg_paths,\n                        };\n\n                        this._chart = chart;\n\n                        const handler = {\n                            set: (obj, prop, value) => {\n                                if (!EXCLUDED_SETTINGS.includes(prop)) {\n                                    this._container &&\n                                        this._container.dispatchEvent(\n                                            new Event(\n                                                \"perspective-plugin-update\",\n                                                {bubbles: true, composed: true}\n                                            )\n                                        );\n                                }\n                                obj[prop] = value;\n                                return true;\n                            },\n                        };\n\n                        this._settings = new Proxy(\n                            {...this._settings, ...settings},\n                            handler\n                        );\n\n                        // If only a right-axis Y axis remains, reset the alt\n                        // axis list to default.\n                        if (\n                            this._settings.splitMainValues &&\n                            this._settings.splitMainValues.length >=\n                                columns.length\n                        ) {\n                            this._settings.splitMainValues = [];\n                        }\n\n                        initialiseStyles(this._container, this._settings);\n\n                        if (clear) {\n                            this._container.innerHTML = \"\";\n                        }\n\n                        this._draw();\n\n                        await new Promise((resolve) =>\n                            requestAnimationFrame(resolve)\n                        );\n                    }\n\n                    async clear() {\n                        if (this._container) {\n                            this._container.innerHTML = \"\";\n                        }\n                    }\n\n                    _draw() {\n                        if (this._settings.data && this.isConnected) {\n                            const containerDiv = d3.select(this._container);\n                            const chartClass = `chart ${name}`;\n                            this._settings.size =\n                                this._container.getBoundingClientRect();\n\n                            if (this._settings.data.length > 0) {\n                                this._chart(\n                                    containerDiv.attr(\"class\", chartClass),\n                                    this._settings\n                                );\n                            } else {\n                                containerDiv.attr(\n                                    \"class\",\n                                    `${chartClass} disabled`\n                                );\n                            }\n                        }\n                    }\n\n                    /**\n                     * TODO we need to `clear()` here unnecessarily due to a bug in the tremap module which\n                     * causes non-cleared redraws duplicate column labels when calculating column name\n                     * resize/repositions - see `treemapLabel.js`.\n                     */\n                    async resize() {\n                        if (this.isConnected) {\n                            this._draw();\n                        }\n                    }\n\n                    async restyle(...args) {\n                        let settings = this._settings;\n                        if (settings) {\n                            delete settings[\"colorStyles\"];\n                            await this.draw(...args);\n                        }\n                    }\n\n                    async delete() {\n                        this._container.innerHTML = \"\";\n                    }\n\n                    getContainer() {\n                        return this._container;\n                    }\n\n                    save() {\n                        const settings = {...this._settings};\n                        EXCLUDED_SETTINGS.forEach((s) => {\n                            delete settings[s];\n                        });\n                        return settings;\n                    }\n\n                    restore(settings) {\n                        const new_settings = {};\n                        for (const name of EXCLUDED_SETTINGS) {\n                            new_settings[name] = this._settings?.[name];\n                        }\n                        this._settings = {...new_settings, ...settings};\n                        this._draw();\n                    }\n                }\n            );\n\n            customElements\n                .whenDefined(\"perspective-viewer\")\n                .then(() => register_element(plugin_name));\n        }\n    });\n}\n\nif (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {register} from \"../plugin/plugin.js\";\nregister(\"Y Scatter\");\n"],
  "mappings": "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",
  "names": []
}

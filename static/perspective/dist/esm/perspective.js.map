{
  "version": 3,
  "sources": ["../../src/js/config/settings.js", "../../src/js/config/index.js", "../../src/js/config/constants.js", "../../src/js/perspective.browser.js", "../../src/js/api/dispatch.js", "../../src/js/api/view_api.js", "../../src/js/utils.js", "../../src/js/api/table_api.js", "../../src/js/api/client.js", "../../src/js/websocket/client.js"],
  "sourcesContent": ["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n/**\n * The default settings which populate `perspective.config.js`.\n */\nmodule.exports.default = {\n    /**\n     * `types` are the type-specific configuration options.  Each key is the\n     * name of a perspective type; their values are configuration objects for\n     * that type.\n     */\n    types: {\n        float: {\n            /**\n             * Which filter operator should be the default when a column of this\n             * type is pivotted.\n             */\n            filter_operator: \"==\",\n\n            /**\n             * Which aggregate should be the default when a column of this type\n             * is pivotted.\n             */\n            aggregate: \"sum\",\n\n            /**\n             * The format object for this type.  Can be either an\n             * `toLocaleString()` `options` object for this type (or supertype),\n             * or a function which returns the formatted string for this type.\n             */\n            format: {\n                style: \"decimal\",\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n            },\n        },\n        string: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n        },\n        integer: {\n            filter_operator: \"==\",\n            aggregate: \"sum\",\n            format: {},\n        },\n        boolean: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n        },\n        datetime: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: \"numeric\",\n            },\n            null_value: -1,\n        },\n        date: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n            },\n            null_value: -1,\n        },\n    },\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst DEFAULT_CONFIG = require(\"./settings.js\").default;\n\nmodule.exports.get_types = function () {\n    return Object.keys(module.exports.get_config().types);\n};\n\nmodule.exports.get_type_config = function (type) {\n    const config = {};\n    if (module.exports.get_config().types[type]) {\n        Object.assign(config, module.exports.get_config().types[type]);\n    }\n    if (config.type) {\n        const props = module.exports.get_type_config(config.type);\n        Object.assign(props, config);\n        return props;\n    } else {\n        return config;\n    }\n};\n\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n\nfunction mergeDeep(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {[key]: {}});\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, {[key]: source[key]});\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}\n\nglobalThis.__PERSPECTIVE_CONFIG__ = undefined;\n\nmodule.exports.override_config = function (config) {\n    if (globalThis.__PERSPECTIVE_CONFIG__) {\n        console.warn(\"Config already initialized!\");\n    }\n    globalThis.__PERSPECTIVE_CONFIG__ = mergeDeep(DEFAULT_CONFIG, config);\n};\n\nmodule.exports.get_config = function get_config() {\n    if (!globalThis.__PERSPECTIVE_CONFIG__) {\n        globalThis.__PERSPECTIVE_CONFIG__ = mergeDeep(\n            DEFAULT_CONFIG,\n            globalThis.__TEMPLATE_CONFIG__ || {}\n        );\n    }\n    return globalThis.__PERSPECTIVE_CONFIG__;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport const DATA_TYPES = {\n    integer: \"integer\",\n    float: \"float\",\n    string: \"string\",\n    boolean: \"boolean\",\n    date: \"date\",\n    datetime: \"datetime\",\n    object: \"object\",\n};\n\nexport const CONFIG_ALIASES = {\n    row_pivot: \"group_by\",\n    \"row-pivot\": \"group_by\",\n    \"row-pivots\": \"group_by\",\n    col_pivot: \"split_by\",\n    col_pivots: \"split_by\",\n    column_pivot: \"split_by\",\n    \"column-pivot\": \"split_by\",\n    \"column-pivots\": \"split_by\",\n    filters: \"filter\",\n    sorts: \"sort\",\n};\n\nexport const CONFIG_VALID_KEYS = [\n    \"viewport\",\n    \"group_by\",\n    \"split_by\",\n    \"aggregates\",\n    \"columns\",\n    \"filter\",\n    \"sort\",\n    \"computed_columns\",\n    \"expressions\",\n    \"group_by_depth\",\n    \"split_by_depth\",\n    \"filter_op\",\n];\n\nconst NUMBER_AGGREGATES = [\n    \"any\",\n    \"avg\",\n    \"abs sum\",\n    \"count\",\n    \"distinct count\",\n    \"dominant\",\n    \"first by index\",\n    \"last by index\",\n    \"last minus first\",\n    \"last\",\n    \"high\",\n    \"join\",\n    \"low\",\n    \"high minus low\",\n    \"mean\",\n    \"median\",\n    \"pct sum parent\",\n    \"pct sum grand total\",\n    \"stddev\",\n    \"sum\",\n    \"sum abs\",\n    \"sum not null\",\n    \"unique\",\n    \"var\",\n];\n\nconst STRING_AGGREGATES = [\n    \"any\",\n    \"count\",\n    \"distinct count\",\n    \"distinct leaf\",\n    \"dominant\",\n    \"first by index\",\n    \"join\",\n    \"last by index\",\n    \"last\",\n    \"unique\",\n];\n\nconst BOOLEAN_AGGREGATES = [\n    \"any\",\n    \"count\",\n    \"distinct count\",\n    \"distinct leaf\",\n    \"dominant\",\n    \"first by index\",\n    \"last by index\",\n    \"last\",\n    \"unique\",\n];\n\nexport const SORT_ORDERS = [\n    \"none\",\n    \"asc\",\n    \"desc\",\n    \"col asc\",\n    \"col desc\",\n    \"asc abs\",\n    \"desc abs\",\n    \"col asc abs\",\n    \"col desc abs\",\n];\n\nexport const SORT_ORDER_IDS = [2, 0, 1, 0, 1, 3, 4, 3, 4];\n\nexport const TYPE_AGGREGATES = {\n    string: STRING_AGGREGATES,\n    float: NUMBER_AGGREGATES,\n    integer: NUMBER_AGGREGATES,\n    boolean: BOOLEAN_AGGREGATES,\n    datetime: STRING_AGGREGATES,\n    date: STRING_AGGREGATES,\n};\n\nexport const FILTER_OPERATORS = {\n    lessThan: \"<\",\n    greaterThan: \">\",\n    equals: \"==\",\n    lessThanOrEquals: \"<=\",\n    greaterThanOrEquals: \">=\",\n    doesNotEqual: \"!=\",\n    isNull: \"is null\",\n    isNotNull: \"is not null\",\n    isIn: \"in\",\n    isNotIn: \"not in\",\n    contains: \"contains\",\n    bitwiseAnd: \"&\",\n    bitwiseOr: \"|\",\n    and: \"and\",\n    or: \"or\",\n    beginsWith: \"begins with\",\n    endsWith: \"ends with\",\n    inRecent: \"in recent\",\n};\n\nconst BOOLEAN_FILTERS = [\n    FILTER_OPERATORS.bitwiseAnd,\n    FILTER_OPERATORS.bitwiseOr,\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.or,\n    FILTER_OPERATORS.and,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull,\n];\n\nconst NUMBER_FILTERS = [\n    FILTER_OPERATORS.lessThan,\n    FILTER_OPERATORS.greaterThan,\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.lessThanOrEquals,\n    FILTER_OPERATORS.greaterThanOrEquals,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull,\n];\n\nconst STRING_FILTERS = [\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.contains,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.isIn,\n    FILTER_OPERATORS.isNotIn,\n    FILTER_OPERATORS.beginsWith,\n    FILTER_OPERATORS.endsWith,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull,\n];\n\nconst DATETIME_FILTERS = [\n    FILTER_OPERATORS.lessThan,\n    FILTER_OPERATORS.greaterThan,\n    FILTER_OPERATORS.equals,\n    FILTER_OPERATORS.lessThanOrEquals,\n    FILTER_OPERATORS.greaterThanOrEquals,\n    FILTER_OPERATORS.doesNotEqual,\n    FILTER_OPERATORS.isNull,\n    FILTER_OPERATORS.isNotNull,\n    FILTER_OPERATORS.inRecent,\n];\n\nexport const COLUMN_SEPARATOR_STRING = \"|\";\n\nexport const TYPE_FILTERS = {\n    string: STRING_FILTERS,\n    float: NUMBER_FILTERS,\n    integer: NUMBER_FILTERS,\n    boolean: BOOLEAN_FILTERS,\n    datetime: DATETIME_FILTERS,\n    date: DATETIME_FILTERS,\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport * as defaults from \"./config/constants.js\";\nimport {get_config, get_type_config as _get_type_config} from \"./config\";\nimport {Client} from \"./api/client.js\";\nimport {WebSocketClient} from \"./websocket/client\";\n\nimport {override_config} from \"./config/index.js\";\nimport {Decompress} from \"fflate\";\n\nimport wasm_worker from \"@finos/perspective/src/js/perspective.worker.js\";\nimport wasm from \"@finos/perspective/dist/pkg/esm/perspective.cpp.wasm\";\n\n// eslint-disable-next-line max-len\nconst INLINE_WARNING = `Perspective has been compiled in \"inline\" mode.  While \\\nPerspective's runtime performance is not affected, you may see smaller assets \\\nsize and faster engine initial load time using \\\n\"@finos/perspective-webpack-plugin\" to build your application.\nhttps://perspective.finos.org/docs/md/js.html`;\n\nfunction is_gzip(buffer) {\n    return new Uint32Array(buffer.slice(0, 4))[0] == 559903;\n}\n\n/**\n * Singleton WASM file download cache.\n */\nconst _override = /* @__PURE__ */ (function () {\n    let _instance;\n    return function () {\n        if (!_instance) {\n            _instance = new (class {\n                async worker() {\n                    return await wasm_worker();\n                }\n\n                async wasm() {\n                    const _wasm = await wasm;\n\n                    let parts = [];\n                    let length = 0;\n                    const decompressor = new Decompress((chunk) => {\n                        if (chunk) {\n                            length += chunk.byteLength;\n                            parts.push(chunk);\n                        }\n                    });\n\n                    if (_wasm.buffer && _wasm.buffer instanceof ArrayBuffer) {\n                        console.warn(INLINE_WARNING);\n                        if (is_gzip(_wasm.buffer)) {\n                            decompressor.push(_wasm, true);\n                        } else {\n                            length = _wasm.byteLength;\n                            parts = [_wasm];\n                        }\n                    } else if (_wasm instanceof ArrayBuffer) {\n                        length = _wasm.byteLength;\n                        parts = [new Uint8Array(_wasm)];\n                    } else {\n                        const resp = await fetch(_wasm);\n                        const reader = resp.body.getReader();\n                        let state = 0;\n                        while (true) {\n                            const {value, done} = await reader.read();\n                            if (done) break;\n                            if (\n                                (state === 0 && is_gzip(value.buffer)) ||\n                                state === 1\n                            ) {\n                                state = 1;\n                                decompressor.push(value, done);\n                            } else {\n                                state = 2;\n                                length += value.byteLength;\n                                parts.push(value);\n                            }\n                        }\n                    }\n\n                    let offset = 0;\n                    const buffer = new Uint8Array(length);\n                    for (const part of parts) {\n                        buffer.set(part, offset);\n                        offset += part.byteLength;\n                    }\n\n                    this._wasm = buffer.buffer;\n                    return this._wasm;\n                }\n            })();\n        }\n\n        return _instance;\n    };\n})();\n\n/**\n * WebWorker extends Perspective's `worker` class and defines interactions using\n * the WebWorker API.\n *\n * This class serves as the client API for transporting messages to/from Web\n * Workers.\n */\nclass WebWorkerClient extends Client {\n    constructor(config) {\n        if (config) {\n            override_config(config);\n        }\n        super();\n        this.register();\n    }\n\n    /**\n     * When the worker is created, load either the ASM or WASM bundle depending\n     * on WebAssembly compatibility.  Don't use transferrable so multiple\n     * workers can be instantiated.\n     */\n    async register() {\n        let _worker;\n        const msg = {cmd: \"init\", config: get_config()};\n        if (typeof WebAssembly === \"undefined\") {\n            throw new Error(\"WebAssembly not supported.\");\n        } else {\n            [_worker, msg.buffer] = await Promise.all([\n                _override().worker(),\n                _override().wasm(),\n            ]);\n        }\n        for (var key in this._worker) {\n            _worker[key] = this._worker[key];\n        }\n        this._worker = _worker;\n        this._worker.addEventListener(\"message\", this._handle.bind(this));\n        this._worker.postMessage(msg);\n        this._detect_transferable();\n    }\n\n    /**\n     * Send a message from the worker, using transferables if necessary.\n     *\n     * @param {*} msg\n     */\n    send(msg) {\n        if (\n            this._worker.transferable &&\n            msg.args &&\n            msg.args[0] instanceof ArrayBuffer\n        ) {\n            this._worker.postMessage(msg, [msg.args[0]]);\n        } else {\n            this._worker.postMessage(msg);\n        }\n    }\n\n    terminate() {\n        this._worker.terminate();\n        this._worker = undefined;\n    }\n\n    _detect_transferable() {\n        var ab = new ArrayBuffer(1);\n        this._worker.postMessage(ab, [ab]);\n        this._worker.transferable = ab.byteLength === 0;\n        if (!this._worker.transferable) {\n            console.warn(\"Transferable support not detected\");\n        } else {\n            console.debug(\"Transferable support detected\");\n        }\n    }\n}\n\n/******************************************************************************\n *\n * Web Worker Singleton\n *\n */\n\nconst WORKER_SINGLETON = /* @__PURE__ */ (function () {\n    let __WORKER__, __CONFIG__;\n    return {\n        getInstance: function (config) {\n            if (__WORKER__ === undefined) {\n                __WORKER__ = new WebWorkerClient(config);\n            }\n            const config_str = JSON.stringify(config);\n            if (__CONFIG__ && config_str !== __CONFIG__) {\n                throw new Error(\n                    `Configuration object for shared_worker() has changed - this is probably a bug in your application.`\n                );\n            }\n            __CONFIG__ = config_str;\n            return __WORKER__;\n        },\n    };\n})();\n\nexport const get_type_config = _get_type_config;\n\nexport function override(x) {\n    return _override().set(x);\n}\n\n/**\n * Create a new WebWorkerClient instance.\n * @param {*} [config] An optional perspective config object override\n */\nexport function worker(config) {\n    return new WebWorkerClient(config);\n}\n\n/**\n * Create a new WebSocketClient instance. The `url` parameter is provided,\n * load the worker at `url` using a WebSocket. s\n * @param {*} url Defaults to `window.location.origin`\n * @param {*} [config] An optional perspective config object override\n */\nexport function websocket(url = window.location.origin.replace(\"http\", \"ws\")) {\n    return new WebSocketClient(new WebSocket(url));\n}\n\n/**\n * Return the shared worker, the original WebWorkerClient created during module\n * load.\n * @param {*} [config] An optional perspective config object override\n */\nexport function shared_worker(config) {\n    return WORKER_SINGLETON.getInstance(config);\n}\n\nexport default {\n    override,\n    worker,\n    websocket,\n    shared_worker,\n    ...Object.keys(defaults),\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst __CALLBACK_CACHE__ = new WeakMap();\nlet __CALLBACK_INDEX__ = 0;\n\n/**\n * Unbind a listener to an event.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function unsubscribe(method, cmd) {\n    return function () {\n        let resolve;\n        let reject = () => {};\n        let args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === \"function\") {\n                resolve = args.splice(i, 1)[0];\n            }\n        }\n        const callback_id = __CALLBACK_CACHE__.get(resolve);\n        __CALLBACK_CACHE__.delete(resolve);\n        let msg = {\n            cmd: cmd || \"view_method\",\n            name: this._name,\n            method: method,\n            args: args,\n            subscribe: true,\n            callback_id,\n        };\n        this._worker.post(msg, resolve, reject);\n        this._worker.unsubscribe(cmd, resolve);\n    };\n}\n\n/**\n * Bind a listener to an event.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function subscribe(method, cmd) {\n    return function () {\n        let resolve;\n        let reject = () => {};\n        let args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === \"function\") {\n                resolve = args.splice(i, 1)[0];\n            }\n        }\n        __CALLBACK_INDEX__++;\n        __CALLBACK_CACHE__.set(resolve, __CALLBACK_INDEX__);\n        let msg = {\n            cmd: cmd || \"view_method\",\n            name: this._name,\n            method: method,\n            args: args,\n            subscribe: true,\n            callback_id: __CALLBACK_INDEX__,\n        };\n        this._worker.post(msg, resolve, reject, true);\n    };\n}\n\n/**\n * Add a method call to the queue, preparing it for execution.\n *\n * Returns a bound function that calls the desired method on the server.\n *\n * @param {*} method\n * @param {*} cmd\n */\nexport function async_queue(method, cmd) {\n    return function () {\n        var args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        return new Promise(\n            function (resolve, reject) {\n                var msg = {\n                    cmd: cmd || \"view_method\",\n                    name: this._name,\n                    method: method,\n                    args: args,\n                    subscribe: false,\n                };\n                this._worker.post(msg, resolve, reject);\n            }.bind(this)\n        );\n    };\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {subscribe, unsubscribe, async_queue} from \"./dispatch.js\";\n\n/**\n * Construct a proxy for the view object by creating a \"view\" message and\n * sending it through the worker.\n *\n * @param {*} worker\n * @param {*} table_name\n * @param {*} config\n */\nexport function view(worker, table_name, config) {\n    return new Promise((resolve, reject) => {\n        this._worker = worker;\n        this._name = Math.random() + \"\";\n\n        this._worker.post(\n            {\n                cmd: \"view\",\n                view_name: this._name,\n                table_name: table_name,\n                config: config,\n            },\n            () => {\n                // Resolve the Promise with this function, which is a proxy\n                // view that dispatches all view methods to the backend, i.e.\n                // a Web Worker or a Python/Node Perspective server. Because\n                // arrow functions automatically capture `this` from the\n                // surrounding scope, there is no need to explicitly bind the\n                // resolving value to `this`.\n                resolve(this);\n            },\n            reject\n        );\n\n        if (\n            this._worker._initialized === true &&\n            !this._worker._features?.wait_for_response\n        ) {\n            resolve(this);\n        }\n    });\n}\n\n/**\n * Create a reference to a view located on `worker` for use by remote clients.\n *\n * @param {worker} worker the Web Worker at which the view is located.\n * @param {String} name a unique name for the view.\n */\nexport function proxy_view(worker, name) {\n    this._worker = worker;\n    this._name = name;\n}\n\nproxy_view.prototype = view.prototype;\n\n// Send view methods that do not create new objects (getters, setters etc.) to\n// the queue for processing.\n\nview.prototype.get_config = async_queue(\"get_config\");\n\nview.prototype.get_min_max = async_queue(\"get_min_max\");\n\nview.prototype.to_json = async_queue(\"to_json\");\n\nview.prototype.to_arrow = async_queue(\"to_arrow\");\n\nview.prototype.to_columns = async_queue(\"to_columns\");\n\nview.prototype.to_csv = async_queue(\"to_csv\");\n\nview.prototype.schema = async_queue(\"schema\");\n\nview.prototype.expression_schema = async_queue(\"expression_schema\");\n\nview.prototype.column_paths = async_queue(\"column_paths\");\n\nview.prototype.num_columns = async_queue(\"num_columns\");\n\nview.prototype.num_rows = async_queue(\"num_rows\");\n\nview.prototype.set_depth = async_queue(\"set_depth\");\n\nview.prototype.get_row_expanded = async_queue(\"get_row_expanded\");\n\nview.prototype.expand = async_queue(\"expand\");\n\nview.prototype.collapse = async_queue(\"collapse\");\n\nview.prototype.delete = async_queue(\"delete\");\n\nview.prototype.col_to_js_typed_array = async_queue(\"col_to_js_typed_array\");\n\nview.prototype.on_update = subscribe(\"on_update\", \"view_method\", true);\n\nview.prototype.remove_update = unsubscribe(\n    \"remove_update\",\n    \"view_method\",\n    true\n);\n\nview.prototype.on_delete = subscribe(\"on_delete\", \"view_method\", true);\n\nview.prototype.remove_delete = unsubscribe(\n    \"remove_delete\",\n    \"view_method\",\n    true\n);\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n/**\n * Gets human-readable types for a column\n * @private\n * @returns {string}\n */\nexport function get_column_type(val) {\n    if (val >= 1 && val <= 8) {\n        return \"integer\";\n    } else if (val === 19) {\n        return \"string\";\n    } else if (val === 10 || val === 9) {\n        return \"float\";\n    } else if (val === 11) {\n        return \"boolean\";\n    } else if (val === 12) {\n        return \"datetime\";\n    } else if (val === 13) {\n        return \"date\";\n    } else {\n        console.warn(\n            `Unknown type for value ${val} with JS type ${typeof val}`\n        );\n    }\n}\n\n/**\n * Bind all methods in a class to the class instance.  It is sad that this is\n * necessary.\n *\n * @export\n * @param {*} self\n */\nexport function bindall(self) {\n    let obj = self;\n    do {\n        for (const key of Object.getOwnPropertyNames(obj)) {\n            const value = self[key];\n            if (key !== \"constructor\" && typeof value === \"function\") {\n                self[key] = value.bind(self);\n            }\n        }\n    } while ((obj = obj !== Object && Object.getPrototypeOf(obj)));\n}\n\n/**\n * Detect Node.js.\n *\n * Returns\n * -------\n * True if the current script is running in Node.js.\n */\nexport function detectNode() {\n    return typeof window === \"undefined\";\n}\n\n/**\n * Detect Chrome.\n *\n * Returns\n * -------\n * Detect if the current script is running in Chrome.\n */\nexport function detectChrome() {\n    var isChromium = window.chrome,\n        winNav = window.navigator,\n        vendorName = winNav.vendor,\n        isOpera = winNav.userAgent.indexOf(\"OPR\") > -1,\n        isIEedge = winNav.userAgent.indexOf(\"Edge\") > -1,\n        isIOSChrome = winNav.userAgent.match(\"CriOS\");\n\n    if (isIOSChrome) {\n        return true;\n    } else if (\n        isChromium !== null &&\n        typeof isChromium !== \"undefined\" &&\n        vendorName === \"Google Inc.\" &&\n        isOpera === false &&\n        isIEedge === false\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// https://github.com/kripken/emscripten/issues/6042\nexport function detect_iphone() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\n\n/**\n * String.includes() polyfill\n */\nif (!String.prototype.includes) {\n    String.prototype.includes = function (search, start) {\n        if (typeof start !== \"number\") {\n            start = 0;\n        }\n\n        if (start + search.length > this.length) {\n            return false;\n        } else {\n            return this.indexOf(search, start) !== -1;\n        }\n    };\n}\n\n/* eslint-disable-next-line max-len */\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\nif (!Array.prototype.includes) {\n    Object.defineProperty(Array.prototype, \"includes\", {\n        value: function (searchElement, fromIndex) {\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            // 1. Let O be ? ToObject(this value).\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If len is 0, return false.\n            if (len === 0) {\n                return false;\n            }\n\n            // 4. Let n be ? ToInteger(fromIndex). (If fromIndex is undefined,\n            //    this step produces the value 0.)\n            var n = fromIndex | 0;\n\n            // 5. If n \u2265 0, then a. Let k be n.\n            // 6. Else n < 0, a. Let k be len + n. b. If k < 0, let k be 0.\n            var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n            function sameValueZero(x, y) {\n                return (\n                    x === y ||\n                    (typeof x === \"number\" &&\n                        typeof y === \"number\" &&\n                        isNaN(x) &&\n                        isNaN(y))\n                );\n            }\n\n            // 7. Repeat, while k < len\n            while (k < len) {\n                // a. Let elementK be the result of ? Get(O, ! ToString(k)). b.\n                // If SameValueZero(searchElement, elementK) is true, return\n                // true.\n                if (sameValueZero(o[k], searchElement)) {\n                    return true;\n                }\n                // c. Increase k by 1.\n                k++;\n            }\n\n            // 8. Return false\n            return false;\n        },\n    });\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {unsubscribe, subscribe, async_queue} from \"./dispatch.js\";\nimport {view} from \"./view_api.js\";\nimport {bindall} from \"../utils.js\";\n\n/**\n * Construct a proxy for the table object by creating a \"table\" message and\n * sending it through the worker.\n *\n * @param {*} worker\n * @param {*} data\n * @param {*} options\n */\nexport function table(worker, data, options) {\n    return new Promise((resolve, reject) => {\n        this._worker = worker;\n        this._name = options.name || Math.random() + \"\";\n\n        bindall(this);\n\n        if (data.to_arrow) {\n            this._worker.post({\n                cmd: \"table\",\n                name: this._name,\n                args: [],\n                options: options || {},\n            });\n            data.to_arrow().then((arrow) => {\n                this._worker.post(\n                    {\n                        cmd: \"table\",\n                        name: this._name,\n                        args: [arrow],\n                        options: options || {},\n                    },\n                    () => {\n                        data.on_update(\n                            (updated) => {\n                                this.update(updated.delta);\n                            },\n                            {mode: \"row\"}\n                        );\n                        resolve(this);\n                    },\n                    reject\n                );\n            });\n        } else {\n            this._worker.post(\n                {\n                    cmd: \"table\",\n                    name: this._name,\n                    args: [data],\n                    options: options || {},\n                },\n                () => {\n                    resolve(this);\n                },\n                reject\n            );\n        }\n\n        if (\n            this._worker._initialized === true &&\n            !this._worker._features?.wait_for_response\n        ) {\n            resolve(this);\n        }\n    });\n}\n\ntable.prototype.type = \"table\";\n\n/**\n * Create a reference to a Perspective table at `worker` for use by remote\n * clients.\n *\n * @param {worker} worker the Web Worker at which the table is located.\n * @param {String} name a unique name for the table.\n */\nexport function proxy_table(worker, name) {\n    this._worker = worker;\n    this._name = name;\n}\n\nproxy_table.prototype = table.prototype;\n\n// Dispatch table methods that create new objects to the worker\ntable.prototype.view = function (config) {\n    return new view(this._worker, this._name, config);\n};\n\n// Dispatch table methods that do not create new objects (getters, setters etc.)\n// to the queue for processing.\ntable.prototype.get_index = async_queue(\"get_index\", \"table_method\");\n\ntable.prototype.get_limit = async_queue(\"get_limit\", \"table_method\");\n\ntable.prototype.make_port = async_queue(\"make_port\", \"table_method\");\n\ntable.prototype.remove_port = async_queue(\"remove_port\", \"table_method\");\n\ntable.prototype.schema = async_queue(\"schema\", \"table_method\");\n\ntable.prototype.validate_expressions = async_queue(\n    \"validate_expressions\",\n    \"table_method\"\n);\n\ntable.prototype.is_valid_filter = async_queue(\n    \"is_valid_filter\",\n    \"table_method\"\n);\n\ntable.prototype.size = async_queue(\"size\", \"table_method\");\n\ntable.prototype.columns = async_queue(\"columns\", \"table_method\");\n\ntable.prototype.clear = async_queue(\"clear\", \"table_method\");\n\ntable.prototype.replace = async_queue(\"replace\", \"table_method\");\n\ntable.prototype.delete = async_queue(\"delete\", \"table_method\");\n\ntable.prototype.on_delete = subscribe(\"on_delete\", \"table_method\", true);\n\ntable.prototype.remove = async_queue(\"remove\", \"table_method\");\n\ntable.prototype.remove_delete = unsubscribe(\n    \"remove_delete\",\n    \"table_method\",\n    true\n);\n\ntable.prototype.update = function (data, options) {\n    return new Promise((resolve, reject) => {\n        this._worker.post(\n            {\n                name: this._name,\n                cmd: \"table_method\",\n                method: \"update\",\n                args: [data, options || {}],\n            },\n            resolve,\n            reject,\n            false\n        );\n    });\n};\n\ntable.prototype.execute = function (f) {\n    this._worker.post({\n        cmd: \"table_execute\",\n        name: this._name,\n        f: f.toString(),\n    });\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2019, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport {table, proxy_table} from \"./table_api.js\";\nimport {bindall} from \"../utils.js\";\n\n/**\n * Perspective's worker API handles and processes asynchronous messages,\n * interfacing with the Perspective host class.  Child classes must implement\n * the `send()` interface, which defines how messages are dispatched in\n * different contexts.  `handlers` is a dictionary of resolve/reject callbacks\n * for each method the worker receives.\n *\n * @export\n */\nexport class Client {\n    constructor() {\n        this._initialized = false;\n        this._worker = {\n            initialized: {value: false},\n            transferable: false,\n            msg_id: 0,\n            handlers: {},\n            messages: [],\n        };\n        bindall(this);\n    }\n\n    /**\n     * Remove a listener for a Perspective-generated event.\n     */\n    unsubscribe(cmd, handler) {\n        for (let key of Object.keys(this._worker.handlers)) {\n            if (this._worker.handlers[key].resolve === handler) {\n                delete this._worker.handlers[key];\n            }\n        }\n    }\n\n    /**\n     * Send a message to the server.\n     */\n    post(msg, resolve, reject, keep_alive = false) {\n        ++this._worker.msg_id;\n        if (resolve || reject) {\n            this._worker.handlers[this._worker.msg_id] = {\n                resolve,\n                reject,\n                keep_alive,\n            };\n        }\n        msg.id = this._worker.msg_id;\n        if (this._worker.initialized.value) {\n            this.send(msg);\n        } else {\n            this._worker.messages.push(() => {\n                this.send(msg);\n\n                if (\n                    (msg.cmd === \"table\" || msg.cmd === \"view\") &&\n                    !this._features?.wait_for_response &&\n                    resolve\n                ) {\n                    resolve();\n                }\n            });\n        }\n    }\n\n    /**\n     * Snapshots memory usage from the WebWorker or Node.js process, with the\n     * addition of `wasmHeap` Emscripten's linear memory\n     * @async\n     * @returns {MemoryUsage}\n     */\n    async memory_usage() {\n        return await new Promise((resolve, reject) => {\n            this.post({cmd: \"memory_usage\"}, resolve, reject);\n        });\n    }\n\n    initialize_profile_thread() {\n        if (this._worker.initialized.value) {\n            this.send({id: -1, cmd: \"init_profile_thread\"});\n        } else {\n            this._worker.messages.push(() =>\n                this.send({id: -1, cmd: \"init_profile_thread\"})\n            );\n        }\n    }\n\n    /**\n     * Must be implemented in order to transport commands to the server.\n     */\n    send() {\n        throw new Error(\"send() not implemented\");\n    }\n\n    /**\n     * Given the name of a table that is hosted on the server (e.g. using\n     * `perspective-python` or `perspective` in NodeJS), return a `table`\n     * instance that sends all operations and instructions to the `table` on the\n     * server.\n     *\n     * @param {string} name\n     */\n    async open_table(name) {\n        return new proxy_table(this, name);\n    }\n\n    /**\n     * Receive a message from the server, and resolve/reject the promise that\n     * is awaiting the content of the message.\n     */\n    _handle(e) {\n        if (!this._worker.initialized.value) {\n            if (\n                !this._initialized &&\n                typeof document !== \"undefined\" &&\n                document &&\n                typeof window !== undefined &&\n                window\n            ) {\n                try {\n                    const event = document.createEvent(\"Event\");\n                    event.initEvent(\"perspective-ready\", false, true);\n                    window.dispatchEvent(event);\n                } catch (e) {}\n                this._initialized = true;\n            }\n\n            const msgs = this._worker.messages;\n            this._worker.initialized.value = true;\n            this._worker.messages = [];\n\n            // If the `data` attribute of the init message is set, then\n            // set the `features` dictionary with the flags from the server.\n            if (e.data?.data) {\n                this._features = {};\n\n                for (const feature of e.data.data) {\n                    this._features[feature] = true;\n                }\n            }\n\n            if (msgs) {\n                for (const m in msgs) {\n                    if (msgs.hasOwnProperty(m)) {\n                        msgs[m]();\n                    }\n                }\n            }\n        }\n\n        if (e.data.id) {\n            const handler = this._worker.handlers[e.data.id];\n\n            if (handler) {\n                if (e.data.error) {\n                    handler.reject(e.data.error);\n                } else {\n                    handler.resolve(e.data.data);\n                }\n\n                if (!handler.keep_alive) {\n                    delete this._worker.handlers[e.data.id];\n                }\n            }\n        }\n    }\n\n    table(data, options) {\n        return new table(this, data, options || {});\n    }\n\n    terminate() {\n        this._worker.terminate();\n        this._worker = undefined;\n    }\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport {Client} from \"../api/client.js\";\n\n// Initiate a `ping` to the server every 30 seconds\nconst PING_TIMEOUT = 30000;\nexport class WebSocketClient extends Client {\n    constructor(ws) {\n        super();\n        this._ws = ws;\n        this._ws.binaryType = \"arraybuffer\";\n        this._full_binary;\n        this._total_chunk_length = 0;\n        this._pending_binary_length = 0;\n\n        this._ws.onopen = () => {\n            this.send({\n                id: -1,\n                cmd: \"init\",\n            });\n        };\n\n        const ping = () => {\n            this._ws.send(\"ping\");\n            setTimeout(ping, PING_TIMEOUT);\n        };\n\n        setTimeout(ping, PING_TIMEOUT);\n\n        this._ws.onmessage = (msg) => {\n            if (msg.data === \"pong\") {\n                return;\n            }\n\n            if (this._pending_binary) {\n                // Process a binary being sent by the server, which\n                // can decide how many chunks to send and the size of each\n                // chunk.\n                let binary_msg = msg.data;\n\n                this._full_binary.set(\n                    new Uint8Array(binary_msg),\n                    this._total_chunk_length\n                );\n                this._total_chunk_length += binary_msg.byteLength;\n\n                // Use the total length of the binary from the pre-message\n                // to decide when to stop waiting for new chunks from the\n                // server.\n                if (this._total_chunk_length === this._pending_binary_length) {\n                    // Chunking is complete and the binary has been received\n                    // in full.\n                    binary_msg = this._full_binary.buffer;\n                } else {\n                    // Wait for another chunk.\n                    return;\n                }\n\n                let result = {\n                    data: {\n                        id: this._pending_binary,\n                        data: binary_msg,\n                    },\n                };\n\n                // make sure on_update callbacks are called with a `port_id`\n                // AND the transferred binary.\n                if (this._pending_port_id !== undefined) {\n                    const new_data_with_port_id = {\n                        port_id: this._pending_port_id,\n                        delta: binary_msg,\n                    };\n                    result.data.data = new_data_with_port_id;\n                }\n\n                // Send the joined message to the client for handling.\n                this._handle(result);\n\n                // Reset flags to end special message flow.\n                delete this._pending_binary;\n                delete this._pending_binary_length;\n                delete this._pending_port_id;\n\n                this._total_chunk_length = 0;\n                this._full_binary = null;\n            } else {\n                msg = JSON.parse(msg.data);\n\n                // If the message has `binary_length` set,the worker expects the\n                // next message to be a binary message. This sets the\n                // `_pending_binary` flag, which triggers a special handler for\n                // the ArrayBuffer containing binary data.\n                if (msg.binary_length) {\n                    this._pending_binary = msg.id;\n                    this._pending_binary_length = msg.binary_length;\n\n                    // Check whether the message also contains a `port_id`,\n                    // indicating that we are in an `on_update` callback and\n                    // the pending binary needs to be joined with the port_id\n                    // for on_update handlers to work properly.\n                    if (msg.data && msg.data.port_id !== undefined) {\n                        this._pending_port_id = msg.data.port_id;\n                    }\n\n                    // Create an empty ArrayBuffer to hold the binary, as it\n                    // will be sent in n >= 1 chunks.\n                    this._full_binary = new Uint8Array(\n                        this._pending_binary_length\n                    );\n                } else {\n                    this._handle({\n                        data: msg,\n                    });\n                }\n            }\n        };\n    }\n\n    /**\n     * Send a message to the server, checking whether the arguments contain an\n     * ArrayBuffer.\n     *\n     * @param {Object} msg a message to send to the remote. If the `args`\n     * param contains an ArrayBuffer, two messages will be sent - a pre-message\n     * with the `binary_length` flag set to true, and a second message\n     * containing the ArrayBuffer. This allows for transport of metadata\n     * alongside an ArrayBuffer, and the pattern should be implemented by the\n     * receiver.\n     */\n    send(msg) {\n        if (\n            msg.args &&\n            msg.args.length > 0 &&\n            msg.args[0] instanceof ArrayBuffer &&\n            msg.args[0].byteLength !== undefined\n        ) {\n            const pre_msg = msg;\n            msg.binary_length = msg.args[0].byteLength;\n            this._ws.send(JSON.stringify(pre_msg));\n            this._ws.send(msg.args[0]);\n            return;\n        }\n        this._ws.send(JSON.stringify(msg));\n    }\n\n    terminate() {\n        return new Promise((resolve) => {\n            this._ws.onclose = resolve;\n            this._ws.close();\n        });\n    }\n}\n"],
  "mappings": "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",
  "names": []
}

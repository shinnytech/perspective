{
  "version": 3,
  "sources": ["../../../perspective/src/js/config/settings.js", "../../../perspective/src/js/config/index.js", "../../src/js/plugin.js", "../../src/js/regular_table_handlers.js", "../../src/js/cell_flash.js", "../../src/js/sorting.js", "../../src/js/plugin_menu.js", "../../src/js/color_utils.js", "../../src/js/getCellConfig.js", "../../src/js/row_selection.js", "../../src/js/click.js", "../../src/js/editing.js"],
  "sourcesContent": ["/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n/**\n * The default settings which populate `perspective.config.js`.\n */\nmodule.exports.default = {\n    /**\n     * `types` are the type-specific configuration options.  Each key is the\n     * name of a perspective type; their values are configuration objects for\n     * that type.\n     */\n    types: {\n        float: {\n            /**\n             * Which filter operator should be the default when a column of this\n             * type is pivotted.\n             */\n            filter_operator: \"==\",\n\n            /**\n             * Which aggregate should be the default when a column of this type\n             * is pivotted.\n             */\n            aggregate: \"sum\",\n\n            /**\n             * The format object for this type.  Can be either an\n             * `toLocaleString()` `options` object for this type (or supertype),\n             * or a function which returns the formatted string for this type.\n             */\n            format: {\n                style: \"decimal\",\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n            },\n        },\n        string: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n        },\n        integer: {\n            filter_operator: \"==\",\n            aggregate: \"sum\",\n            format: {},\n        },\n        boolean: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n        },\n        datetime: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                second: \"numeric\",\n            },\n            null_value: -1,\n        },\n        date: {\n            filter_operator: \"==\",\n            aggregate: \"count\",\n            format: {\n                week: \"numeric\",\n                year: \"numeric\",\n                month: \"numeric\",\n                day: \"numeric\",\n            },\n            null_value: -1,\n        },\n    },\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst DEFAULT_CONFIG = require(\"./settings.js\").default;\n\nmodule.exports.get_types = function () {\n    return Object.keys(module.exports.get_config().types);\n};\n\nmodule.exports.get_type_config = function (type) {\n    const config = {};\n    if (module.exports.get_config().types[type]) {\n        Object.assign(config, module.exports.get_config().types[type]);\n    }\n    if (config.type) {\n        const props = module.exports.get_type_config(config.type);\n        Object.assign(props, config);\n        return props;\n    } else {\n        return config;\n    }\n};\n\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n\nfunction mergeDeep(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {[key]: {}});\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, {[key]: source[key]});\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n}\n\nglobalThis.__PERSPECTIVE_CONFIG__ = undefined;\n\nmodule.exports.override_config = function (config) {\n    if (globalThis.__PERSPECTIVE_CONFIG__) {\n        console.warn(\"Config already initialized!\");\n    }\n    globalThis.__PERSPECTIVE_CONFIG__ = mergeDeep(DEFAULT_CONFIG, config);\n};\n\nmodule.exports.get_config = function get_config() {\n    if (!globalThis.__PERSPECTIVE_CONFIG__) {\n        globalThis.__PERSPECTIVE_CONFIG__ = mergeDeep(\n            DEFAULT_CONFIG,\n            globalThis.__TEMPLATE_CONFIG__ || {}\n        );\n    }\n    return globalThis.__PERSPECTIVE_CONFIG__;\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport \"regular-table\";\n\nimport {\n    createModel,\n    configureRegularTable,\n    formatters,\n} from \"./regular_table_handlers.js\";\nimport MATERIAL_STYLE from \"../less/regular_table.less\";\nimport TOOLBAR_STYLE from \"../less/toolbar.less\";\nimport {configureRowSelectable, deselect} from \"./row_selection.js\";\nimport {configureClick} from \"./click.js\";\nimport {configureEditable} from \"./editing.js\";\nimport {configureSortable} from \"./sorting.js\";\nimport {PLUGIN_SYMBOL, make_color_record} from \"./plugin_menu.js\";\n\nexport class PerspectiveViewerDatagridPluginElement extends HTMLElement {\n    constructor() {\n        super();\n        this.datagrid = document.createElement(\"regular-table\");\n        this.datagrid.formatters = formatters;\n        this._is_scroll_lock = true;\n    }\n\n    connectedCallback() {\n        if (!this._toolbar) {\n            this._toolbar = document.createElement(\n                \"perspective-viewer-datagrid-toolbar\"\n            );\n\n            this._toolbar.setAttribute(\"slot\", \"plugin-settings\");\n            this._toolbar.attachShadow({mode: \"open\"});\n            this._toolbar.shadowRoot.innerHTML = `\n                <style>\n                    ${TOOLBAR_STYLE}\n                </style>\n                <div id=\"toolbar\">\n                    <span id=\"scroll_lock\" class=\"lock-scroll button\"><span>Align Scroll</span></span>\n                    <span id=\"edit_mode\" class=\"button\"><span>Read Only</span></span>\n                </div>\n            `;\n\n            this._scroll_lock =\n                this._toolbar.shadowRoot.querySelector(\"#scroll_lock\");\n            this._scroll_lock.addEventListener(\"click\", () =>\n                this._toggle_scroll_lock()\n            );\n\n            this._edit_mode =\n                this._toolbar.shadowRoot.querySelector(\"#edit_mode\");\n\n            this._edit_mode.addEventListener(\"click\", () => {\n                this._toggle_edit_mode();\n                this.datagrid.draw();\n                this.parentElement.dispatchEvent(\n                    new Event(\"perspective-config-update\")\n                );\n            });\n        }\n\n        this.parentElement.appendChild(this._toolbar);\n    }\n\n    disconnectedCallback() {\n        this._toolbar.parentElement.removeChild(this._toolbar);\n    }\n\n    _toggle_edit_mode(force = undefined) {\n        if (typeof force === \"undefined\") {\n            force = !this._is_edit_mode;\n        }\n\n        this._is_edit_mode = force;\n        this.classList.toggle(\"editable\", force);\n        if (this._edit_mode !== undefined) {\n            this._edit_mode.classList.toggle(\"editable\", force);\n            if (force) {\n                this._edit_mode.children[0].textContent = \"Editable\";\n            } else {\n                this._edit_mode.children[0].textContent = \"Read Only\";\n            }\n        }\n    }\n\n    _toggle_scroll_lock(force = undefined) {\n        if (typeof force === \"undefined\") {\n            force = !this._is_scroll_lock;\n        }\n\n        this._is_scroll_lock = force;\n        this.classList.toggle(\"sub-cell-scroll-enabled\", !force);\n        if (this._scroll_lock !== undefined) {\n            this._scroll_lock.classList.toggle(\"lock-scroll\", force);\n            if (!force) {\n                this._scroll_lock.children[0].textContent = \"Free Scroll\";\n            } else {\n                this._scroll_lock.children[0].textContent = \"Align Scroll\";\n            }\n        }\n    }\n\n    async activate(view) {\n        let viewer = this.parentElement;\n        let table = await viewer.getTable(true);\n        if (!this._initialized) {\n            this.innerHTML = \"\";\n            this.appendChild(this.datagrid);\n            this.model = await createModel(this.datagrid, table, view);\n            configureRegularTable(this.datagrid, this.model);\n            await configureRowSelectable.call(\n                this.model,\n                this.datagrid,\n                viewer\n            );\n            await configureClick.call(this.model, this.datagrid, viewer);\n            await configureEditable.call(this.model, this.datagrid, viewer);\n            await configureSortable.call(this.model, this.datagrid, viewer);\n            this._initialized = true;\n        } else {\n            await createModel(this.datagrid, table, view, this.model);\n        }\n    }\n\n    get name() {\n        return \"Datagrid\";\n    }\n\n    get category() {\n        return \"Basic\";\n    }\n\n    get select_mode() {\n        return \"toggle\";\n    }\n\n    get min_config_columns() {\n        return undefined;\n    }\n\n    get config_column_names() {\n        return undefined;\n    }\n\n    async draw(view) {\n        if (this.parentElement) {\n            await this.activate(view);\n        }\n\n        if (!this.isConnected || this.offsetParent == null) {\n            return;\n        }\n\n        const old_sizes = this._save_column_size_overrides();\n        let viewer = this.parentElement;\n        const draw = this.datagrid.draw({invalid_columns: true});\n        if (!this.model._preserve_focus_state) {\n            this.datagrid.scrollTop = 0;\n            this.datagrid.scrollLeft = 0;\n            deselect(this.datagrid, viewer);\n            this.datagrid._resetAutoSize();\n        } else {\n            this.model._preserve_focus_state = false;\n        }\n\n        this._restore_column_size_overrides(old_sizes);\n        await draw;\n\n        this._toolbar.classList.toggle(\n            \"aggregated\",\n            this.model._config.group_by.length > 0 ||\n                this.model._config.split_by.length > 0\n        );\n    }\n\n    async update(view) {\n        this.model._num_rows = await view.num_rows();\n        await this.datagrid.draw();\n    }\n\n    async resize() {\n        if (!this.isConnected || this.offsetParent == null) {\n            return;\n        }\n\n        if (this._initialized) {\n            await this.datagrid.draw();\n        }\n    }\n\n    async clear() {\n        this.datagrid._resetAutoSize();\n        this.datagrid.clear();\n    }\n\n    save() {\n        if (this.datagrid) {\n            const datagrid = this.datagrid;\n            const token = {\n                columns: {},\n                scroll_lock: !!this._is_scroll_lock,\n                editable: !!this._is_edit_mode,\n            };\n\n            for (const col of Object.keys(datagrid[PLUGIN_SYMBOL] || {})) {\n                const config = Object.assign({}, datagrid[PLUGIN_SYMBOL][col]);\n                if (config?.pos_fg_color || config?.pos_bg_color) {\n                    config.pos_fg_color = config.pos_fg_color?.[0];\n                    config.neg_fg_color = config.neg_fg_color?.[0];\n                    config.pos_bg_color = config.pos_bg_color?.[0];\n                    config.neg_bg_color = config.neg_bg_color?.[0];\n                }\n\n                if (config?.color) {\n                    config.color = config.color[0];\n                }\n\n                token.columns[col] = config;\n            }\n\n            const column_size_overrides = this._save_column_size_overrides();\n\n            for (const col of Object.keys(column_size_overrides || {})) {\n                if (!token.columns[col]) {\n                    token.columns[col] = {};\n                }\n\n                token.columns[col].column_size_override =\n                    column_size_overrides[col];\n            }\n\n            return JSON.parse(JSON.stringify(token));\n        }\n        return {};\n    }\n\n    restore(token) {\n        token = JSON.parse(JSON.stringify(token));\n        const overrides = {};\n        if (token.columns) {\n            for (const col of Object.keys(token.columns)) {\n                const col_config = token.columns[col];\n                if (col_config.column_size_override !== undefined) {\n                    overrides[col] = col_config.column_size_override;\n                    delete col_config[\"column_size_override\"];\n                }\n\n                if (col_config?.pos_fg_color) {\n                    col_config.pos_fg_color = make_color_record(\n                        col_config.pos_fg_color\n                    );\n                    col_config.neg_fg_color = make_color_record(\n                        col_config.neg_fg_color\n                    );\n                }\n\n                if (col_config?.pos_bg_color) {\n                    col_config.pos_bg_color = make_color_record(\n                        col_config.pos_bg_color\n                    );\n                    col_config.neg_bg_color = make_color_record(\n                        col_config.neg_bg_color\n                    );\n                }\n\n                if (col_config?.color) {\n                    col_config.color = make_color_record(col_config.color);\n                }\n\n                if (Object.keys(col_config).length === 0) {\n                    delete token.columns[col];\n                }\n            }\n        }\n\n        if (\"editable\" in token) {\n            this._toggle_edit_mode(token.editable);\n        }\n\n        if (\"scroll_lock\" in token) {\n            this._toggle_scroll_lock(token.scroll_lock);\n        }\n\n        const datagrid = this.datagrid;\n        try {\n            datagrid._resetAutoSize();\n        } catch (e) {\n            // Do nothing;  this may fail if no auto size info has been read.\n            // TODO fix this regular-table API\n        }\n\n        this._restore_column_size_overrides(overrides, true);\n        datagrid[PLUGIN_SYMBOL] = token.columns;\n    }\n\n    async restyle(view) {\n        this.draw(view);\n    }\n\n    delete() {\n        if (this.datagrid.table_model) {\n            this.datagrid._resetAutoSize();\n        }\n        this.datagrid.clear();\n    }\n\n    // Private\n\n    /**\n     * Extract the current user-overriden column widths from\n     * `regular-table`.  This functiond depends on the internal\n     * implementation of `regular-table` and may break!\n     *\n     * @returns An Object-as-dictionary keyed by column_path string, and\n     * valued by the column's user-overridden pixel width.\n     */\n    _save_column_size_overrides() {\n        if (!this._initialized) {\n            return [];\n        }\n\n        if (this._cached_column_sizes) {\n            const x = this._cached_column_sizes;\n            this._cached_column_sizes = undefined;\n            return x;\n        }\n\n        const overrides = this.datagrid._column_sizes.override;\n        const {group_by, columns} = this.model._config;\n        const tree_header_offset =\n            group_by?.length > 0 ? group_by.length + 1 : 0;\n\n        const old_sizes = {};\n        for (const key of Object.keys(overrides)) {\n            if (overrides[key] !== undefined) {\n                const index = key - tree_header_offset;\n                if (index > -1) {\n                    old_sizes[this.model._column_paths[index]] = overrides[key];\n                } else if (index === -1) {\n                    old_sizes[\"__ROW_PATH__\"] = overrides[key];\n                }\n            }\n        }\n\n        return old_sizes;\n    }\n\n    /**\n     * Restore a saved column width override token.\n     *\n     * @param {*} token An object previously returned by a call to\n     * `_save_column_size_overrides()`\n     * @param {*} [cache=false] A flag indicating whether this value should\n     * be cached so a future `resetAutoSize()` call does not clear it.\n     * @returns\n     */\n    _restore_column_size_overrides(old_sizes, cache = false) {\n        if (!this._initialized) {\n            return;\n        }\n\n        if (cache) {\n            this._cached_column_sizes = old_sizes;\n        }\n\n        const overrides = {};\n        const {group_by, columns} = this.model._config;\n        const tree_header_offset =\n            group_by?.length > 0 ? group_by.length + 1 : 0;\n\n        for (const key of Object.keys(old_sizes)) {\n            if (key === \"__ROW_PATH__\") {\n                overrides[tree_header_offset - 1] = old_sizes[key];\n            } else {\n                const index = this.model._column_paths.indexOf(key);\n                overrides[index + tree_header_offset] = old_sizes[key];\n            }\n        }\n\n        this.datagrid._column_sizes.override = overrides;\n    }\n}\n\ncustomElements.define(\n    \"perspective-viewer-datagrid\",\n    PerspectiveViewerDatagridPluginElement\n);\n\n/**\n * Appends the default table CSS to `<head>`, should be run once on module\n * import.\n *\n */\nfunction _register_global_styles() {\n    const style = document.createElement(\"style\");\n    style.textContent = MATERIAL_STYLE;\n    document.head.insertBefore(style, document.head.firstChild);\n}\n\n/******************************************************************************\n *\n * Main\n *\n */\n\nfunction register_element() {\n    customElements\n        .get(\"perspective-viewer\")\n        .registerPlugin(\"perspective-viewer-datagrid\");\n}\n\ncustomElements.whenDefined(\"perspective-viewer\").then(register_element);\n_register_global_styles();\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n// TODO Import this directly due to overly-sensitive tree shaking.\nimport {get_type_config} from \"../../../perspective/src/js/config/index.js\";\nimport {style_cell_flash} from \"./cell_flash.js\";\nimport {sortHandler} from \"./sorting.js\";\n\nimport {\n    activate_plugin_menu,\n    PLUGIN_SYMBOL,\n    make_color_record,\n} from \"./plugin_menu.js\";\nimport {rgbaToRgb, infer_foreground_from_background} from \"./color_utils.js\";\n\nimport chroma from \"chroma-js\";\n\nfunction styleListener(regularTable) {\n    const header_depth = regularTable._view_cache.config.row_pivots.length - 1;\n    let group_headers = Array.from(\n        regularTable.children[0].children[0].children\n    );\n\n    const plugins = regularTable[PLUGIN_SYMBOL] || {};\n    if (group_headers.length > 0) {\n        let [col_headers] = group_headers.splice(group_headers.length - 1, 1);\n\n        for (const td of col_headers?.children) {\n            const metadata = regularTable.getMeta(td);\n            const column_name =\n                metadata.column_header?.[metadata.column_header?.length - 1];\n            const sort = this._config.sort.find((x) => x[0] === column_name);\n            let needs_border = metadata.row_header_x === header_depth;\n            const is_corner = typeof metadata.x === \"undefined\";\n            needs_border =\n                needs_border ||\n                (metadata.x + 1) % this._config.columns.length === 0;\n            td.classList.toggle(\"psp-header-border\", needs_border);\n            td.classList.toggle(\"psp-header-group\", false);\n            td.classList.toggle(\"psp-header-leaf\", true);\n            td.classList.toggle(\"psp-is-top\", false);\n            td.classList.toggle(\"psp-header-corner\", is_corner);\n            td.classList.toggle(\n                \"psp-header-sort-asc\",\n                !!sort && sort[1] === \"asc\"\n            );\n            td.classList.toggle(\n                \"psp-header-sort-desc\",\n                !!sort && sort[1] === \"desc\"\n            );\n            td.classList.toggle(\n                \"psp-header-sort-col-asc\",\n                !!sort && sort[1] === \"col asc\"\n            );\n            td.classList.toggle(\n                \"psp-header-sort-col-desc\",\n                !!sort && sort[1] === \"col desc\"\n            );\n\n            let type = get_psp_type.call(this, metadata);\n            const is_numeric = type === \"integer\" || type === \"float\";\n            const is_string = type === \"string\";\n            td.classList.toggle(\"psp-align-right\", is_numeric);\n            td.classList.toggle(\"psp-align-left\", !is_numeric);\n            td.classList.toggle(\n                \"psp-menu-open\",\n                this._open_column_styles_menu[0] === metadata._virtual_x\n            );\n            td.classList.toggle(\n                \"psp-menu-enabled\",\n                (is_string || is_numeric) && !is_corner\n            );\n            td.classList.toggle(\n                \"psp-is-width-override\",\n                regularTable._column_sizes?.override[metadata.size_key] !==\n                    undefined\n            );\n        }\n    }\n\n    const m = [];\n    let marked = new Set();\n    const table = regularTable.children[0];\n    for (let y = 0; y < group_headers.length; y++) {\n        let row = table.rows[y];\n        const tops = new Set();\n        for (let x = 0; x < row.cells.length; x++) {\n            const td = row.cells[x];\n            td.style.backgroundColor = \"\";\n            const metadata = regularTable.getMeta(td);\n            let needs_border =\n                metadata.row_header_x === header_depth || metadata.x >= 0;\n            td.classList.toggle(\"psp-align-right\", false);\n            td.classList.toggle(\"psp-align-left\", false);\n            td.classList.toggle(\"psp-header-group\", true);\n            td.classList.toggle(\"psp-header-leaf\", false);\n            td.classList.toggle(\"psp-header-border\", needs_border);\n            td.classList.toggle(\n                \"psp-header-group-corner\",\n                typeof metadata.x === \"undefined\"\n            );\n            td.classList.toggle(\"psp-color-mode-bar\", false);\n\n            td.classList.toggle(\"psp-header-sort-asc\", false);\n            td.classList.toggle(\"psp-header-sort-desc\", false);\n            td.classList.toggle(\"psp-header-sort-col-asc\", false);\n            td.classList.toggle(\"psp-header-sort-col-desc\", false);\n\n            let cell = row.cells[x],\n                xx = x,\n                tx,\n                ty;\n\n            for (; m[y] && m[y][xx]; ++xx);\n            tops.add(xx);\n            for (tx = xx; tx < xx + cell.colSpan; ++tx) {\n                for (ty = y; ty < y + cell.rowSpan; ++ty) {\n                    if (!m[ty]) m[ty] = [];\n                    m[ty][tx] = true;\n                }\n            }\n\n            cell.classList.toggle(\"psp-is-top\", y === 0 || !marked.has(tx));\n        }\n        marked = tops;\n    }\n\n    for (const tr of regularTable.children[0].children[1].children) {\n        for (const td of tr.children) {\n            const metadata = regularTable.getMeta(td);\n            const column_name =\n                metadata.column_header?.[metadata.column_header?.length - 1];\n\n            let type = get_psp_type.call(this, metadata);\n            const plugin = plugins[column_name];\n            const is_numeric = type === \"integer\" || type === \"float\";\n\n            if (is_numeric) {\n                const is_positive = metadata.user > 0;\n                const is_negative = metadata.user < 0;\n\n                let pos_bg_color;\n                if (plugin?.pos_bg_color !== undefined) {\n                    pos_bg_color = plugin.pos_bg_color;\n                } else {\n                    pos_bg_color = this._pos_bg_color;\n                }\n\n                let neg_bg_color;\n                if (plugin?.neg_bg_color !== undefined) {\n                    neg_bg_color = plugin.neg_bg_color;\n                } else {\n                    neg_bg_color = this._neg_bg_color;\n                }\n\n                const bg_tuple = is_positive\n                    ? pos_bg_color\n                    : is_negative\n                    ? neg_bg_color\n                    : [\"\", ...this._plugin_background, \"\"];\n\n                {\n                    const [hex, r, g, b, _gradhex] = bg_tuple;\n\n                    td.style.position = \"\";\n                    if (plugin?.number_bg_mode === \"color\") {\n                        td.style.animation = \"\";\n                        td.style.backgroundColor = hex;\n                    } else if (plugin?.number_bg_mode === \"gradient\") {\n                        const a = Math.max(\n                            0,\n                            Math.min(\n                                1,\n                                Math.abs(metadata.user / plugin.bg_gradient)\n                            )\n                        );\n                        const source = this._plugin_background;\n                        const foreground = infer_foreground_from_background(\n                            rgbaToRgb([r, g, b, a], source)\n                        );\n\n                        td.style.animation = \"\";\n                        td.style.color = foreground;\n                        td.style.backgroundColor = `rgba(${r},${g},${b},${a})`;\n                    } else if (plugin?.number_bg_mode === \"pulse\") {\n                        // TODO!\n                        style_cell_flash.call(\n                            this,\n                            metadata,\n                            td,\n                            pos_bg_color,\n                            neg_bg_color\n                        );\n                        td.style.backgroundColor = \"\";\n                    } else if (\n                        plugin?.number_bg_mode === \"disabled\" ||\n                        !plugin?.number_bg_mode\n                    ) {\n                        td.style.animation = \"\";\n                        td.style.backgroundColor = \"\";\n                    } else {\n                        td.style.animation = \"\";\n                        td.style.backgroundColor = \"\";\n                    }\n                }\n\n                const [hex, r, g, b, gradhex] = (() => {\n                    if (plugin?.pos_fg_color !== undefined) {\n                        return is_positive\n                            ? plugin.pos_fg_color\n                            : is_negative\n                            ? plugin.neg_fg_color\n                            : [\"\", ...this._plugin_background, \"\"];\n                    } else {\n                        return is_positive\n                            ? this._pos_fg_color\n                            : is_negative\n                            ? this._neg_fg_color\n                            : [\"\", ...this._plugin_background, \"\"];\n                    }\n                })();\n\n                if (plugin?.number_fg_mode === \"disabled\") {\n                    if (plugin?.number_bg_mode === \"color\") {\n                        const source = this._plugin_background;\n                        const foreground = infer_foreground_from_background(\n                            rgbaToRgb(\n                                [bg_tuple[1], bg_tuple[2], bg_tuple[3], 1],\n                                source\n                            )\n                        );\n                        td.style.color = foreground;\n                    } else if (plugin?.number_bg_mode === \"gradient\") {\n                    } else {\n                        td.style.color = \"\";\n                    }\n                } else if (plugin?.number_fg_mode === \"bar\") {\n                    td.style.color = \"\";\n                    td.style.position = \"relative\";\n                    if (\n                        gradhex !== \"\" &&\n                        td.children.length > 0 &&\n                        td.children[0].nodeType === Node.ELEMENT_NODE\n                    ) {\n                        td.children[0].style.background = gradhex;\n                    }\n                } else if (\n                    plugin?.number_fg_mode === \"color\" ||\n                    !plugin?.number_fg_mode\n                ) {\n                    td.style.color = hex;\n                }\n            } else if (type === \"boolean\") {\n                const [hex] =\n                    metadata.user === true\n                        ? this._pos_fg_color\n                        : metadata.user === false\n                        ? this._neg_fg_color\n                        : [\"\", 0, 0, 0, \"\"];\n\n                td.style.backgroundColor = \"\";\n                td.style.color = hex;\n            } else if (type === \"string\") {\n                const [hex, r, g, b, gradhex] = (() => {\n                    if (plugin?.color !== undefined) {\n                        return plugin.color;\n                    } else {\n                        return this._color;\n                    }\n                })();\n\n                if (\n                    plugin?.string_color_mode === \"foreground\" &&\n                    metadata.user !== null\n                ) {\n                    td.style.color = hex;\n                    td.style.backgroundColor = \"\";\n                    if (plugin?.format === \"link\") {\n                        td.children[0].style.color = hex;\n                    }\n                } else if (\n                    plugin?.string_color_mode === \"background\" &&\n                    metadata.user !== null\n                ) {\n                    const source = this._plugin_background;\n                    const foreground = infer_foreground_from_background(\n                        rgbaToRgb([r, g, b, 1], source)\n                    );\n                    td.style.color = foreground;\n                    td.style.backgroundColor = hex;\n                } else if (\n                    plugin?.string_color_mode === \"series\" &&\n                    metadata.user !== null\n                ) {\n                    if (!this._series_color_map.has(column_name)) {\n                        this._series_color_map.set(column_name, new Map());\n                        this._series_color_seed.set(column_name, 0);\n                    }\n\n                    const series_map = this._series_color_map.get(column_name);\n                    if (!series_map.has(metadata.user)) {\n                        const seed = this._series_color_seed.get(column_name);\n                        series_map.set(metadata.user, seed);\n                        this._series_color_seed.set(column_name, seed + 1);\n                    }\n\n                    const color_seed = series_map.get(metadata.user);\n                    let [h, s, l] = chroma(hex).hsl();\n                    h = h + ((color_seed * 150) % 360);\n                    const color2 = chroma(h, s, l, \"hsl\");\n                    const [r, g, b] = color2.rgb();\n                    const hex2 = color2.hex();\n                    const source = this._plugin_background;\n                    const foreground = infer_foreground_from_background(\n                        rgbaToRgb([r, g, b, 1], source)\n                    );\n                    td.style.color = foreground;\n                    td.style.backgroundColor = hex2;\n                } else {\n                    td.style.backgroundColor = \"\";\n                    td.style.color = \"\";\n                }\n            } else {\n                td.style.backgroundColor = \"\";\n                td.style.color = \"\";\n            }\n\n            td.classList.toggle(\n                \"psp-bool-type\",\n                type === \"boolean\" && metadata.user !== null\n            );\n\n            const is_th = td.tagName === \"TH\";\n            if (is_th) {\n                const is_not_empty =\n                    typeof metadata.value != undefined &&\n                    typeof metadata.value != null &&\n                    metadata.value?.toString()?.trim().length > 0;\n                const is_leaf =\n                    metadata.row_header_x >= this._config.group_by.length;\n                const next = regularTable.getMeta({\n                    dx: 0,\n                    dy: metadata.y - metadata.y0 + 1,\n                });\n                const is_collapse =\n                    next &&\n                    next.row_header &&\n                    typeof next.row_header[metadata.row_header_x + 1] !==\n                        \"undefined\";\n                td.classList.toggle(\"psp-tree-label\", is_not_empty && !is_leaf);\n                td.classList.toggle(\n                    \"psp-tree-label-expand\",\n                    is_not_empty && !is_leaf && !is_collapse\n                );\n                td.classList.toggle(\n                    \"psp-tree-label-collapse\",\n                    is_not_empty && !is_leaf && is_collapse\n                );\n                td.classList.toggle(\"psp-tree-leaf\", is_not_empty && is_leaf);\n            }\n\n            td.classList.toggle(\"psp-align-right\", !is_th && is_numeric);\n            td.classList.toggle(\"psp-align-left\", is_th || !is_numeric);\n            td.classList.toggle(\n                \"psp-color-mode-bar\",\n                plugin?.number_fg_mode === \"bar\" && is_numeric\n            );\n        }\n    }\n}\n\nasync function expandCollapseHandler(regularTable, event) {\n    const meta = regularTable.getMeta(event.target);\n    const is_collapse = event.target.classList.contains(\n        \"psp-tree-label-collapse\"\n    );\n    if (event.shiftKey && is_collapse) {\n        this._view.set_depth(\n            meta.row_header.filter((x) => x !== undefined).length - 2\n        );\n    } else if (event.shiftKey) {\n        this._view.set_depth(\n            meta.row_header.filter((x) => x !== undefined).length - 1\n        );\n    } else if (is_collapse) {\n        this._view.collapse(meta.y);\n    } else {\n        this._view.expand(meta.y);\n    }\n    this._num_rows = await this._view.num_rows();\n    this._num_columns = await this._view.num_columns();\n    regularTable.draw();\n}\n\nasync function mousedownListener(regularTable, event) {\n    if (event.which !== 1) {\n        return;\n    }\n\n    let target = event.target;\n    if (target.tagName === \"A\") {\n        return;\n    }\n\n    while (target.tagName !== \"TD\" && target.tagName !== \"TH\") {\n        target = target.parentElement;\n        if (!regularTable.contains(target)) {\n            return;\n        }\n    }\n\n    if (target.classList.contains(\"psp-tree-label\")) {\n        expandCollapseHandler.call(this, regularTable, event);\n        event.stopImmediatePropagation();\n        return;\n    }\n\n    const rect = target.getBoundingClientRect();\n    if (\n        target.classList.contains(\"psp-menu-enabled\") &&\n        event.clientY - rect.top > 16\n    ) {\n        const meta = regularTable.getMeta(target);\n        const column_name =\n            meta.column_header?.[meta.column_header?.length - 1];\n        const column_type = this._schema[column_name];\n        this._open_column_styles_menu.unshift(meta._virtual_x);\n        if (column_type === \"string\") {\n            regularTable.draw({preserve_width: true});\n            activate_plugin_menu.call(this, regularTable, target);\n        } else {\n            const [min, max] = await this._view.get_min_max(column_name);\n            regularTable.draw({preserve_width: true});\n            let bound = Math.max(Math.abs(min), Math.abs(max));\n            if (bound > 1) {\n                bound = Math.round(bound * 100) / 100;\n            }\n\n            activate_plugin_menu.call(this, regularTable, target, bound);\n        }\n\n        event.preventDefault();\n        event.stopImmediatePropagation();\n    } else if (\n        target.classList.contains(\"psp-header-leaf\") &&\n        !target.classList.contains(\"psp-header-corner\")\n    ) {\n        sortHandler.call(this, regularTable, event, target);\n        event.stopImmediatePropagation();\n    }\n}\n\nfunction clickListener(regularTable, event) {\n    if (event.which !== 1) {\n        return;\n    }\n\n    let target = event.target;\n    while (target.tagName !== \"TD\" && target.tagName !== \"TH\") {\n        target = target.parentElement;\n        if (!regularTable.contains(target)) {\n            return;\n        }\n    }\n\n    if (target.classList.contains(\"psp-tree-label\") && event.offsetX < 26) {\n        event.stopImmediatePropagation();\n    } else if (\n        target.classList.contains(\"psp-header-leaf\") &&\n        !target.classList.contains(\"psp-header-corner\")\n    ) {\n        event.stopImmediatePropagation();\n    }\n}\n\nconst FORMATTERS = {};\n\nconst FORMATTER_CONS = {\n    datetime: Intl.DateTimeFormat,\n    date: Intl.DateTimeFormat,\n    integer: Intl.NumberFormat,\n    float: Intl.NumberFormat,\n    boolean: class {\n        format(val) {\n            return val ? \"check\" : \"close\";\n        }\n    },\n};\n\nexport const formatters = FORMATTERS;\n\nfunction _format(parts, val, plugins = {}, use_table_schema = false) {\n    if (val === null) {\n        return \"-\";\n    }\n\n    const title = parts[parts.length - 1];\n    const type =\n        (use_table_schema && this._table_schema[title]) ||\n        this._schema[title] ||\n        \"string\";\n    const plugin = plugins[title];\n    const is_numeric = type === \"integer\" || type === \"float\";\n    if (is_numeric && plugin?.number_fg_mode === \"bar\") {\n        const a = Math.max(\n            0,\n            Math.min(0.95, Math.abs(val / plugin.fg_gradient) * 0.95)\n        );\n        const div = this._div_factory.get();\n        const anchor = val >= 0 ? \"left\" : \"right\";\n        div.setAttribute(\n            \"style\",\n            `width:${(a * 100).toFixed(\n                2\n            )}%;position:absolute;${anchor}:0;height:80%;top:10%;pointer-events:none;`\n        );\n        return div;\n    } else if (plugin?.format === \"link\" && type === \"string\") {\n        const anchor = document.createElement(\"a\");\n        anchor.setAttribute(\"href\", val);\n        anchor.setAttribute(\"target\", \"_blank\");\n        anchor.textContent = val;\n        return anchor;\n    } else if (plugin?.format === \"bold\" && type === \"string\") {\n        const anchor = document.createElement(\"b\");\n        anchor.textContent = val;\n        return anchor;\n    } else if (plugin?.format === \"italics\" && type === \"string\") {\n        const anchor = document.createElement(\"i\");\n        anchor.textContent = val;\n        return anchor;\n    } else {\n        const is_plugin_override =\n            is_numeric && plugin && plugin.fixed !== undefined;\n        let formatter_key = is_plugin_override\n            ? `${type}${plugin.fixed}`\n            : type;\n        if (FORMATTERS[formatter_key] === undefined) {\n            const type_config = get_type_config(type);\n            if (is_plugin_override) {\n                const opts = {\n                    minimumFractionDigits: plugin.fixed,\n                    maximumFractionDigits: plugin.fixed,\n                };\n                FORMATTERS[formatter_key] = new FORMATTER_CONS[type](\n                    \"en-us\",\n                    opts\n                );\n            } else if (FORMATTER_CONS[type]) {\n                FORMATTERS[formatter_key] = new FORMATTER_CONS[type](\n                    \"en-us\",\n                    type_config.format\n                );\n            } else {\n                FORMATTERS[formatter_key] = false;\n            }\n        }\n\n        return FORMATTERS[formatter_key]\n            ? FORMATTERS[formatter_key].format(val)\n            : val;\n    }\n}\n\nfunction* _tree_header(paths = [], row_headers, regularTable) {\n    const plugins = regularTable[PLUGIN_SYMBOL];\n    for (let path of paths) {\n        path = [\"TOTAL\", ...path];\n        const last = path[path.length - 1];\n        path = path.slice(0, path.length - 1).fill(\"\");\n        const formatted = _format.call(\n            this,\n            [row_headers[path.length - 1]],\n            last,\n            plugins,\n            true\n        );\n\n        if (formatted instanceof HTMLElement) {\n            path = path.concat(formatted);\n        } else {\n            path = path.concat({toString: () => formatted});\n        }\n\n        path.length = row_headers.length + 1;\n        yield path;\n    }\n}\n\nfunction createDataListener() {\n    let last_meta;\n    let last_column_paths;\n    let last_ids;\n    let last_reverse_ids;\n    let last_reverse_columns;\n    return async function dataListener(regularTable, x0, y0, x1, y1) {\n        let columns = {};\n        let new_window;\n        if (x1 - x0 > 0 && y1 - y0 > 0) {\n            this._is_old_viewport =\n                this._last_window?.start_row === y0 &&\n                this._last_window?.end_row === y1 &&\n                this._last_window?.start_col === x0 &&\n                this._last_window?.end_col === x1;\n\n            new_window = {\n                start_row: y0,\n                start_col: x0,\n                end_row: y1,\n                end_col: x1,\n                id: true,\n            };\n\n            columns = await this._view.to_columns(new_window);\n            this._last_window = new_window;\n            this._ids = columns.__ID__;\n            this._reverse_columns = this._column_paths\n                .slice(x0, x1)\n                .reduce((acc, x, i) => {\n                    acc.set(x, i);\n                    return acc;\n                }, new Map());\n\n            this._reverse_ids = this._ids.reduce((acc, x, i) => {\n                acc.set(x?.join(\"|\"), i);\n                return acc;\n            }, new Map());\n        } else {\n            this._div_factory.clear();\n        }\n\n        const data = [],\n            metadata = [],\n            column_headers = [],\n            column_paths = [];\n\n        // for (const path of this._column_paths.slice(x0, x1)) {\n        for (\n            let ipath = x0;\n            ipath < Math.min(x1, this._column_paths.length);\n            ++ipath\n        ) {\n            const path = this._column_paths[ipath];\n            const path_parts = path.split(\"|\");\n            const column = columns[path] || new Array(y1 - y0).fill(null);\n            data.push(\n                column.map((x) =>\n                    _format.call(\n                        this,\n                        path_parts,\n                        x,\n                        regularTable[PLUGIN_SYMBOL]\n                    )\n                )\n            );\n            metadata.push(column);\n            column_headers.push(path_parts);\n            column_paths.push(path);\n        }\n\n        // Only update the last state if this is not a \"phantom\" call.\n        if (x1 - x0 > 0 && y1 - y0 > 0) {\n            this.last_column_paths = last_column_paths;\n            this.last_meta = last_meta;\n            this.last_ids = last_ids;\n            this.last_reverse_ids = last_reverse_ids;\n            this.last_reverse_columns = last_reverse_columns;\n\n            last_column_paths = column_paths;\n            last_meta = metadata;\n            last_ids = this._ids;\n            last_reverse_ids = this._reverse_ids;\n            last_reverse_columns = this._reverse_columns;\n        }\n\n        return {\n            num_rows: this._num_rows,\n            num_columns: this._column_paths.length,\n            row_headers: Array.from(\n                _tree_header.call(\n                    this,\n                    columns.__ROW_PATH__,\n                    this._config.group_by,\n                    regularTable\n                )\n            ),\n            column_headers,\n            data,\n            metadata,\n        };\n    };\n}\n\nfunction get_rule(regular, tag, def) {\n    let color = window.getComputedStyle(regular).getPropertyValue(tag).trim();\n    if (color.length > 0) {\n        return color;\n    } else {\n        return def;\n    }\n}\n\nclass ElemFactory {\n    constructor(name) {\n        this._name = name;\n        this._elements = [];\n        this._index = 0;\n    }\n\n    clear() {\n        this._index = 0;\n    }\n\n    get() {\n        if (!this._elements[this._index]) {\n            this._elements[this._index] = document.createElement(this._name);\n        }\n        const elem = this._elements[this._index];\n        this._index += 1;\n        return elem;\n    }\n}\n\nfunction blend(a, b) {\n    return chroma.mix(a, `rgb(${b[0]},${b[1]},${b[2]})`, 0.5).hex();\n}\n\nexport async function createModel(regular, table, view, extend = {}) {\n    const config = await view.get_config();\n\n    // Extract the entire expression string as typed by the user, so we can\n    // feed it into `validate_expressions` and get back the data types for\n    // each column without it being affected by a pivot.\n    const expressions = config.expressions.map((expr) => expr[1]);\n    const [\n        table_schema,\n        validated_expressions,\n        num_rows,\n        schema,\n        expression_schema,\n        column_paths,\n    ] = await Promise.all([\n        table.schema(),\n        table.validate_expressions(expressions),\n        view.num_rows(),\n        view.schema(),\n        view.expression_schema(),\n        view.column_paths(),\n    ]);\n\n    const _plugin_background = chroma(\n        get_rule(regular, \"--plugin--background\", \"#FFFFFF\")\n    ).rgb();\n\n    const _pos_fg_color = make_color_record(\n        get_rule(regular, \"--rt-pos-cell--color\", \"#338DCD\")\n    );\n\n    const _neg_fg_color = make_color_record(\n        get_rule(regular, \"--rt-neg-cell--color\", \"#FF5942\")\n    );\n\n    const _pos_bg_color = make_color_record(\n        blend(_pos_fg_color[0], _plugin_background)\n    );\n\n    const _neg_bg_color = make_color_record(\n        blend(_neg_fg_color[0], _plugin_background)\n    );\n\n    const _color = make_color_record(\n        get_rule(regular, \"--active--color\", \"#ff0000\")\n    );\n\n    const _schema = {...schema, ...expression_schema};\n    const _table_schema = {\n        ...table_schema,\n        ...validated_expressions.expression_schema,\n    };\n\n    const _column_paths = column_paths.filter((path) => {\n        return path !== \"__ROW_PATH__\" && path !== \"__ID__\";\n    });\n\n    const _is_editable = [];\n    const _column_types = [];\n    for (const column_path of _column_paths) {\n        const column_path_parts = column_path.split(\"|\");\n        const column = column_path_parts[column_path_parts.length - 1];\n        _column_types.push(_schema[column]);\n        _is_editable.push(!!table_schema[column]);\n    }\n\n    const model = Object.assign(extend, {\n        _view: view,\n        _table: table,\n        _table_schema,\n        _config: config,\n        _num_rows: num_rows,\n        _schema,\n        _ids: [],\n        _open_column_styles_menu: [],\n        _plugin_background,\n        _color,\n        _pos_fg_color,\n        _neg_fg_color,\n        _pos_bg_color,\n        _neg_bg_color,\n        _column_paths,\n        _column_types,\n        _is_editable,\n        _row_header_types: config.group_by.map((column_path) => {\n            return _table_schema[column_path];\n        }),\n        _series_color_map: new Map(),\n        _series_color_seed: new Map(),\n        get_psp_type,\n    });\n\n    // Re-use div factory\n    model._div_factory = model._div_factory || new ElemFactory(\"div\");\n\n    regular.setDataListener(createDataListener().bind(model, regular), {\n        virtual_mode:\n            window\n                .getComputedStyle(regular)\n                .getPropertyValue(\"--datagrid-virtual-mode\")\n                ?.trim() || \"both\",\n    });\n\n    return model;\n}\n\nfunction get_psp_type(metadata) {\n    if (metadata.x >= 0) {\n        return this._column_types[metadata.x];\n    } else {\n        return this._row_header_types[metadata.row_header_x - 1];\n    }\n}\n\nexport async function configureRegularTable(regular, model) {\n    regular.addStyleListener(styleListener.bind(model, regular));\n    regular.addEventListener(\n        \"mousedown\",\n        mousedownListener.bind(model, regular)\n    );\n    regular.addEventListener(\"click\", clickListener.bind(model, regular));\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport function style_cell_flash(\n    metadata,\n    td,\n    [, , , , , pos_s, pos_e],\n    [, , , , , neg_s, neg_e]\n) {\n    const id = this._ids?.[metadata.dy]?.join(\"|\");\n    const metadata_path = metadata.column_header.join(\"|\");\n    if (\n        this.last_reverse_columns?.has(metadata_path) &&\n        this.last_reverse_ids?.has(id)\n    ) {\n        const row_idx = this.last_reverse_ids?.get(id);\n        const col_idx = this.last_reverse_columns.get(metadata_path);\n        if (!this._is_old_viewport) {\n            td.style.animation = \"\";\n        } else if (this.last_meta?.[col_idx]?.[row_idx] > metadata.user) {\n            td.style.setProperty(\"--pulse--background-color-start\", neg_s);\n            td.style.setProperty(\"--pulse--background-color-end\", neg_e);\n            if (td.style.animationName === \"pulse_neg\") {\n                td.style.animation = \"pulse_neg2 0.5s linear\";\n            } else {\n                td.style.animation = \"pulse_neg 0.5s linear\";\n            }\n        } else if (this.last_meta?.[col_idx]?.[row_idx] < metadata.user) {\n            td.style.setProperty(\"--pulse--background-color-start\", pos_s);\n            td.style.setProperty(\"--pulse--background-color-end\", pos_e);\n            if (td.style.animationName === \"pulse_pos\") {\n                td.style.animation = \"pulse_pos2 0.5s linear\";\n            } else {\n                td.style.animation = \"pulse_pos 0.5s linear\";\n            }\n        } else if (row_idx !== metadata.dy) {\n            td.style.animation = \"\";\n        }\n    } else {\n        td.style.animation = \"\";\n    }\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport async function configureSortable(table, viewer) {\n    table.addEventListener(\"regular-table-psp-sort\", (event) => {\n        this._preserve_focus_state = true;\n        viewer.restore({sort: event.detail.sort});\n    });\n}\n\nexport async function sortHandler(regularTable, event, target) {\n    const meta = regularTable.getMeta(target);\n    const column_name = meta.column_header[meta.column_header.length - 1];\n    const sort_method = event.shiftKey ? append_sort : override_sort;\n    const sort = sort_method.call(this, column_name);\n    regularTable.dispatchEvent(\n        new CustomEvent(\"regular-table-psp-sort\", {detail: {sort}})\n    );\n}\n\nexport function append_sort(column_name) {\n    const sort = [];\n    let found = false;\n    for (const sort_term of this._config.sort) {\n        const [_column_name, _sort_dir] = sort_term;\n        if (_column_name === column_name) {\n            found = true;\n            const term = create_sort.call(this, column_name, _sort_dir);\n            if (term) {\n                sort.push(term);\n            }\n        } else {\n            sort.push(sort_term);\n        }\n    }\n    if (!found) {\n        sort.push([column_name, \"desc\"]);\n    }\n    return sort;\n}\n\nexport function override_sort(column_name) {\n    for (const [_column_name, _sort_dir] of this._config.sort) {\n        if (_column_name === column_name) {\n            const sort = create_sort.call(this, column_name, _sort_dir);\n            return sort ? [sort] : [];\n        }\n    }\n    return [[column_name, \"desc\"]];\n}\n\nexport function create_sort(column_name, sort_dir) {\n    const is_col_sortable = this._config.split_by.length > 0;\n    const order = is_col_sortable ? ROW_COL_SORT_ORDER : ROW_SORT_ORDER;\n    const inc_sort_dir = sort_dir ? order[sort_dir] : \"desc\";\n    if (inc_sort_dir) {\n        return [column_name, inc_sort_dir];\n    }\n}\n\nconst ROW_SORT_ORDER = {desc: \"asc\", asc: undefined};\nconst ROW_COL_SORT_ORDER = {\n    desc: \"asc\",\n    asc: \"col desc\",\n    \"col desc\": \"col asc\",\n    \"col asc\": undefined,\n};\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport chroma from \"chroma-js\";\n\nexport const PLUGIN_SYMBOL = Symbol(\"Plugin Symbol\");\n\nexport function make_gradient(chromahex) {\n    const [r, g, b] = chromahex.rgb();\n    const [r1, g1, b1] = chromahex\n        .set(\"hsl.h\", (chromahex.get(\"hsl.h\") - 15) % 360)\n        .rgb();\n    const [r2, g2, b2] = chromahex\n        .set(\"hsl.h\", (chromahex.get(\"hsl.h\") + 15) % 360)\n        .rgb();\n    return `linear-gradient(to right top,rgb(${r1},${g1},${b1}),rgb(${r},${g},${b}) 50%,rgb(${r2},${g2},${b2}))`;\n}\n\nexport function make_color_record(color) {\n    const chroma_neg = chroma(color);\n    const _neg_grad = make_gradient(chroma_neg);\n    const rgb = chroma_neg.rgb();\n\n    return [\n        color,\n        ...rgb,\n        _neg_grad,\n        `rgba(${rgb[0]},${rgb[1]},${rgb[2]},1)`,\n        `rgba(${rgb[0]},${rgb[1]},${rgb[2]},0)`,\n    ];\n}\n\nfunction blend(a, b) {\n    return chroma.mix(a, `rgb(${b[0]},${b[1]},${b[2]})`, 0.5).hex();\n}\n\nexport function activate_plugin_menu(regularTable, target, column_max) {\n    const is_numeric = typeof column_max !== \"undefined\";\n    const MENU = document.createElement(\n        `perspective-${is_numeric ? \"number\" : \"string\"}-column-style`\n    );\n    const target_meta = regularTable.getMeta(target);\n    const column_name =\n        target_meta.column_header[target_meta.column_header.length - 1];\n    const column_type = this._schema[column_name];\n    let default_config;\n    if (is_numeric) {\n        default_config = {\n            fg_gradient: column_max,\n            pos_fg_color: this._pos_fg_color[0],\n            neg_fg_color: this._neg_fg_color[0],\n            number_fg_mode: \"color\",\n            bg_gradient: column_max,\n            pos_bg_color: this._pos_bg_color[0],\n            neg_bg_color: this._neg_bg_color[0],\n            number_bg_mode: \"disabled\",\n        };\n    } else {\n        default_config = {\n            color: this._color[0],\n        };\n    }\n\n    if (column_type === \"string\") {\n        // do nothing\n    } else if (column_type === \"float\") {\n        default_config.fixed = 2;\n    } else if (column_type === \"integer\") {\n        default_config.fixed = 0;\n    } else {\n        this._open_column_styles_menu.pop();\n        regularTable.draw({preserve_width: true});\n        return;\n    }\n\n    const scroll_handler = () => MENU.blur();\n    const update_handler = (event) => {\n        const config = event.detail;\n        if (config.pos_fg_color) {\n            config.pos_fg_color = make_color_record(config.pos_fg_color);\n            config.neg_fg_color = make_color_record(config.neg_fg_color);\n        }\n\n        if (config.pos_bg_color) {\n            config.pos_bg_color = make_color_record(config.pos_bg_color);\n            config.neg_bg_color = make_color_record(config.neg_bg_color);\n        }\n\n        if (config.color) {\n            config.color = make_color_record(config.color);\n        }\n\n        regularTable[PLUGIN_SYMBOL] = regularTable[PLUGIN_SYMBOL] || {};\n        regularTable[PLUGIN_SYMBOL][column_name] = config;\n        regularTable.draw({preserve_width: true});\n        regularTable.parentElement.parentElement.dispatchEvent(\n            new Event(\"perspective-config-update\")\n        );\n    };\n\n    const blur_handler = async () => {\n        regularTable.removeEventListener(\n            \"regular-table-scroll\",\n            scroll_handler\n        );\n        MENU.removeEventListener(\n            \"perspective-column-style-change\",\n            update_handler\n        );\n        MENU.removeEventListener(\"blur\", blur_handler);\n        MENU.destroy();\n        this._open_column_styles_menu.pop();\n        await regularTable.draw({preserve_width: true});\n        regularTable.parentElement.parentElement.dispatchEvent(\n            new Event(\"perspective-config-update\")\n        );\n    };\n\n    MENU.addEventListener(\"perspective-column-style-change\", update_handler);\n    MENU.addEventListener(\"blur\", blur_handler);\n    regularTable.addEventListener(\"regular-table-scroll\", scroll_handler);\n\n    // Get the current column style config\n    const pset = regularTable[PLUGIN_SYMBOL] || {};\n    const config = Object.assign(\n        {},\n        (pset[column_name] = pset[column_name] || {})\n    );\n\n    if (config.pos_fg_color || config.pos_bg_color) {\n        config.pos_fg_color = config.pos_fg_color?.[0];\n        config.neg_fg_color = config.neg_fg_color?.[0];\n        config.pos_bg_color = config.pos_bg_color?.[0];\n        config.neg_bg_color = config.neg_bg_color?.[0];\n    }\n\n    if (config.color) {\n        config.color = config.color[0];\n    }\n\n    MENU.open(target, config, default_config);\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\n// AFAICT `chroma-js` has no alpha-aware blending? So we need a function to get\n// the color of a heatmap cell over the background.\nexport function rgbaToRgb([r, g, b, a], source = [255, 255, 255]) {\n    function f(i, c) {\n        return ((1 - a) * (source[i] / 255) + a * (c / 255)) * 255;\n    }\n\n    return [f(0, r), f(1, g), f(2, b)];\n}\n\n// Chroma does this but why bother?\nexport function infer_foreground_from_background([r, g, b]) {\n    // TODO Implement dark/light themes.\n    return Math.sqrt(r * r * 0.299 + g * g * 0.587 + b * b * 0.114) > 130\n        ? \"#161616\"\n        : \"#ffffff\";\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nexport default async function getCellConfig(\n    {_view, _config},\n    row_idx,\n    col_idx\n) {\n    const group_by = _config.group_by;\n    const split_by = _config.split_by;\n    const start_row = row_idx >= 0 ? row_idx : 0;\n    const end_row = start_row + 1;\n    const r = await _view.to_json({start_row, end_row});\n    const row_paths = r.map((x) => x.__ROW_PATH__);\n    const group_by_values = row_paths[0] || [];\n    const row_filters = group_by\n        .map((pivot, index) => {\n            const pivot_value = group_by_values[index];\n            return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\n        })\n        .filter((x) => x);\n\n    const column_index = group_by.length > 0 ? col_idx + 1 : col_idx;\n    const column_paths = Object.keys(r[0])[column_index];\n    const result = {row: r[0]};\n    let column_filters = [];\n    if (column_paths) {\n        const split_by_values = column_paths.split(\"|\");\n        result.column_names = [split_by_values[split_by_values.length - 1]];\n        column_filters = split_by\n            .map((pivot, index) => {\n                const pivot_value = split_by_values[index];\n                return pivot_value ? [pivot, \"==\", pivot_value] : undefined;\n            })\n            .filter((x) => x)\n            .filter(([, , value]) => value !== \"__ROW_PATH__\");\n    }\n\n    const filter = _config.filter.concat(row_filters).concat(column_filters);\n    result.config = {filter};\n    return result;\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport getCellConfig from \"./getCellConfig\";\nconst selected_rows_map = new WeakMap();\n\nasync function selectionListener(regularTable, viewer, event) {\n    const meta = regularTable.getMeta(event.target);\n    if (!viewer.hasAttribute(\"selectable\")) return;\n    if (event.handled) return;\n    if (event.which !== 1) {\n        return;\n    }\n\n    if (!meta) {\n        return;\n    }\n\n    const id = this._ids[meta.y - meta.y0];\n    if (meta && meta.y >= 0) {\n        const selected = selected_rows_map.get(regularTable);\n        const key_match =\n            !!selected &&\n            selected.reduce((agg, x, i) => agg && x === id[i], true);\n        const is_deselect =\n            !!selected && id.length === selected.length && key_match;\n        let filter = [];\n        if (is_deselect) {\n            selected_rows_map.delete(regularTable);\n        } else {\n            selected_rows_map.set(regularTable, id);\n            filter = await getCellConfig(this, meta.y, meta.x);\n            filter = filter.config.filter;\n        }\n\n        await regularTable.draw({preserve_width: true});\n        event.handled = true;\n        viewer.dispatchEvent(\n            new CustomEvent(\"perspective-select\", {\n                bubbles: true,\n                composed: true,\n                detail: {\n                    selected: !is_deselect,\n                    config: {filter},\n                },\n            })\n        );\n    }\n}\n\nfunction selectionStyleListener(regularTable, viewer) {\n    if (!viewer.hasAttribute(\"selectable\")) return;\n    const has_selected = selected_rows_map.has(regularTable);\n    const selected = selected_rows_map.get(regularTable);\n    for (const td of regularTable.querySelectorAll(\"td\")) {\n        if (!has_selected) {\n            td.classList.toggle(\"psp-row-selected\", false);\n            td.classList.toggle(\"psp-row-subselected\", false);\n        } else {\n            const meta = regularTable.getMeta(td);\n            const id = this._ids[meta.y - meta.y0];\n            const key_match = selected.reduce(\n                (agg, x, i) => agg && x === id[i],\n                true\n            );\n            td.classList.toggle(\n                \"psp-row-selected\",\n                id.length === selected.length && key_match\n            );\n            td.classList.toggle(\n                \"psp-row-subselected\",\n                id.length !== selected.length && key_match\n            );\n        }\n    }\n\n    for (const th of regularTable.querySelectorAll(\"tbody th\")) {\n        const meta = regularTable.getMeta(th);\n        const id = this._ids[meta.y - meta.y0];\n        if (!has_selected || !!id[meta.row_header_x]) {\n            th.classList.toggle(\"psp-row-selected\", false);\n            th.classList.toggle(\"psp-row-subselected\", false);\n        } else {\n            const key_match = selected.reduce(\n                (agg, x, i) => agg && x === id[i],\n                true\n            );\n            th.classList.toggle(\n                \"psp-row-selected\",\n                id.length === selected.length && key_match\n            );\n            th.classList.toggle(\n                \"psp-row-subselected\",\n                id.length !== selected.length && key_match\n            );\n        }\n    }\n}\n\nexport function configureRowSelectable(table, viewer) {\n    table.addStyleListener(selectionStyleListener.bind(this, table, viewer));\n    table.addEventListener(\n        \"mousedown\",\n        selectionListener.bind(this, table, viewer)\n    );\n}\n\nexport async function deselect(regularTable) {\n    selected_rows_map.delete(regularTable);\n    for (const td of regularTable.querySelectorAll(\"td,th\")) {\n        td.classList.toggle(\"psp-row-selected\", false);\n        td.classList.toggle(\"psp-row-subselected\", false);\n    }\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nimport getCellConfig from \"./getCellConfig\";\n\nasync function clickListener(table, viewer, event) {\n    const meta = table.getMeta(event.target);\n    if (!meta) return;\n    const {x, y} = meta;\n\n    const {row, column_names, config} = await getCellConfig(this, y, x);\n\n    viewer.dispatchEvent(\n        new CustomEvent(\"perspective-click\", {\n            bubbles: true,\n            composed: true,\n            detail: {\n                row,\n                column_names,\n                config,\n            },\n        })\n    );\n}\n\nexport function configureClick(table, viewer) {\n    table.addEventListener(\"click\", clickListener.bind(this, table, viewer));\n}\n", "/******************************************************************************\n *\n * Copyright (c) 2017, the Perspective Authors.\n *\n * This file is part of the Perspective library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\n\nconst selected_position_map = new WeakMap();\nimport {PLUGIN_SYMBOL} from \"./plugin_menu.js\";\nfunction lock(body) {\n    let lock;\n    return async function (...args) {\n        if (!!lock && (await lock) && !!lock) {\n            return;\n        }\n\n        let resolve;\n        lock = new Promise((x) => (resolve = x));\n        await body.apply(this, args);\n        lock = undefined;\n        resolve();\n    };\n}\n\nfunction getPos() {\n    if (this.isContentEditable) {\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(this);\n        range.setEnd(_range.endContainer, _range.endOffset);\n        return range.toString().length;\n    } else {\n        return this.target.selectionStart;\n    }\n}\n\nfunction write(table, model, active_cell) {\n    const meta = table.getMeta(active_cell);\n    const type = model._schema[model._column_paths[meta.x]];\n    if (meta) {\n        let text = active_cell.textContent;\n        const id = model._ids[meta.y - meta.y0];\n        if (type === \"float\" || type === \"integer\") {\n            text = parseFloat(text.replace(/,/g, \"\"));\n            if (isNaN(text)) {\n                return false;\n            }\n        } else if (type === \"date\" || type === \"datetime\") {\n            text = Date.parse(text);\n            if (isNaN(text)) {\n                return false;\n            }\n        } else if (type === \"boolean\") {\n            text = text === \"check\" ? false : text === \"close\" ? true : null;\n        }\n\n        const msg = {\n            __INDEX__: id,\n            [model._column_paths[meta.x]]: text,\n        };\n\n        model._table.update([msg], {port_id: model._edit_port});\n        return true;\n    }\n}\n\nfunction isEditable(viewer, allowed = false) {\n    const has_pivots =\n        this._config.group_by.length === 0 &&\n        this._config.split_by.length === 0;\n    const selectable = viewer.hasAttribute(\"selectable\");\n    const editable = allowed || !!viewer.children[0]._is_edit_mode;\n    return has_pivots && !selectable && editable;\n}\n\nconst moveSelection = lock(async function (table, active_cell, dx, dy) {\n    const meta = table.getMeta(active_cell);\n    const num_columns = this._column_paths.length;\n    const num_rows = this._num_rows;\n    const selected_position = selected_position_map.get(table);\n    if (!selected_position) {\n        return;\n    }\n\n    if (meta.x + dx < num_columns && 0 <= meta.x + dx) {\n        selected_position.x = meta.x + dx;\n    }\n\n    if (meta.y + dy < num_rows && 0 <= meta.y + dy) {\n        selected_position.y = meta.y + dy;\n    }\n\n    const xmin = Math.max(meta.x0 - 10, 0);\n    const xmax = Math.min(meta.x0 + 10, num_columns);\n    const ymin = Math.max(meta.y0 - 5, 0);\n    const ymax = Math.min(meta.y0 + 10, num_rows);\n    let x = meta.x0 + dx,\n        y = meta.y0 + dy;\n    while (\n        !focusStyleListener(table) &&\n        x >= xmin &&\n        x < xmax &&\n        y >= ymin &&\n        y < ymax\n    ) {\n        await table.scrollToCell(x, y, num_columns, num_rows);\n        selected_position_map.set(table, selected_position);\n        x += dx;\n        y += dy;\n    }\n});\n\n// Styles\n\nfunction editableStyleListener(table, viewer) {\n    // Independently check \"editable\" and `isEditable()`, so we can skip\n    // the styler entirely if editing was disabled at the time of element\n    // creation, but toggle in when e.g. pivots or selectable will\n    // affect editability.\n    const plugins = table[PLUGIN_SYMBOL] || {};\n    const edit = isEditable.call(this, viewer);\n    table.parentElement.classList.toggle(\n        \"edit-mode-allowed\",\n        isEditable.call(this, viewer, true)\n    );\n\n    for (const td of table.querySelectorAll(\"td\")) {\n        const meta = table.getMeta(td);\n        const type = this.get_psp_type(meta);\n        if (edit && this._is_editable[meta.x]) {\n            const col_name = meta.column_header[meta.column_header.length - 1];\n            if (type === \"string\" && plugins[col_name]?.format === \"link\") {\n                td.toggleAttribute(\"contenteditable\", false);\n                td.classList.toggle(\"boolean-editable\", false);\n            } else if (type === \"boolean\") {\n                td.toggleAttribute(\"contenteditable\", false);\n                td.classList.toggle(\"boolean-editable\", meta.user !== null);\n            } else {\n                if (edit !== td.hasAttribute(\"contenteditable\")) {\n                    td.toggleAttribute(\"contenteditable\", edit);\n                }\n                td.classList.toggle(\"boolean-editable\", false);\n            }\n        } else {\n            td.toggleAttribute(\"contenteditable\", false);\n            td.classList.toggle(\"boolean-editable\", false);\n        }\n    }\n}\n\nconst focusStyleListener = (table) => {\n    const tds = table.querySelectorAll(\"td\");\n    const selected_position = selected_position_map.get(table);\n    if (selected_position) {\n        for (const td of tds) {\n            const meta = table.getMeta(td);\n            if (\n                meta.x === selected_position.x &&\n                meta.y === selected_position.y\n            ) {\n                if (document.activeElement !== td) {\n                    td.focus({preventScroll: true});\n                }\n                return true;\n            }\n        }\n        if (\n            document.activeElement !== document.body &&\n            table.contains(document.activeElement)\n        ) {\n            document.activeElement.blur();\n        }\n    }\n};\n\n// Events\n\nfunction keydownListener(table, viewer, event) {\n    if (!isEditable.call(this, viewer)) {\n        return;\n    }\n    const target = document.activeElement;\n    event.target.classList.remove(\"psp-error\");\n    switch (event.keyCode) {\n        case 13:\n            event.preventDefault();\n            if (event.shiftKey) {\n                moveSelection.call(this, table, target, 0, -1);\n            } else {\n                moveSelection.call(this, table, target, 0, 1);\n            }\n            break;\n        case 37:\n            if (getPos.call(target) == 0) {\n                event.preventDefault();\n                moveSelection.call(this, table, target, -1, 0);\n            }\n            break;\n        case 38:\n            event.preventDefault();\n            moveSelection.call(this, table, target, 0, -1);\n            break;\n        case 39:\n            if (getPos.call(target) == target.textContent.length) {\n                event.preventDefault();\n                moveSelection.call(this, table, target, 1, 0);\n            }\n            break;\n        case 40:\n            event.preventDefault();\n            moveSelection.call(this, table, target, 0, 1);\n            break;\n        default:\n    }\n}\n\nfunction focusoutListener(table, viewer, event) {\n    if (isEditable.call(this, viewer) && selected_position_map.has(table)) {\n        event.target.classList.remove(\"psp-error\");\n        const selectedPosition = selected_position_map.get(table);\n        selected_position_map.delete(table);\n        if (selectedPosition.content !== event.target.textContent) {\n            if (!write(table, this, event.target)) {\n                event.target.textContent = selectedPosition.content;\n                event.target.classList.add(\"psp-error\");\n                event.target.focus();\n            }\n        }\n    }\n}\n\nfunction focusinListener(table, viewer, event) {\n    const meta = table.getMeta(event.target);\n    if (meta) {\n        const new_state = {\n            x: meta.x,\n            y: meta.y,\n            content: event.target.textContent,\n        };\n        selected_position_map.set(table, new_state);\n    }\n}\n\nfunction clickListener(table, _viewer, event) {\n    const meta = table.getMeta(event.target);\n    if (typeof meta?.x !== \"undefined\") {\n        const is_all_editable = isEditable.call(this, _viewer);\n        const is_editable = this._is_editable[meta.x];\n        const is_bool = this.get_psp_type(meta) === \"boolean\";\n        const is_null = event.target.textContent === \"-\";\n        if (is_all_editable && is_editable && is_bool && !is_null) {\n            write(table, this, event.target);\n        }\n    }\n}\n\n// Plugin\n\nexport async function configureEditable(table, viewer) {\n    this._edit_port = await viewer.getEditPort();\n    table.addStyleListener(editableStyleListener.bind(this, table, viewer));\n    table.addStyleListener(focusStyleListener.bind(this, table, viewer));\n    table.addEventListener(\"click\", clickListener.bind(this, table, viewer));\n    table.addEventListener(\n        \"focusin\",\n        focusinListener.bind(this, table, viewer)\n    );\n    table.addEventListener(\n        \"focusout\",\n        focusoutListener.bind(this, table, viewer)\n    );\n    table.addEventListener(\n        \"keydown\",\n        keydownListener.bind(this, table, viewer)\n    );\n}\n"],
  "mappings": "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",
  "names": []
}
